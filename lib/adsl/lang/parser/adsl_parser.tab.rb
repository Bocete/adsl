#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/lang/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
  module Lang
    module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 232)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'99,98,95,97,72,87,90,91,92,94,93,96,99,98,95,97,99,224,90,91,92,94,93',
'96,99,98,95,97,161,46,90,91,92,94,93,96,74,75,76,181,72,99,98,38,39',
'160,85,159,32,33,34,47,30,29,57,53,86,182,55,56,74,75,76,118,117,184',
'58,59,60,77,37,180,36,35,44,45,40,43,42,78,48,49,50,183,51,223,46,156',
'61,28,151,169,176,133,73,54,25,116,115,31,38,39,179,175,168,32,33,34',
'47,30,29,57,53,118,117,55,56,99,98,215,140,139,173,58,59,60,212,37,136',
'36,35,44,45,40,43,42,192,48,49,50,46,51,140,139,193,61,28,116,115,140',
'139,194,54,25,38,39,31,99,98,32,33,34,47,30,29,57,53,118,117,55,56,99',
'98,95,97,174,175,58,59,60,197,37,124,36,35,44,45,40,43,42,164,48,49',
'50,46,51,122,201,72,61,28,116,115,112,204,111,54,25,38,39,31,110,105',
'32,33,34,47,30,29,57,53,104,103,55,56,10,15,-11,101,100,11,58,59,60',
'171,37,12,36,35,44,45,40,43,42,216,48,49,50,14,51,88,177,165,61,28,99',
'98,95,97,13,54,25,84,46,31,99,98,95,97,170,220,90,91,92,94,93,96,38',
'39,166,68,67,32,33,34,47,30,29,57,53,66,65,55,56,99,98,95,97,222,24',
'58,59,60,225,37,23,36,35,44,45,40,43,42,16,48,49,50,46,51,227,228,230',
'61,28,231,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,',
',58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54',
'25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36',
'35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32',
'33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42',
',48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57',
'53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51',
',,,26,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,',
',58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54',
'25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36',
'35,44,45,40,43,42,,48,49,50,46,51,,,,154,28,,,,,,54,25,38,39,31,,,32',
'33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42',
',48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57',
'53,,,55,56,10,15,-11,,,11,58,59,60,,37,12,36,35,44,45,40,43,42,,48,49',
'50,14,51,,,,61,28,,,,,13,54,25,,46,31,99,98,95,97,,,90,91,92,94,93,96',
'38,39,,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44',
'45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34',
'47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48',
'49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,',
',55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61',
'28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59',
'60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38',
'39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44',
'45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34',
'47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48',
'49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,',
',55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61',
'28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59',
'60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38',
'39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44',
'45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34',
'47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48',
'49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,',
',55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61',
'28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59',
'60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38',
'39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44',
'45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34',
'47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48',
'49,50,46,51,,,,61,131,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53',
',,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,',
'61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58',
'59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25',
'38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35',
'44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33',
'34,47,30,29,57,53,,,55,56,10,15,-11,,,11,58,59,60,,37,12,36,35,44,45',
'40,43,42,,48,49,50,14,51,,,,61,28,,,,,13,54,25,,46,31,99,98,95,97,,',
'90,91,92,94,93,96,38,39,,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58',
'59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25',
'38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,10,15,-11,,,11,58,59,60,',
'37,12,36,35,44,45,40,43,42,,48,49,50,14,51,,,,61,28,,,,,13,54,25,,46',
'31,99,98,95,97,,,90,91,92,94,93,96,38,39,,,,32,33,34,47,30,29,57,53',
',,55,56,10,15,-11,,,11,58,59,60,,37,12,36,35,44,45,40,43,42,,48,49,50',
'14,51,,,,61,28,,,,,13,54,25,,46,31,99,98,95,97,,,90,91,92,94,93,96,38',
'39,,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45',
'40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47',
'30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49',
'50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55',
'56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28',
',,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60',
',37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39',
'31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45',
'40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47',
'30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49',
'50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55',
'56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28',
',,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60',
',37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39',
'31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45',
'40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47',
'30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49',
'50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55',
'56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28',
',,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60',
',37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39',
'31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45',
'40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47',
'30,29,57,53,,,55,56,10,15,-11,,,11,58,59,60,,37,12,36,35,44,45,40,43',
'42,,48,49,50,14,51,,,,61,28,,,,,13,54,25,,46,31,99,98,95,97,,,90,91',
'92,94,93,96,38,39,,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60',
',37,,36,35,44,45,40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39',
'31,,,32,33,34,47,30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45',
'40,43,42,,48,49,50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47',
'30,29,57,53,,,55,56,,,,,,,58,59,60,,37,,36,35,44,45,40,43,42,,48,49',
'50,46,51,,,,61,28,,,,,,54,25,38,39,31,,,32,33,34,47,30,29,57,53,,,55',
'56,10,15,-11,,,11,58,59,60,,37,12,36,35,44,45,40,43,42,,48,49,50,14',
'51,,,,61,28,,,,,13,54,25,,,31,99,98,95,97,,,90,91,92,94,93,96,99,98',
'95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97',
',,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,,188,187,,99,98',
'95,97,,205,90,91,92,188,187,,99,98,95,97,,218,90,91,92,94,93,96,99,98',
'95,97,,219,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95',
'97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,',
',90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90',
'91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92',
'94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93',
'96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99',
'98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95',
'97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,',
',90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90',
'91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92',
'94,93,96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93',
'96,99,98,95,97,,,90,91,92,94,93,96,99,98,95,97,,,90,91,92,94,93,99,98',
'95,97,,,90,91,92' ]
        racc_action_table = arr = ::Array.new(3355, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'152,152,152,152,154,38,152,152,152,152,152,152,155,155,155,155,150,215',
'155,155,155,155,155,155,80,80,80,80,112,96,80,80,80,80,80,80,130,130',
'130,153,26,149,149,96,96,111,37,110,96,96,96,96,96,96,96,96,37,154,96',
'96,27,27,27,105,105,156,96,96,96,29,96,152,96,96,96,96,96,96,96,29,96',
'96,96,155,96,215,33,104,96,96,99,130,139,80,26,96,96,105,105,96,33,33',
'141,141,122,33,33,33,33,33,33,33,33,192,192,33,33,89,89,195,88,88,136',
'33,33,33,195,33,86,33,33,33,33,33,33,33,163,33,33,33,84,33,87,87,164',
'33,33,192,192,175,175,165,33,33,84,84,33,147,147,84,84,84,84,84,84,84',
'84,63,63,84,84,144,144,144,144,137,137,84,84,84,172,84,71,84,84,84,84',
'84,84,84,119,84,84,84,161,84,68,178,61,84,84,63,63,60,183,59,84,84,161',
'161,84,58,51,161,161,161,161,161,161,161,161,50,49,161,161,0,0,0,43',
'42,0,161,161,161,134,161,0,161,161,161,161,161,161,161,196,161,161,161',
'0,161,39,140,120,161,161,142,142,142,142,0,161,161,36,106,161,106,106',
'106,106,131,204,106,106,106,106,106,106,106,106,121,23,16,106,106,106',
'106,106,106,106,106,15,14,106,106,143,143,143,143,214,11,106,106,106',
'216,106,9,106,106,106,106,106,106,106,1,106,106,106,160,106,222,223',
'227,106,106,230,,,,,106,106,160,160,106,,,160,160,160,160,160,160,160',
'160,,,160,160,,,,,,,160,160,160,,160,,160,160,160,160,160,160,160,,160',
'160,160,157,160,,,,160,160,,,,,,160,160,157,157,160,,,157,157,157,157',
'157,157,157,157,,,157,157,,,,,,,157,157,157,,157,,157,157,157,157,157',
'157,157,,157,157,157,159,157,,,,157,157,,,,,,157,157,159,159,157,,,159',
'159,159,159,159,159,159,159,,,159,159,,,,,,,159,159,159,,159,,159,159',
'159,159,159,159,159,,159,159,159,12,159,,,,159,159,,,,,,159,159,12,12',
'159,,,12,12,12,12,12,12,12,12,,,12,12,,,,,,,12,12,12,,12,,12,12,12,12',
'12,12,12,,12,12,12,13,12,,,,12,12,,,,,,12,12,13,13,12,,,13,13,13,13',
'13,13,13,13,,,13,13,,,,,,,13,13,13,,13,,13,13,13,13,13,13,13,,13,13',
'13,103,13,,,,13,13,,,,,,13,13,103,103,13,,,103,103,103,103,103,103,103',
'103,,,103,103,,,,,,,103,103,103,,103,,103,103,103,103,103,103,103,,103',
'103,103,101,103,,,,103,103,,,,,,103,103,101,101,103,,,101,101,101,101',
'101,101,101,101,,,101,101,,,,,,,101,101,101,,101,,101,101,101,101,101',
'101,101,,101,101,101,100,101,,,,101,101,,,,,,101,101,100,100,101,,,100',
'100,100,100,100,100,100,100,,,100,100,8,8,8,,,8,100,100,100,,100,8,100',
'100,100,100,100,100,100,,100,100,100,8,100,,,,100,100,,,,,8,100,100',
',207,100,207,207,207,207,,,207,207,207,207,207,207,207,207,,,,207,207',
'207,207,207,207,207,207,,,207,207,,,,,,,207,207,207,,207,,207,207,207',
'207,207,207,207,,207,207,207,73,207,,,,207,207,,,,,,207,207,73,73,207',
',,73,73,73,73,73,73,73,73,,,73,73,,,,,,,73,73,73,,73,,73,73,73,73,73',
'73,73,,73,73,73,25,73,,,,73,73,,,,,,73,73,25,25,73,,,25,25,25,25,25',
'25,25,25,,,25,25,,,,,,,25,25,25,,25,,25,25,25,25,25,25,25,,25,25,25',
'90,25,,,,25,25,,,,,,25,25,90,90,25,,,90,90,90,90,90,90,90,90,,,90,90',
',,,,,,90,90,90,,90,,90,90,90,90,90,90,90,,90,90,90,98,90,,,,90,90,,',
',,,90,90,98,98,90,,,98,98,98,98,98,98,98,98,,,98,98,,,,,,,98,98,98,',
'98,,98,98,98,98,98,98,98,,98,98,98,91,98,,,,98,98,,,,,,98,98,91,91,98',
',,91,91,91,91,91,91,91,91,,,91,91,,,,,,,91,91,91,,91,,91,91,91,91,91',
'91,91,,91,91,91,30,91,,,,91,91,,,,,,91,91,30,30,91,,,30,30,30,30,30',
'30,30,30,,,30,30,,,,,,,30,30,30,,30,,30,30,30,30,30,30,30,,30,30,30',
'31,30,,,,30,30,,,,,,30,30,31,31,30,,,31,31,31,31,31,31,31,31,,,31,31',
',,,,,,31,31,31,,31,,31,31,31,31,31,31,31,,31,31,31,32,31,,,,31,31,,',
',,,31,31,32,32,31,,,32,32,32,32,32,32,32,32,,,32,32,,,,,,,32,32,32,',
'32,,32,32,32,32,32,32,32,,32,32,32,97,32,,,,32,32,,,,,,32,32,97,97,32',
',,97,97,97,97,97,97,97,97,,,97,97,,,,,,,97,97,97,,97,,97,97,97,97,97',
'97,97,,97,97,97,34,97,,,,97,97,,,,,,97,97,34,34,97,,,34,34,34,34,34',
'34,34,34,,,34,34,,,,,,,34,34,34,,34,,34,34,34,34,34,34,34,,34,34,34',
'113,34,,,,34,34,,,,,,34,34,113,113,34,,,113,113,113,113,113,113,113',
'113,,,113,113,,,,,,,113,113,113,,113,,113,113,113,113,113,113,113,,113',
'113,113,95,113,,,,113,113,,,,,,113,113,95,95,113,,,95,95,95,95,95,95',
'95,95,,,95,95,,,,,,,95,95,95,,95,,95,95,95,95,95,95,95,,95,95,95,78',
'95,,,,95,95,,,,,,95,95,78,78,95,,,78,78,78,78,78,78,78,78,,,78,78,,',
',,,,78,78,78,,78,,78,78,78,78,78,78,78,,78,78,78,197,78,,,,78,78,,,',
',,78,78,197,197,78,,,197,197,197,197,197,197,197,197,,,197,197,,,,,',
',197,197,197,,197,,197,197,197,197,197,197,197,,197,197,197,40,197,',
',,197,197,,,,,,197,197,40,40,197,,,40,40,40,40,40,40,40,40,,,40,40,',
',,,,,40,40,40,,40,,40,40,40,40,40,40,40,,40,40,40,94,40,,,,40,40,,,',
',,40,40,94,94,40,,,94,94,94,94,94,94,94,94,,,94,94,,,,,,,94,94,94,,94',
',94,94,94,94,94,94,94,,94,94,94,76,94,,,,94,94,,,,,,94,94,76,76,94,',
',76,76,76,76,76,76,76,76,,,76,76,7,7,7,,,7,76,76,76,,76,7,76,76,76,76',
'76,76,76,,76,76,76,7,76,,,,76,76,,,,,7,76,76,,191,76,191,191,191,191',
',,191,191,191,191,191,191,191,191,,,,191,191,191,191,191,191,191,191',
',,191,191,,,,,,,191,191,191,,191,,191,191,191,191,191,191,191,,191,191',
'191,47,191,,,,191,191,,,,,,191,191,47,47,191,,,47,47,47,47,47,47,47',
'47,,,47,47,3,3,3,,,3,47,47,47,,47,3,47,47,47,47,47,47,47,,47,47,47,3',
'47,,,,47,47,,,,,3,47,47,,190,47,190,190,190,190,,,190,190,190,190,190',
'190,190,190,,,,190,190,190,190,190,190,190,190,,,190,190,4,4,4,,,4,190',
'190,190,,190,4,190,190,190,190,190,190,190,,190,190,190,4,190,,,,190',
'190,,,,,4,190,190,,189,190,189,189,189,189,,,189,189,189,189,189,189',
'189,189,,,,189,189,189,189,189,189,189,189,,,189,189,,,,,,,189,189,189',
',189,,189,189,189,189,189,189,189,,189,189,189,188,189,,,,189,189,,',
',,,189,189,188,188,189,,,188,188,188,188,188,188,188,188,,,188,188,',
',,,,,188,188,188,,188,,188,188,188,188,188,188,188,,188,188,188,53,188',
',,,188,188,,,,,,188,188,53,53,188,,,53,53,53,53,53,53,53,53,,,53,53',
',,,,,,53,53,53,,53,,53,53,53,53,53,53,53,,53,53,53,55,53,,,,53,53,,',
',,,53,53,55,55,53,,,55,55,55,55,55,55,55,55,,,55,55,,,,,,,55,55,55,',
'55,,55,55,55,55,55,55,55,,55,55,55,56,55,,,,55,55,,,,,,55,55,56,56,55',
',,56,56,56,56,56,56,56,56,,,56,56,,,,,,,56,56,56,,56,,56,56,56,56,56',
'56,56,,56,56,56,57,56,,,,56,56,,,,,,56,56,57,57,56,,,57,57,57,57,57',
'57,57,57,,,57,57,,,,,,,57,57,57,,57,,57,57,57,57,57,57,57,,57,57,57',
'187,57,,,,57,57,,,,,,57,57,187,187,57,,,187,187,187,187,187,187,187',
'187,,,187,187,,,,,,,187,187,187,,187,,187,187,187,187,187,187,187,,187',
'187,187,75,187,,,,187,187,,,,,,187,187,75,75,187,,,75,75,75,75,75,75',
'75,75,,,75,75,,,,,,,75,75,75,,75,,75,75,75,75,75,75,75,,75,75,75,180',
'75,,,,75,75,,,,,,75,75,180,180,75,,,180,180,180,180,180,180,180,180',
',,180,180,,,,,,,180,180,180,,180,,180,180,180,180,180,180,180,,180,180',
'180,179,180,,,,180,180,,,,,,180,180,179,179,180,,,179,179,179,179,179',
'179,179,179,,,179,179,,,,,,,179,179,179,,179,,179,179,179,179,179,179',
'179,,179,179,179,93,179,,,,179,179,,,,,,179,179,93,93,179,,,93,93,93',
'93,93,93,93,93,,,93,93,,,,,,,93,93,93,,93,,93,93,93,93,93,93,93,,93',
'93,93,74,93,,,,93,93,,,,,,93,93,74,74,93,,,74,74,74,74,74,74,74,74,',
',74,74,,,,,,,74,74,74,,74,,74,74,74,74,74,74,74,,74,74,74,177,74,,,',
'74,74,,,,,,74,74,177,177,74,,,177,177,177,177,177,177,177,177,,,177',
'177,,,,,,,177,177,177,,177,,177,177,177,177,177,177,177,,177,177,177',
'92,177,,,,177,177,,,,,,177,177,92,92,177,,,92,92,92,92,92,92,92,92,',
',92,92,6,6,6,,,6,92,92,92,,92,6,92,92,92,92,92,92,92,,92,92,92,6,92',
',,,92,92,,,,,6,92,92,,70,92,70,70,70,70,,,70,70,70,70,70,70,70,70,,',
',70,70,70,70,70,70,70,70,,,70,70,,,,,,,70,70,70,,70,,70,70,70,70,70',
'70,70,,70,70,70,174,70,,,,70,70,,,,,,70,70,174,174,70,,,174,174,174',
'174,174,174,174,174,,,174,174,,,,,,,174,174,174,,174,,174,174,174,174',
'174,174,174,,174,174,174,72,174,,,,174,174,,,,,,174,174,72,72,174,,',
'72,72,72,72,72,72,72,72,,,72,72,,,,,,,72,72,72,,72,,72,72,72,72,72,72',
'72,,72,72,72,24,72,,,,72,72,,,,,,72,72,24,24,72,,,24,24,24,24,24,24',
'24,24,,,24,24,5,5,5,,,5,24,24,24,,24,5,24,24,24,24,24,24,24,,24,24,24',
'5,24,,,,24,24,,,,,5,24,24,,,24,185,185,185,185,,,185,185,185,185,185',
'185,198,198,198,198,,,198,198,198,198,198,198,203,203,203,203,,,203',
'203,203,203,203,203,221,221,221,221,,,221,221,221,221,221,221,158,158',
'158,158,,,158,158,158,158,158,158,,221,221,,145,145,145,145,,185,145',
'145,145,158,158,,217,217,217,217,,198,217,217,217,217,217,217,162,162',
'162,162,,203,162,162,162,162,162,162,206,206,206,206,,,206,206,206,206',
'206,206,83,83,83,83,,,83,83,83,83,83,83,208,208,208,208,,,208,208,208',
'208,208,208,209,209,209,209,,,209,209,209,209,209,209,102,102,102,102',
',,102,102,102,102,102,102,210,210,210,210,,,210,210,210,210,210,210',
'202,202,202,202,,,202,202,202,202,202,202,200,200,200,200,,,200,200',
'200,200,200,200,41,41,41,41,,,41,41,41,41,41,41,128,128,128,128,,,128',
'128,128,128,128,128,108,108,108,108,,,108,108,108,108,108,108,109,109',
'109,109,,,109,109,109,109,109,109,62,62,62,62,,,62,62,62,62,62,62,69',
'69,69,69,,,69,69,69,69,69,69,79,79,79,79,,,79,79,79,79,79,79,81,81,81',
'81,,,81,81,81,81,81,81,135,135,135,135,,,135,135,135,135,135,135,132',
'132,132,132,,,132,132,132,132,132,132,82,82,82,82,,,82,82,82,82,82,82',
'129,129,129,129,,,129,129,129,129,129,129,125,125,125,125,,,125,125',
'125,125,125,125,126,126,126,126,,,126,126,126,126,126,126,127,127,127',
'127,,,127,127,127,127,127,127,107,107,107,107,,,107,107,107,107,107',
'107,148,148,148,148,,,148,148,148,148,148,146,146,146,146,,,146,146',
'146' ]
        racc_action_check = arr = ::Array.new(3355, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   192,   313,   nil,  1803,  1872,  2874,  2643,  1680,   693,   270,
   nil,   238,   477,   531,   230,   229,   281,   nil,   nil,   nil,
   nil,   nil,   nil,   218,  2874,   870,    20,    42,   nil,     7,
  1086,  1140,  1194,    84,  1302,   nil,   190,   -16,   -67,   178,
  1572,  3139,   157,   156,   nil,   nil,   nil,  1803,   nil,   150,
   149,   140,   nil,  2049,   nil,  2103,  2157,  2211,   150,   144,
   142,   178,  3187,   142,   nil,   nil,   nil,   nil,   160,  3199,
  2712,   112,  2820,   816,  2535,  2319,  1680,   nil,  1464,  3211,
    20,  3223,  3259,  3055,   138,   nil,    66,    81,    59,   113,
   924,  1032,  2643,  2481,  1626,  1410,    27,  1248,   978,    29,
   693,   639,  3091,   585,    26,    38,   261,  3319,  3163,  3175,
   -27,   -29,   -46,  1356,   nil,   nil,   nil,   nil,   nil,   115,
   177,   210,    42,   nil,   nil,  3283,  3295,  3307,  3151,  3271,
    18,   196,  3247,   nil,   161,  3235,    49,   101,   nil,    31,
   246,    28,   251,   290,   167,  3007,  3342,   153,  3331,    37,
    12,   nil,    -4,   -34,   -16,     8,    -8,   369,  2991,   423,
   315,   192,  3031,    61,    83,    90,   nil,   nil,   nil,   nil,
   nil,   nil,   105,   nil,  2766,    88,   nil,  2589,   124,  2427,
  2373,   nil,   nil,   143,   nil,  2943,   nil,  2265,  1995,  1941,
  1872,  1749,    88,   nil,   nil,    56,   169,  1518,  2955,   nil,
  3127,   nil,  3115,  2967,   197,   nil,  3043,   762,  3067,  3079,
  3103,   nil,   nil,   nil,   236,    14,   241,  3019,   nil,   nil,
   nil,  2979,   258,   257,   nil,   nil,   nil,   284,   nil,   nil,
   263,   nil ]

racc_action_default = [
    -8,  -112,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -112,
   -10,  -112,  -112,  -112,  -105,  -112,  -112,    -2,    -3,    -4,
    -5,    -6,    -7,  -112,  -112,   -24,   -26,   -28,   -29,  -112,
  -112,  -112,  -112,  -112,  -112,   -40,  -112,  -112,  -112,  -112,
  -112,   -81,  -112,  -112,   -59,   -60,   -61,  -112,   -63,  -112,
  -112,  -112,   -68,  -112,   -70,  -112,  -112,  -112,  -112,  -112,
  -112,   -26,   -83,  -112,  -104,  -108,  -103,   232,   -13,   -22,
   -24,  -112,  -112,  -112,  -112,  -112,  -112,   -30,  -112,   -32,
  -112,   -37,   -38,   -39,  -112,   -43,  -112,  -112,  -112,   -47,
  -112,  -112,  -112,  -112,  -112,  -112,  -112,  -112,  -112,  -112,
  -112,  -112,   -62,  -112,  -112,  -112,  -112,   -71,   -72,   -73,
  -112,  -112,  -112,  -112,   -87,   -88,   -89,   -90,   -91,  -106,
  -101,  -112,  -112,   -23,   -25,   -27,   -82,   -33,   -34,   -35,
   -28,   -29,  -112,   -36,  -112,   -98,  -112,  -112,   -93,  -112,
  -112,  -100,   -48,   -49,   -50,   -51,   -52,   -54,   -55,   -56,
   -58,   -74,  -112,  -112,   -26,  -112,  -112,  -112,   -80,  -112,
  -112,  -112,   -84,   -85,  -112,  -112,   -15,   -12,  -111,   -31,
   -42,   -41,   -96,   -44,  -112,  -112,   -94,  -112,  -112,  -112,
  -112,   -57,   -64,  -112,   -66,  -112,   -69,  -112,  -112,  -112,
  -112,  -112,  -112,  -107,  -102,  -112,  -109,  -112,  -112,   -92,
   -95,   -46,   -99,  -112,  -112,   -67,   -78,  -112,   -75,   -76,
   -77,   -86,    -9,   -14,  -112,   -17,  -112,   -97,   -45,   -53,
   -65,   -80,  -112,  -112,   -19,  -110,   -79,   -21,   -18,   -16,
  -112,   -20 ]

racc_goto_table = [
    41,    62,   186,    71,   113,     1,   134,   137,   141,   214,
   213,   130,    69,   167,   229,   178,   195,   121,    79,    80,
    81,    82,    83,   153,    63,   211,     2,   163,    89,    17,
    18,    19,    20,    21,    22,   102,   199,   172,   120,    64,
   119,   106,   196,   107,   108,   109,   157,   nil,   123,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   125,   126,   127,   128,   129,   226,   132,   nil,   nil,   nil,
   nil,   nil,   135,   nil,   nil,   nil,   nil,   nil,   142,   143,
   144,   145,   146,   147,   148,   149,   150,   nil,   152,   135,
   nil,   155,   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,
   nil,   162,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   185,   nil,   189,   190,   191,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   198,   nil,   nil,   200,   nil,   202,   203,   nil,
   nil,   nil,   nil,   nil,   nil,   206,   207,   208,   209,   210,
   nil,   nil,   nil,   nil,   nil,   217,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   221 ]

racc_goto_check = [
    16,    16,    24,    17,    22,     1,    19,    20,    20,    14,
    13,    18,    16,    12,    15,    21,    11,    10,    16,    16,
    16,    16,    16,    19,    25,    26,     2,    27,    16,     2,
     2,     2,     2,     2,     2,    16,    28,    29,    30,    31,
    32,    16,    33,    16,    16,    16,    22,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,    16,    16,    16,    16,    24,    16,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,    16,    16,
    16,    16,    16,    16,    16,    16,    16,   nil,    16,    16,
   nil,    16,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    16,    16,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,    16,   nil,    16,    16,   nil,
   nil,   nil,   nil,   nil,   nil,    16,    16,    16,    16,    16,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,     5,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -51,  -150,  -109,  -185,  -186,  -213,   -12,   -22,   -67,   -78,
   -80,  -126,   -59,   nil,  -156,    10,  -167,   -87,  -139,   -98,
   -28,    25,   -25,  -126 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,    70,   nil,    27,   nil,
   nil,   nil,   nil,    52,   nil,   nil,   114,   nil,   138,   nil,
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 77, :_reduce_1,
  2, 78, :_reduce_2,
  2, 78, :_reduce_3,
  2, 78, :_reduce_4,
  2, 78, :_reduce_5,
  2, 78, :_reduce_6,
  2, 78, :_reduce_7,
  0, 78, :_reduce_8,
  7, 79, :_reduce_9,
  1, 85, :_reduce_10,
  0, 85, :_reduce_11,
  2, 86, :_reduce_12,
  0, 86, :_reduce_13,
  2, 87, :_reduce_14,
  0, 87, :_reduce_15,
  4, 89, :_reduce_16,
  1, 90, :_reduce_17,
  3, 90, :_reduce_18,
  2, 90, :_reduce_19,
  2, 91, :_reduce_20,
  0, 91, :_reduce_21,
  3, 80, :_reduce_22,
  2, 93, :_reduce_23,
  0, 93, :_reduce_24,
  3, 92, :_reduce_25,
  1, 92, :_reduce_26,
  3, 92, :_reduce_27,
  1, 92, :_reduce_28,
  1, 92, :_reduce_29,
  2, 92, :_reduce_30,
  4, 92, :_reduce_31,
  2, 92, :_reduce_32,
  3, 92, :_reduce_33,
  3, 92, :_reduce_34,
  3, 92, :_reduce_35,
  3, 92, :_reduce_36,
  2, 92, :_reduce_37,
  2, 92, :_reduce_38,
  2, 92, :_reduce_39,
  1, 92, :_reduce_40,
  4, 92, :_reduce_41,
  4, 92, :_reduce_42,
  2, 92, :_reduce_43,
  4, 92, :_reduce_44,
  6, 92, :_reduce_45,
  5, 92, :_reduce_46,
  2, 92, :_reduce_47,
  3, 92, :_reduce_48,
  3, 92, :_reduce_49,
  3, 92, :_reduce_50,
  3, 92, :_reduce_51,
  3, 92, :_reduce_52,
  6, 92, :_reduce_53,
  3, 92, :_reduce_54,
  3, 92, :_reduce_55,
  3, 92, :_reduce_56,
  4, 92, :_reduce_57,
  3, 92, :_reduce_58,
  1, 92, :_reduce_59,
  1, 92, :_reduce_60,
  1, 92, :_reduce_61,
  2, 92, :_reduce_62,
  1, 92, :_reduce_63,
  4, 92, :_reduce_64,
  6, 92, :_reduce_65,
  4, 92, :_reduce_66,
  5, 92, :_reduce_67,
  1, 92, :_reduce_68,
  4, 92, :_reduce_69,
  1, 92, :_reduce_70,
  2, 92, :_reduce_71,
  2, 92, :_reduce_72,
  2, 92, :_reduce_73,
  3, 94, :_reduce_74,
  5, 99, :_reduce_75,
  5, 99, :_reduce_76,
  5, 99, :_reduce_77,
  2, 100, :_reduce_78,
  4, 100, :_reduce_79,
  0, 100, :_reduce_80,
  2, 81, :_reduce_81,
  4, 81, :_reduce_82,
  2, 84, :_reduce_83,
  4, 83, :_reduce_84,
  2, 98, :_reduce_85,
  3, 103, :_reduce_86,
  0, 103, :_reduce_87,
  1, 102, :_reduce_88,
  1, 102, :_reduce_89,
  1, 102, :_reduce_90,
  1, 102, :_reduce_91,
  3, 96, :_reduce_92,
  1, 96, :_reduce_93,
  2, 104, :_reduce_94,
  3, 104, :_reduce_95,
  2, 95, :_reduce_96,
  3, 105, :_reduce_97,
  0, 105, :_reduce_98,
  2, 97, :_reduce_99,
  0, 97, :_reduce_100,
  3, 82, :_reduce_101,
  3, 106, :_reduce_102,
  0, 106, :_reduce_103,
  1, 101, :_reduce_104,
  0, 101, :_reduce_105,
  2, 107, :_reduce_106,
  3, 108, :_reduce_107,
  0, 108, :_reduce_108,
  2, 88, :_reduce_109,
  3, 109, :_reduce_110,
  0, 109, :_reduce_111 ]

racc_reduce_n = 112

racc_shift_n = 232

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  :xor => 12,
  "<=" => 13,
  "=>" => 14,
  "<=>" => 15,
  :forall => 16,
  :exists => 17,
  "+=" => 18,
  "-=" => 19,
  "=" => 20,
  :subset => 21,
  :oneof => 22,
  :tryoneof => 23,
  :isempty => 24,
  :delete => 25,
  :create => 26,
  :assert => 27,
  :if => 28,
  :elsif => 29,
  :else => 30,
  :return => 31,
  :returnguard => 32,
  :authenticable => 33,
  :usergroup => 34,
  :class => 35,
  :extends => 36,
  :inverseof => 37,
  :action => 38,
  :foreach => 39,
  :flatforeach => 40,
  :unflatforeach => 41,
  :derefcreate => 42,
  :allof => 43,
  :invariant => 44,
  :union => 45,
  :empty => 46,
  :true => 47,
  :false => 48,
  :not => 49,
  :equal => 50,
  :implies => 51,
  :unknown => 52,
  :currentuser => 53,
  :inusergroup => 54,
  :allofusergroup => 55,
  :permit => 56,
  :permitted => 57,
  :permittedbytype => 58,
  :edit => 59,
  :read => 60,
  :IDENT => 61,
  :CLASS_IDENT => 62,
  :NUMBER => 63,
  :STRING => 64,
  :BASIC_TYPE => 65,
  :JS => 66,
  :roole => 67,
  :raize => 68,
  "{" => 69,
  "}" => 70,
  ".." => 71,
  "(" => 72,
  ")" => 73,
  ":" => 74,
  "," => 75 }

racc_nt_base = 76

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "xor",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "forall",
  "exists",
  "\"+=\"",
  "\"-=\"",
  "\"=\"",
  "subset",
  "oneof",
  "tryoneof",
  "isempty",
  "delete",
  "create",
  "assert",
  "if",
  "elsif",
  "else",
  "return",
  "returnguard",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "derefcreate",
  "allof",
  "invariant",
  "union",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "IDENT",
  "CLASS_IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "raize",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"(\"",
  "\")\"",
  "\":\"",
  "\",\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "class_ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "expr",
  "exprs",
  "member_expr",
  "comma_separated_exprs",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "perm_op_list",
  "foreach_expr",
  "optelse",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "ident_list",
  "more_idents",
  "more_class_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 23)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 32)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 34)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 35)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 36)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 37)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 38)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 40)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 49)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 51)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 52)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 55)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_17(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 64)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 65)
  def _reduce_19(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 67)
  def _reduce_20(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 68)
  def _reduce_21(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 70)
  def _reduce_22(val, _values, result)
     return ASTAction.new :lineno => val[0], :name => val[1], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 72)
  def _reduce_23(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 73)
  def _reduce_24(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 75)
  def _reduce_25(val, _values, result)
     return ASTBlock.new :lineno => val[0], :exprs => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_26(val, _values, result)
     return ASTVariableRead.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 77)
  def _reduce_27(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_28(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 79)
  def _reduce_29(val, _values, result)
     return ASTAllOf.new :lineno => val[0].lineno, :class_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_30(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_31(val, _values, result)
     return ASTDereferenceCreate.new :lineno => val[0], :objset => val[2], :rel_name => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 82)
  def _reduce_32(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_33(val, _values, result)
     return ASTCreateTup.new(:lineno => val[0].lineno,
          :objset1 => val[0].objset, :rel_name => val[0].member_name, :objset2 => val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_34(val, _values, result)
     return ASTDeleteTup.new(:lineno => val[0].lineno,
          :objset1 => val[0].objset, :rel_name => val[0].member_name, :objset2 => val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 89)
  def _reduce_35(val, _values, result)
     return ASTMemberSet.new(:lineno => val[0].lineno,
          :objset => val[0].objset, :member_name => val[0].member_name, :expr => val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 93)
  def _reduce_36(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 94)
  def _reduce_37(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 95)
  def _reduce_38(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 96)
  def _reduce_39(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 97)
  def _reduce_40(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 98)
  def _reduce_41(val, _values, result)
     return ASTUnion.new :lineno => val[0], :objsets => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 100)
  def _reduce_42(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 101)
  def _reduce_43(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 102)
  def _reduce_44(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 104)
  def _reduce_45(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 105)
  def _reduce_46(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 106)
  def _reduce_47(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 107)
  def _reduce_48(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 108)
  def _reduce_49(val, _values, result)
     return ASTOr.new  :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 109)
  def _reduce_50(val, _values, result)
     return ASTXor.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 111)
  def _reduce_51(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 113)
  def _reduce_52(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 115)
  def _reduce_53(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 117)
  def _reduce_54(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_55(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_56(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_57(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 124)
  def _reduce_58(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_59(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 126)
  def _reduce_60(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_61(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 128)
  def _reduce_62(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_63(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_64(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 134)
  def _reduce_65(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 135)
  def _reduce_66(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 136)
  def _reduce_67(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_68(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 139)
  def _reduce_69(val, _values, result)
     return ASTIf.new :lineno => val[0], :condition => val[1], :then_expr => val[2], :else_expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 140)
  def _reduce_70(val, _values, result)
     return ASTRaise.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 141)
  def _reduce_71(val, _values, result)
     return ASTReturn.new :lineno => val[0], :expr => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_72(val, _values, result)
     return ASTReturnGuard.new :lineno => val[0], :expr => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 144)
  def _reduce_73(val, _values, result)
     return ASTAssertFormula.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 149)
  def _reduce_74(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 151)
  def _reduce_75(val, _values, result)
     return ASTForEach.new(
                  :lineno => val[0], :var_name => val[1], :objset => val[3], :expr => val[4]
                )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 154)
  def _reduce_76(val, _values, result)
     return ASTForEach.new(
                  :lineno => val[0], :var_name => val[1], :objset => val[3], :expr => val[4]
                ).force_flat!(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 157)
  def _reduce_77(val, _values, result)
     return ASTForEach.new(
                  :lineno => val[0], :var_name => val[1], :objset => val[3], :expr => val[4]
                ).force_flat!(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 161)
  def _reduce_78(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 162)
  def _reduce_79(val, _values, result)
     return ASTIf.new :condition => val[1], :then_expr => val[2], :else_expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 163)
  def _reduce_80(val, _values, result)
     return ASTEmptyObjset.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 166)
  def _reduce_81(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 169)
  def _reduce_82(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 172)
  def _reduce_83(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 175)
  def _reduce_84(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 177)
  def _reduce_85(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 178)
  def _reduce_86(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 179)
  def _reduce_87(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 181)
  def _reduce_88(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 182)
  def _reduce_89(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 183)
  def _reduce_90(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 184)
  def _reduce_91(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 187)
  def _reduce_92(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 188)
  def _reduce_93(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 191)
  def _reduce_94(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 193)
  def _reduce_95(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 195)
  def _reduce_96(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 197)
  def _reduce_97(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 198)
  def _reduce_98(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 200)
  def _reduce_99(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 201)
  def _reduce_100(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 204)
  def _reduce_101(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 206)
  def _reduce_102(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 207)
  def _reduce_103(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_104(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 210)
  def _reduce_105(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 211)
  def _reduce_106(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 212)
  def _reduce_107(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 213)
  def _reduce_108(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 215)
  def _reduce_109(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 216)
  def _reduce_110(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 217)
  def _reduce_111(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


    end
  end
end
