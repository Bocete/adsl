#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/lang/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
  module Lang
    module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 235)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'101,100,97,99,74,66,92,93,94,96,95,98,101,100,97,99,103,226,92,93,94',
'96,95,98,101,100,97,99,183,47,92,93,94,96,95,98,76,77,78,102,74,142',
'141,39,40,179,79,186,33,34,35,48,31,30,58,54,80,184,56,57,76,77,78,120',
'119,90,59,60,61,87,38,185,37,36,45,46,41,44,43,88,49,50,51,182,52,225',
'47,178,62,29,138,171,89,207,75,55,26,118,117,32,39,40,176,177,175,33',
'34,35,48,31,30,58,54,120,119,56,57,142,141,217,24,25,173,59,60,61,214',
'38,194,37,36,45,46,41,44,43,195,49,50,51,47,52,181,177,196,62,29,118',
'117,101,100,199,55,26,39,40,32,101,100,33,34,35,48,31,30,58,54,120,119',
'56,57,101,100,97,99,142,141,59,60,61,86,38,172,37,36,45,46,41,44,43',
'105,49,50,51,47,52,101,100,203,62,29,118,117,170,69,206,55,26,39,40',
'32,68,67,33,34,35,48,31,30,58,54,101,168,56,57,101,100,97,99,23,167',
'59,60,61,166,38,106,37,36,45,46,41,44,43,218,49,50,51,47,52,163,162',
'161,62,29,101,100,97,99,107,55,26,39,40,32,112,222,33,34,35,48,31,30',
'58,54,158,113,56,57,10,15,-11,114,74,11,59,60,61,153,38,12,37,36,45',
'46,41,44,43,224,49,50,51,14,52,16,227,124,62,29,126,229,230,232,13,55',
'26,233,47,32,101,100,97,99,,,92,93,94,96,95,98,39,40,,,,33,34,35,48',
'31,30,58,54,,,56,57,10,15,-11,,,11,59,60,61,,38,12,37,36,45,46,41,44',
'43,,49,50,51,14,52,,,,62,29,,,,,13,55,26,,47,32,101,100,97,99,,,92,93',
'94,96,95,98,39,40,,,,33,34,35,48,31,30,58,54,,,56,57,10,15,-11,,,11',
'59,60,61,,38,12,37,36,45,46,41,44,43,,49,50,51,14,52,,,,62,29,,,,,13',
'55,26,,47,32,101,100,97,99,,,92,93,94,96,95,98,39,40,,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,27,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,133,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,10,15,-11,,,11,59,60,61,,38,12,37,36,45,46,41,44,43,,49,50,51,14',
'52,,,,62,29,,,,,13,55,26,,47,32,101,100,97,99,,,92,93,94,96,95,98,39',
'40,,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,10,15,-11,,,11,59,60,61,,38,12,37,36,45,46,41,44,43,,49,50,51,14',
'52,,,,62,29,,,,,13,55,26,,47,32,101,100,97,99,,,92,93,94,96,95,98,39',
'40,,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,156,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50',
'51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56',
'57,,,,,,,59,60,61,,38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29',
',,,,,55,26,39,40,32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,10,15,-11,,,11,59,60,61,,38,12,37,36,45,46,41,44',
'43,,49,50,51,14,52,,,,62,29,,,,,13,55,26,,47,32,101,100,97,99,,,92,93',
'94,96,95,98,39,40,,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61',
',38,,37,36,45,46,41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40',
'32,,,33,34,35,48,31,30,58,54,,,56,57,,,,,,,59,60,61,,38,,37,36,45,46',
'41,44,43,,49,50,51,47,52,,,,62,29,,,,,,55,26,39,40,32,,,33,34,35,48',
'31,30,58,54,,,56,57,10,15,-11,,,11,59,60,61,,38,12,37,36,45,46,41,44',
'43,,49,50,51,14,52,,,,62,29,,,,,13,55,26,,,32,101,100,97,99,,,92,93',
'94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93',
'94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93',
'94,96,95,98,,190,189,,101,100,97,99,,221,92,93,94,190,189,,101,100,97',
'99,,220,92,93,94,96,95,98,101,100,97,99,,135,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,98,101,100',
'97,99,,,92,93,94,96,95,98,101,100,97,99,,,92,93,94,96,95,101,100,97',
'99,,,92,93,94' ]
        racc_action_table = arr = ::Array.new(3421, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'157,157,157,157,156,14,157,157,157,157,157,157,154,154,154,154,44,217',
'154,154,154,154,154,154,187,187,187,187,155,176,187,187,187,187,187',
'187,132,132,132,43,27,89,89,176,176,142,30,158,176,176,176,176,176,176',
'176,176,30,156,176,176,28,28,28,107,107,40,176,176,176,38,176,157,176',
'176,176,176,176,176,176,38,176,176,176,154,176,217,92,141,176,176,88',
'132,39,187,27,176,176,107,107,176,92,92,139,139,138,92,92,92,92,92,92',
'92,92,194,194,92,92,177,177,197,11,11,136,92,92,92,197,92,165,92,92',
'92,92,92,92,92,166,92,92,92,93,92,143,143,167,92,92,194,194,91,91,174',
'92,92,93,93,92,149,149,93,93,93,93,93,93,93,93,64,64,93,93,146,146,146',
'146,90,90,93,93,93,37,93,133,93,93,93,93,93,93,93,50,93,93,93,199,93',
'151,151,180,93,93,64,64,124,23,185,93,93,199,199,93,16,15,199,199,199',
'199,199,199,199,199,152,123,199,199,144,144,144,144,9,122,199,199,199',
'121,199,51,199,199,199,199,199,199,199,198,199,199,199,94,199,114,113',
'112,199,199,145,145,145,145,52,199,199,94,94,199,59,206,94,94,94,94',
'94,94,94,94,106,60,94,94,0,0,0,61,62,0,94,94,94,101,94,0,94,94,94,94',
'94,94,94,216,94,94,94,0,94,1,218,69,94,94,73,224,225,229,0,94,94,232',
'193,94,193,193,193,193,,,193,193,193,193,193,193,193,193,,,,193,193',
'193,193,193,193,193,193,,,193,193,7,7,7,,,7,193,193,193,,193,7,193,193',
'193,193,193,193,193,,193,193,193,7,193,,,,193,193,,,,,7,193,193,,192',
'193,192,192,192,192,,,192,192,192,192,192,192,192,192,,,,192,192,192',
'192,192,192,192,192,,,192,192,3,3,3,,,3,192,192,192,,192,3,192,192,192',
'192,192,192,192,,192,192,192,3,192,,,,192,192,,,,,3,192,192,,191,192',
'191,191,191,191,,,191,191,191,191,191,191,191,191,,,,191,191,191,191',
'191,191,191,191,,,191,191,,,,,,,191,191,191,,191,,191,191,191,191,191',
'191,191,,191,191,191,12,191,,,,191,191,,,,,,191,191,12,12,191,,,12,12',
'12,12,12,12,12,12,,,12,12,,,,,,,12,12,12,,12,,12,12,12,12,12,12,12,',
'12,12,12,13,12,,,,12,12,,,,,,12,12,13,13,12,,,13,13,13,13,13,13,13,13',
',,13,13,,,,,,,13,13,13,,13,,13,13,13,13,13,13,13,,13,13,13,190,13,,',
',13,13,,,,,,13,13,190,190,13,,,190,190,190,190,190,190,190,190,,,190',
'190,,,,,,,190,190,190,,190,,190,190,190,190,190,190,190,,190,190,190',
'189,190,,,,190,190,,,,,,190,190,189,189,190,,,189,189,189,189,189,189',
'189,189,,,189,189,,,,,,,189,189,189,,189,,189,189,189,189,189,189,189',
',189,189,189,95,189,,,,189,189,,,,,,189,189,95,95,189,,,95,95,95,95',
'95,95,95,95,,,95,95,,,,,,,95,95,95,,95,,95,95,95,95,95,95,95,,95,95',
'95,182,95,,,,95,95,,,,,,95,95,182,182,95,,,182,182,182,182,182,182,182',
'182,,,182,182,,,,,,,182,182,182,,182,,182,182,182,182,182,182,182,,182',
'182,182,74,182,,,,182,182,,,,,,182,182,74,74,182,,,74,74,74,74,74,74',
'74,74,,,74,74,,,,,,,74,74,74,,74,,74,74,74,74,74,74,74,,74,74,74,25',
'74,,,,74,74,,,,,,74,74,25,25,74,,,25,25,25,25,25,25,25,25,,,25,25,,',
',,,,25,25,25,,25,,25,25,25,25,25,25,25,,25,25,25,26,25,,,,25,25,,,,',
',25,25,26,26,25,,,26,26,26,26,26,26,26,26,,,26,26,,,,,,,26,26,26,,26',
',26,26,26,26,26,26,26,,26,26,26,80,26,,,,26,26,,,,,,26,26,80,80,26,',
',80,80,80,80,80,80,80,80,,,80,80,,,,,,,80,80,80,,80,,80,80,80,80,80',
'80,80,,80,80,80,181,80,,,,80,80,,,,,,80,80,181,181,80,,,181,181,181',
'181,181,181,181,181,,,181,181,,,,,,,181,181,181,,181,,181,181,181,181',
'181,181,181,,181,181,181,179,181,,,,181,181,,,,,,181,181,179,179,181',
',,179,179,179,179,179,179,179,179,,,179,179,,,,,,,179,179,179,,179,',
'179,179,179,179,179,179,179,,179,179,179,31,179,,,,179,179,,,,,,179',
'179,31,31,179,,,31,31,31,31,31,31,31,31,,,31,31,,,,,,,31,31,31,,31,',
'31,31,31,31,31,31,31,,31,31,31,32,31,,,,31,31,,,,,,31,31,32,32,31,,',
'32,32,32,32,32,32,32,32,,,32,32,,,,,,,32,32,32,,32,,32,32,32,32,32,32',
'32,,32,32,32,33,32,,,,32,32,,,,,,32,32,33,33,32,,,33,33,33,33,33,33',
'33,33,,,33,33,,,,,,,33,33,33,,33,,33,33,33,33,33,33,33,,33,33,33,34',
'33,,,,33,33,,,,,,33,33,34,34,33,,,34,34,34,34,34,34,34,34,,,34,34,,',
',,,,34,34,34,,34,,34,34,34,34,34,34,34,,34,34,34,35,34,,,,34,34,,,,',
',34,34,35,35,34,,,35,35,35,35,35,35,35,35,,,35,35,8,8,8,,,8,35,35,35',
',35,8,35,35,35,35,35,35,35,,35,35,35,8,35,,,,35,35,,,,,8,35,35,,209',
'35,209,209,209,209,,,209,209,209,209,209,209,209,209,,,,209,209,209',
'209,209,209,209,209,,,209,209,,,,,,,209,209,209,,209,,209,209,209,209',
'209,209,209,,209,209,209,163,209,,,,209,209,,,,,,209,209,163,163,209',
',,163,163,163,163,163,163,163,163,,,163,163,,,,,,,163,163,163,,163,',
'163,163,163,163,163,163,163,,163,163,163,162,163,,,,163,163,,,,,,163',
'163,162,162,163,,,162,162,162,162,162,162,162,162,,,162,162,,,,,,,162',
'162,162,,162,,162,162,162,162,162,162,162,,162,162,162,159,162,,,,162',
'162,,,,,,162,162,159,159,162,,,159,159,159,159,159,159,159,159,,,159',
'159,,,,,,,159,159,159,,159,,159,159,159,159,159,159,159,,159,159,159',
'41,159,,,,159,159,,,,,,159,159,41,41,159,,,41,41,41,41,41,41,41,41,',
',41,41,,,,,,,41,41,41,,41,,41,41,41,41,41,41,41,,41,41,41,161,41,,,',
'41,41,,,,,,41,41,161,161,41,,,161,161,161,161,161,161,161,161,,,161',
'161,,,,,,,161,161,161,,161,,161,161,161,161,161,161,161,,161,161,161',
'78,161,,,,161,161,,,,,,161,161,78,78,161,,,78,78,78,78,78,78,78,78,',
',78,78,,,,,,,78,78,78,,78,,78,78,78,78,78,78,78,,78,78,78,86,78,,,,78',
'78,,,,,,78,78,86,86,78,,,86,86,86,86,86,86,86,86,,,86,86,,,,,,,86,86',
'86,,86,,86,86,86,86,86,86,86,,86,86,86,48,86,,,,86,86,,,,,,86,86,48',
'48,86,,,48,48,48,48,48,48,48,48,,,48,48,,,,,,,48,48,48,,48,,48,48,48',
'48,48,48,48,,48,48,48,77,48,,,,48,48,,,,,,48,48,77,77,48,,,77,77,77',
'77,77,77,77,77,,,77,77,,,,,,,77,77,77,,77,,77,77,77,77,77,77,77,,77',
'77,77,115,77,,,,77,77,,,,,,77,77,115,115,77,,,115,115,115,115,115,115',
'115,115,,,115,115,6,6,6,,,6,115,115,115,,115,6,115,115,115,115,115,115',
'115,,115,115,115,6,115,,,,115,115,,,,,6,115,115,,108,115,108,108,108',
'108,,,108,108,108,108,108,108,108,108,,,,108,108,108,108,108,108,108',
'108,,,108,108,,,,,,,108,108,108,,108,,108,108,108,108,108,108,108,,108',
'108,108,54,108,,,,108,108,,,,,,108,108,54,54,108,,,54,54,54,54,54,54',
'54,54,,,54,54,,,,,,,54,54,54,,54,,54,54,54,54,54,54,54,,54,54,54,56',
'54,,,,54,54,,,,,,54,54,56,56,54,,,56,56,56,56,56,56,56,56,,,56,56,,',
',,,,56,56,56,,56,,56,56,56,56,56,56,56,,56,56,56,57,56,,,,56,56,,,,',
',56,56,57,57,56,,,57,57,57,57,57,57,57,57,,,57,57,,,,,,,57,57,57,,57',
',57,57,57,57,57,57,57,,57,57,57,58,57,,,,57,57,,,,,,57,57,58,58,57,',
',58,58,58,58,58,58,58,58,,,58,58,,,,,,,58,58,58,,58,,58,58,58,58,58',
'58,58,,58,58,58,76,58,,,,58,58,,,,,,58,58,76,76,58,,,76,76,76,76,76',
'76,76,76,,,76,76,,,,,,,76,76,76,,76,,76,76,76,76,76,76,76,,76,76,76',
'105,76,,,,76,76,,,,,,76,76,105,105,76,,,105,105,105,105,105,105,105',
'105,,,105,105,,,,,,,105,105,105,,105,,105,105,105,105,105,105,105,,105',
'105,105,103,105,,,,105,105,,,,,,105,105,103,103,105,,,103,103,103,103',
'103,103,103,103,,,103,103,,,,,,,103,103,103,,103,,103,103,103,103,103',
'103,103,,103,103,103,102,103,,,,103,103,,,,,,103,103,102,102,103,,,102',
'102,102,102,102,102,102,102,,,102,102,,,,,,,102,102,102,,102,,102,102',
'102,102,102,102,102,,102,102,102,100,102,,,,102,102,,,,,,102,102,100',
'100,102,,,100,100,100,100,100,100,100,100,,,100,100,,,,,,,100,100,100',
',100,,100,100,100,100,100,100,100,,100,100,100,75,100,,,,100,100,,,',
',,100,100,75,75,100,,,75,75,75,75,75,75,75,75,,,75,75,,,,,,,75,75,75',
',75,,75,75,75,75,75,75,75,,75,75,75,99,75,,,,75,75,,,,,,75,75,99,99',
'75,,,99,99,99,99,99,99,99,99,,,99,99,,,,,,,99,99,99,,99,,99,99,99,99',
'99,99,99,,99,99,99,98,99,,,,99,99,,,,,,99,99,98,98,99,,,98,98,98,98',
'98,98,98,98,,,98,98,,,,,,,98,98,98,,98,,98,98,98,98,98,98,98,,98,98',
'98,97,98,,,,98,98,,,,,,98,98,97,97,98,,,97,97,97,97,97,97,97,97,,,97',
'97,4,4,4,,,4,97,97,97,,97,4,97,97,97,97,97,97,97,,97,97,97,4,97,,,,97',
'97,,,,,4,97,97,,72,97,72,72,72,72,,,72,72,72,72,72,72,72,72,,,,72,72',
'72,72,72,72,72,72,,,72,72,,,,,,,72,72,72,,72,,72,72,72,72,72,72,72,',
'72,72,72,96,72,,,,72,72,,,,,,72,72,96,96,72,,,96,96,96,96,96,96,96,96',
',,96,96,,,,,,,96,96,96,,96,,96,96,96,96,96,96,96,,96,96,96,24,96,,,',
'96,96,,,,,,96,96,24,24,96,,,24,24,24,24,24,24,24,24,,,24,24,5,5,5,,',
'5,24,24,24,,24,5,24,24,24,24,24,24,24,,24,24,24,5,24,,,,24,24,,,,,5',
'24,24,,,24,205,205,205,205,,,205,205,205,205,205,205,200,200,200,200',
',,200,200,200,200,200,200,82,82,82,82,,,82,82,82,82,82,82,160,160,160',
'160,,,160,160,160,160,160,160,223,223,223,223,,,223,223,223,223,223',
'223,,160,160,,147,147,147,147,,205,147,147,147,223,223,,111,111,111',
'111,,200,111,111,111,111,111,111,70,70,70,70,,82,70,70,70,70,70,70,219',
'219,219,219,,,219,219,219,219,219,219,63,63,63,63,,,63,63,63,63,63,63',
'212,212,212,212,,,212,212,212,212,212,212,211,211,211,211,,,211,211',
'211,211,211,211,210,210,210,210,,,210,210,210,210,210,210,104,104,104',
'104,,,104,104,104,104,104,104,81,81,81,81,,,81,81,81,81,81,81,208,208',
'208,208,,,208,208,208,208,208,208,83,83,83,83,,,83,83,83,83,83,83,204',
'204,204,204,,,204,204,204,204,204,204,109,109,109,109,,,109,109,109',
'109,109,109,110,110,110,110,,,110,110,110,110,110,110,71,71,71,71,,',
'71,71,71,71,71,71,202,202,202,202,,,202,202,202,202,202,202,84,84,84',
'84,,,84,84,84,84,84,84,85,85,85,85,,,85,85,85,85,85,85,137,137,137,137',
',,137,137,137,137,137,137,130,130,130,130,,,130,130,130,130,130,130',
'164,164,164,164,,,164,164,164,164,164,164,134,134,134,134,,,134,134',
'134,134,134,134,131,131,131,131,,,131,131,131,131,131,131,127,127,127',
'127,,,127,127,127,127,127,127,128,128,128,128,,,128,128,128,128,128',
'128,129,129,129,129,,,129,129,129,129,129,129,42,42,42,42,,,42,42,42',
'42,42,42,150,150,150,150,,,150,150,150,150,150,148,148,148,148,,,148',
'148,148' ]
        racc_action_check = arr = ::Array.new(3421, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
   246,   304,   nil,   384,  2751,  2928,  1980,   315,  1371,   194,
   nil,    59,   507,   561,   -56,   151,   211,   nil,   nil,   nil,
   nil,   nil,   nil,   142,  2928,   885,   939,    20,    42,   nil,
   -16,  1155,  1209,  1263,  1317,  1371,   nil,   108,     7,    20,
    -7,  1656,  3385,   -33,   -56,   nil,   nil,   nil,  1872,   nil,
   118,   164,   187,   nil,  2103,   nil,  2157,  2211,  2265,   204,
   215,   221,   263,  3109,   142,   nil,   nil,   nil,   nil,   270,
  3085,  3241,  2820,   239,   831,  2589,  2319,  1926,  1764,   nil,
   993,  3169,  3021,  3193,  3265,  3277,  1818,   nil,    28,   -20,
   114,   145,    84,   138,   246,   723,  2874,  2751,  2697,  2643,
  2535,   227,  2481,  2427,  3157,  2373,   214,    38,  2049,  3217,
  3229,  3073,   178,   177,   176,  1980,   nil,   nil,   nil,   nil,
   nil,   159,   155,   153,   141,   nil,   nil,  3349,  3361,  3373,
  3301,  3337,    18,   109,  3325,   nil,    49,  3289,    31,    28,
   nil,    26,    40,    68,   221,   251,   167,  3061,  3408,   153,
  3397,   192,   217,   nil,     8,   -45,   -16,    -4,   -26,  1602,
  3033,  1710,  1548,  1494,  3313,    53,    75,    83,   nil,   nil,
   nil,   nil,   nil,   nil,    76,   nil,    27,    56,   nil,  1101,
   125,  1047,   777,   nil,   nil,   144,   nil,    20,   nil,   669,
   615,   453,   384,   315,    88,   nil,   nil,    56,   169,   192,
  3009,   nil,  3253,   nil,  3205,  2997,   193,   nil,  3181,  1440,
  3145,  3133,  3121,   nil,   nil,   nil,   236,    14,   243,  3097,
   nil,   nil,   nil,  3045,   249,   248,   nil,   nil,   nil,   275,
   nil,   nil,   255,   nil ]

racc_action_default = [
    -8,  -113,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -113,
   -10,  -113,  -113,  -113,  -106,  -113,  -113,    -2,    -3,    -4,
    -5,    -6,    -7,  -113,  -113,  -113,   -25,   -27,   -29,   -30,
  -113,  -113,  -113,  -113,  -113,  -113,   -41,  -113,  -113,  -113,
  -113,  -113,   -82,  -113,  -113,   -60,   -61,   -62,  -113,   -64,
  -113,  -113,  -113,   -69,  -113,   -71,  -113,  -113,  -113,  -113,
  -113,  -113,   -27,   -84,  -113,  -105,  -109,  -104,   234,   -13,
   -22,   -23,   -25,  -113,  -113,  -113,  -113,  -113,  -113,   -31,
  -113,   -33,  -113,   -38,   -39,   -40,  -113,   -44,  -113,  -113,
  -113,   -48,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,
  -113,  -113,  -113,  -113,   -63,  -113,  -113,  -113,  -113,   -72,
   -73,   -74,  -113,  -113,  -113,  -113,   -88,   -89,   -90,   -91,
   -92,  -107,  -102,  -113,  -113,   -24,   -26,   -28,   -83,   -34,
   -35,   -36,   -29,   -30,  -113,   -37,  -113,   -99,  -113,  -113,
   -94,  -113,  -113,  -101,   -49,   -50,   -51,   -52,   -53,   -55,
   -56,   -57,   -59,   -75,  -113,  -113,   -27,  -113,  -113,  -113,
   -81,  -113,  -113,  -113,   -85,   -86,  -113,  -113,   -15,   -12,
  -112,   -32,   -43,   -42,   -97,   -45,  -113,  -113,   -95,  -113,
  -113,  -113,  -113,   -58,   -65,  -113,   -67,  -113,   -70,  -113,
  -113,  -113,  -113,  -113,  -113,  -108,  -103,  -113,  -110,  -113,
  -113,   -93,   -96,   -47,  -100,  -113,  -113,   -68,   -79,  -113,
   -76,   -77,   -78,   -87,    -9,   -14,  -113,   -17,  -113,   -98,
   -46,   -54,   -66,   -81,  -113,  -113,   -19,  -111,   -80,   -21,
   -18,   -16,  -113,   -20 ]

racc_goto_table = [
    42,    63,    73,     1,   188,   216,   115,   136,   139,   143,
   215,   132,    70,    71,   169,   231,   180,   197,   123,    81,
    82,    83,    84,    85,   155,    64,   213,     2,   165,    91,
    17,    18,    19,    20,    21,    22,   104,   201,   174,   122,
    65,   121,   108,   198,   109,   110,   111,   nil,   125,   159,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   127,   128,   129,   130,   131,   228,   134,   nil,
   nil,   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,   nil,
   144,   145,   146,   147,   148,   149,   150,   151,   152,   nil,
   154,   137,   nil,   157,   nil,   nil,   160,   nil,   nil,   nil,
   nil,   nil,   nil,   164,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   187,   nil,   191,
   192,   193,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   200,   nil,   nil,   202,   nil,   204,
   205,   nil,   nil,   nil,   nil,   nil,   nil,   208,   209,   210,
   211,   212,   nil,   nil,   nil,   nil,   nil,   219,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   223 ]

racc_goto_check = [
    16,    16,    17,     1,    24,    14,    22,    19,    20,    20,
    13,    18,    16,    16,    12,    15,    21,    11,    10,    16,
    16,    16,    16,    16,    19,    25,    26,     2,    27,    16,
     2,     2,     2,     2,     2,     2,    16,    28,    29,    30,
    31,    32,    16,    33,    16,    16,    16,   nil,    17,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,    16,    16,    16,    16,    24,    16,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
    16,    16,    16,    16,    16,    16,    16,    16,    16,   nil,
    16,    16,   nil,    16,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,    16,
    16,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,    16,   nil,    16,
    16,   nil,   nil,   nil,   nil,   nil,   nil,    16,    16,    16,
    16,    16,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,     3,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -51,  -151,  -110,  -187,  -192,  -214,   -12,   -24,   -69,   -79,
   -81,  -127,   -58,   nil,  -156,    11,  -168,   -88,  -140,   -99,
   -28,    26,   -25,  -127 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,    72,   nil,    28,   nil,
   nil,   nil,   nil,    53,   nil,   nil,   116,   nil,   140,   nil,
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 77, :_reduce_1,
  2, 78, :_reduce_2,
  2, 78, :_reduce_3,
  2, 78, :_reduce_4,
  2, 78, :_reduce_5,
  2, 78, :_reduce_6,
  2, 78, :_reduce_7,
  0, 78, :_reduce_8,
  7, 79, :_reduce_9,
  1, 85, :_reduce_10,
  0, 85, :_reduce_11,
  2, 86, :_reduce_12,
  0, 86, :_reduce_13,
  2, 87, :_reduce_14,
  0, 87, :_reduce_15,
  4, 89, :_reduce_16,
  1, 90, :_reduce_17,
  3, 90, :_reduce_18,
  2, 90, :_reduce_19,
  2, 91, :_reduce_20,
  0, 91, :_reduce_21,
  3, 80, :_reduce_22,
  3, 80, :_reduce_23,
  2, 93, :_reduce_24,
  0, 93, :_reduce_25,
  3, 92, :_reduce_26,
  1, 92, :_reduce_27,
  3, 92, :_reduce_28,
  1, 92, :_reduce_29,
  1, 92, :_reduce_30,
  2, 92, :_reduce_31,
  4, 92, :_reduce_32,
  2, 92, :_reduce_33,
  3, 92, :_reduce_34,
  3, 92, :_reduce_35,
  3, 92, :_reduce_36,
  3, 92, :_reduce_37,
  2, 92, :_reduce_38,
  2, 92, :_reduce_39,
  2, 92, :_reduce_40,
  1, 92, :_reduce_41,
  4, 92, :_reduce_42,
  4, 92, :_reduce_43,
  2, 92, :_reduce_44,
  4, 92, :_reduce_45,
  6, 92, :_reduce_46,
  5, 92, :_reduce_47,
  2, 92, :_reduce_48,
  3, 92, :_reduce_49,
  3, 92, :_reduce_50,
  3, 92, :_reduce_51,
  3, 92, :_reduce_52,
  3, 92, :_reduce_53,
  6, 92, :_reduce_54,
  3, 92, :_reduce_55,
  3, 92, :_reduce_56,
  3, 92, :_reduce_57,
  4, 92, :_reduce_58,
  3, 92, :_reduce_59,
  1, 92, :_reduce_60,
  1, 92, :_reduce_61,
  1, 92, :_reduce_62,
  2, 92, :_reduce_63,
  1, 92, :_reduce_64,
  4, 92, :_reduce_65,
  6, 92, :_reduce_66,
  4, 92, :_reduce_67,
  5, 92, :_reduce_68,
  1, 92, :_reduce_69,
  4, 92, :_reduce_70,
  1, 92, :_reduce_71,
  2, 92, :_reduce_72,
  2, 92, :_reduce_73,
  2, 92, :_reduce_74,
  3, 94, :_reduce_75,
  5, 99, :_reduce_76,
  5, 99, :_reduce_77,
  5, 99, :_reduce_78,
  2, 100, :_reduce_79,
  4, 100, :_reduce_80,
  0, 100, :_reduce_81,
  2, 81, :_reduce_82,
  4, 81, :_reduce_83,
  2, 84, :_reduce_84,
  4, 83, :_reduce_85,
  2, 98, :_reduce_86,
  3, 103, :_reduce_87,
  0, 103, :_reduce_88,
  1, 102, :_reduce_89,
  1, 102, :_reduce_90,
  1, 102, :_reduce_91,
  1, 102, :_reduce_92,
  3, 96, :_reduce_93,
  1, 96, :_reduce_94,
  2, 104, :_reduce_95,
  3, 104, :_reduce_96,
  2, 95, :_reduce_97,
  3, 105, :_reduce_98,
  0, 105, :_reduce_99,
  2, 97, :_reduce_100,
  0, 97, :_reduce_101,
  3, 82, :_reduce_102,
  3, 106, :_reduce_103,
  0, 106, :_reduce_104,
  1, 101, :_reduce_105,
  0, 101, :_reduce_106,
  2, 107, :_reduce_107,
  3, 108, :_reduce_108,
  0, 108, :_reduce_109,
  2, 88, :_reduce_110,
  3, 109, :_reduce_111,
  0, 109, :_reduce_112 ]

racc_reduce_n = 113

racc_shift_n = 234

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  :xor => 12,
  "<=" => 13,
  "=>" => 14,
  "<=>" => 15,
  :forall => 16,
  :exists => 17,
  "+=" => 18,
  "-=" => 19,
  "=" => 20,
  :subset => 21,
  :oneof => 22,
  :tryoneof => 23,
  :isempty => 24,
  :delete => 25,
  :create => 26,
  :assert => 27,
  :if => 28,
  :elsif => 29,
  :else => 30,
  :return => 31,
  :returnguard => 32,
  :authenticable => 33,
  :usergroup => 34,
  :class => 35,
  :extends => 36,
  :inverseof => 37,
  :action => 38,
  :foreach => 39,
  :flatforeach => 40,
  :unflatforeach => 41,
  :derefcreate => 42,
  :allof => 43,
  :invariant => 44,
  :union => 45,
  :empty => 46,
  :true => 47,
  :false => 48,
  :not => 49,
  :equal => 50,
  :implies => 51,
  :unknown => 52,
  :currentuser => 53,
  :inusergroup => 54,
  :allofusergroup => 55,
  :permit => 56,
  :permitted => 57,
  :permittedbytype => 58,
  :edit => 59,
  :read => 60,
  :IDENT => 61,
  :CLASS_IDENT => 62,
  :NUMBER => 63,
  :STRING => 64,
  :BASIC_TYPE => 65,
  :JS => 66,
  :roole => 67,
  :raize => 68,
  "{" => 69,
  "}" => 70,
  ".." => 71,
  "(" => 72,
  ")" => 73,
  ":" => 74,
  "," => 75 }

racc_nt_base = 76

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "xor",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "forall",
  "exists",
  "\"+=\"",
  "\"-=\"",
  "\"=\"",
  "subset",
  "oneof",
  "tryoneof",
  "isempty",
  "delete",
  "create",
  "assert",
  "if",
  "elsif",
  "else",
  "return",
  "returnguard",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "derefcreate",
  "allof",
  "invariant",
  "union",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "IDENT",
  "CLASS_IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "raize",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"(\"",
  "\")\"",
  "\":\"",
  "\",\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "class_ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "expr",
  "exprs",
  "member_expr",
  "comma_separated_exprs",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "perm_op_list",
  "foreach_expr",
  "optelse",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "ident_list",
  "more_idents",
  "more_class_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 23)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 32)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 34)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 35)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 36)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 37)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 38)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 40)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 49)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 51)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 52)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 55)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_17(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 64)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 65)
  def _reduce_19(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 67)
  def _reduce_20(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 68)
  def _reduce_21(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 70)
  def _reduce_22(val, _values, result)
     return ASTAction.new :lineno => val[0], :name => val[1], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_23(val, _values, result)
     return ASTAction.new :lineno => val[0], :name => val[1], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 73)
  def _reduce_24(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 74)
  def _reduce_25(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_26(val, _values, result)
     return ASTBlock.new :lineno => val[0], :exprs => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 77)
  def _reduce_27(val, _values, result)
     return ASTVariableRead.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_28(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 79)
  def _reduce_29(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_30(val, _values, result)
     return ASTAllOf.new :lineno => val[0].lineno, :class_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_31(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 82)
  def _reduce_32(val, _values, result)
     return ASTDereferenceCreate.new(:lineno => val[0],
          :objset => val[2].objset, :rel_name => val[2].member_name)
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 85)
  def _reduce_33(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_34(val, _values, result)
     return ASTCreateTup.new(:lineno => val[0].lineno,
          :objset1 => val[0].objset, :rel_name => val[0].member_name, :objset2 => val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 89)
  def _reduce_35(val, _values, result)
     return ASTDeleteTup.new(:lineno => val[0].lineno,
          :objset1 => val[0].objset, :rel_name => val[0].member_name, :objset2 => val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 92)
  def _reduce_36(val, _values, result)
     return ASTMemberSet.new(:lineno => val[0].lineno,
          :objset => val[0].objset, :member_name => val[0].member_name, :expr => val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 96)
  def _reduce_37(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 97)
  def _reduce_38(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 98)
  def _reduce_39(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 99)
  def _reduce_40(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 100)
  def _reduce_41(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 101)
  def _reduce_42(val, _values, result)
     return ASTUnion.new :lineno => val[0], :objsets => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 103)
  def _reduce_43(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 104)
  def _reduce_44(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 105)
  def _reduce_45(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 107)
  def _reduce_46(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 108)
  def _reduce_47(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 109)
  def _reduce_48(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 110)
  def _reduce_49(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 111)
  def _reduce_50(val, _values, result)
     return ASTOr.new  :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 112)
  def _reduce_51(val, _values, result)
     return ASTXor.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 114)
  def _reduce_52(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 116)
  def _reduce_53(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_54(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_55(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_56(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_57(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 126)
  def _reduce_58(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_59(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 128)
  def _reduce_60(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 129)
  def _reduce_61(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_62(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_63(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 133)
  def _reduce_64(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 135)
  def _reduce_65(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 137)
  def _reduce_66(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_67(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 139)
  def _reduce_68(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 141)
  def _reduce_69(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_70(val, _values, result)
     return ASTIf.new :lineno => val[0], :condition => val[1], :then_expr => val[2], :else_expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 143)
  def _reduce_71(val, _values, result)
     return ASTRaise.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 144)
  def _reduce_72(val, _values, result)
     return ASTReturn.new :lineno => val[0], :expr => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 145)
  def _reduce_73(val, _values, result)
     return ASTReturnGuard.new :lineno => val[0], :expr => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 147)
  def _reduce_74(val, _values, result)
     return ASTAssertFormula.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 152)
  def _reduce_75(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 154)
  def _reduce_76(val, _values, result)
     return ASTForEach.new(
                  :lineno => val[0], :var_name => val[1], :objset => val[3], :expr => val[4]
                )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 157)
  def _reduce_77(val, _values, result)
     return ASTForEach.new(
                  :lineno => val[0], :var_name => val[1], :objset => val[3], :expr => val[4]
                ).force_flat!(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 160)
  def _reduce_78(val, _values, result)
     return ASTForEach.new(
                  :lineno => val[0], :var_name => val[1], :objset => val[3], :expr => val[4]
                ).force_flat!(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 164)
  def _reduce_79(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 165)
  def _reduce_80(val, _values, result)
     return ASTIf.new :condition => val[1], :then_expr => val[2], :else_expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 166)
  def _reduce_81(val, _values, result)
     return ASTEmptyObjset.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 169)
  def _reduce_82(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 172)
  def _reduce_83(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 175)
  def _reduce_84(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 178)
  def _reduce_85(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 180)
  def _reduce_86(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 181)
  def _reduce_87(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 182)
  def _reduce_88(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 184)
  def _reduce_89(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 185)
  def _reduce_90(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 186)
  def _reduce_91(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 187)
  def _reduce_92(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 190)
  def _reduce_93(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 191)
  def _reduce_94(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 194)
  def _reduce_95(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 196)
  def _reduce_96(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 198)
  def _reduce_97(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 200)
  def _reduce_98(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 201)
  def _reduce_99(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 203)
  def _reduce_100(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 204)
  def _reduce_101(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 207)
  def _reduce_102(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_103(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 210)
  def _reduce_104(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 212)
  def _reduce_105(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 213)
  def _reduce_106(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 214)
  def _reduce_107(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 215)
  def _reduce_108(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 216)
  def _reduce_109(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 218)
  def _reduce_110(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 219)
  def _reduce_111(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 220)
  def _reduce_112(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


    end
  end
end
