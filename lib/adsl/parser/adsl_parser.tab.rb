#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 223)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'44,61,68,77,74,76,220,61,69,70,71,73,72,75,205,170,204,165,166,224,166',
'68,77,201,93,30,94,68,77,61,26,27,28,29,44,37,38,45,32,42,43,39,41,40',
'168,46,48,49,208,50,92,91,156,51,35,36,163,34,162,30,62,47,60,60,26',
'27,28,29,33,37,38,45,32,42,43,39,41,40,44,46,48,49,223,50,176,68,77',
'51,35,36,149,34,173,55,167,47,175,147,146,206,207,178,33,30,68,77,74',
'76,26,27,28,29,44,37,38,45,32,42,43,39,41,40,145,46,48,49,141,50,180',
'181,182,51,35,36,184,34,93,30,94,47,157,185,26,27,28,29,33,37,38,45',
'32,42,43,39,41,40,44,46,48,49,132,50,92,91,132,51,35,36,187,34,188,189',
'190,47,119,132,68,77,74,76,33,30,69,70,71,116,26,27,28,29,194,37,38',
'45,32,42,43,39,41,40,98,46,48,49,61,50,44,197,198,51,35,36,88,34,87',
'158,86,47,60,68,77,74,76,212,33,69,70,71,73,72,75,30,68,77,74,76,26',
'27,28,29,85,37,38,45,32,42,43,39,41,40,84,46,48,49,83,50,216,82,44,51',
'35,36,80,34,79,67,66,47,68,68,77,74,76,221,33,69,70,71,222,108,109,110',
'104,30,65,102,105,171,26,27,28,29,64,37,38,45,32,42,43,39,41,40,44,46',
'48,49,63,50,60,228,60,51,35,36,58,34,57,106,107,47,68,77,74,76,56,55',
'33,30,233,234,24,23,26,27,28,29,16,37,38,45,32,42,43,39,41,40,60,46',
'48,49,237,50,44,238,,51,35,36,,34,,,,47,,68,77,74,76,,33,69,70,71,73',
'72,75,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,,46,48,49,93,50',
'94,,44,25,35,36,,34,,,,47,,68,77,74,76,,33,69,70,71,73,72,92,91,,30',
',,,177,26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51',
'35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39,41,40,44,46',
'48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44,37,38',
'45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26,27,28',
'29,33,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,139,35,36,,34,,',
',47,,,,,,,33,30,,,,,26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48',
'49,,50,,,,51,35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39',
'41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28',
'29,44,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,',
'47,,,26,27,28,29,33,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51',
'35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44,37,38,45,32,42,43,39',
'41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45',
'32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30',
',,,,26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35',
'36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39,41,40,44,46,48',
'49,,50,,,,117,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44,37,38,45',
'32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26,27,28,29',
'33,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47',
',,,,,,33,30,,,,,26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48,49',
',50,,,,51,35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39,41',
'40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29',
'44,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47',
',,26,27,28,29,33,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35',
'36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44,37,38,45,32,42,43,39,41',
'40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32',
'42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,',
',26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36',
',34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39,41,40,44,46,48,49',
',50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44,37,38,45,32',
'42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26,27,28,29,33',
'37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,',
',,,33,30,,,,,26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48,49,,50',
',,,51,35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39,41,40',
'44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44',
'37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26',
'27,28,29,33,37,38,45,32,42,43,39,41,40,,46,48,49,44,50,,,,51,35,36,',
'34,,,,47,,,,,,,33,108,109,110,104,30,,102,105,,26,27,28,29,,37,38,45',
'32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,106,107,47,,,,,,',
'33,30,,,,,26,27,28,29,44,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,',
',51,35,36,,34,,30,,47,,,26,27,28,29,33,37,38,45,32,42,43,39,41,40,44',
'46,48,49,,50,,,,51,35,36,,34,,,,47,,,,,,,33,30,,,,,26,27,28,29,44,37',
'38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,30,,47,,,26,27',
'28,29,33,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,',
',47,,68,77,74,76,,33,69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72',
'75,68,77,74,76,,,69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72,75,68',
'77,74,76,,,69,70,71,73,72,75,,,68,77,74,76,,199,69,70,71,73,72,75,68',
'77,74,76,,217,69,70,71,73,72,75,68,77,74,76,,218,69,70,71,73,72,75,68',
'77,74,76,,174,69,70,71,73,72,75,68,77,74,76,,161,69,70,71,73,72,75,',
',68,77,74,76,,159,69,70,71,73,72,75,,,10,15,-11,129,,11,10,15,-11,,',
'11,10,15,-11,160,,11,,12,60,10,15,-11,,12,11,,,,,12,60,14,,,,,,14,12',
',,13,,14,60,,,13,,10,15,-11,14,13,11,10,15,-11,,,11,,13,,10,15,-11,',
'12,11,68,77,74,76,12,,69,70,71,73,72,75,14,12,,,,,14,,,,13,68,77,74',
'76,14,13,69,70,71,73,72,75,,,13,68,77,74,76,,,69,70,71,73,72,75,151',
'77,74,76,,,69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72,75,68,77,74',
'76,,,69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72,75,68,77,74,76,',
',69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72,75,164,77,74,76,,,69',
'70,71,73,72,75,68,77,74,76,,,69,70,71,73,72,75,68,77,74,76,,,69,70,71',
'73,72,75,68,77,74,76,,,69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72',
'75,68,77,74,76,,,69,70,71,73,72,75,68,77,74,76,,,69,70,71,73,72,75' ]
        racc_action_table = arr = ::Array.new(2135, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'85,117,215,215,215,215,198,25,215,215,215,215,215,215,183,133,183,130',
'133,205,130,81,81,183,88,85,88,127,127,139,85,85,85,85,70,85,85,85,85',
'85,85,85,85,85,132,85,85,85,184,85,88,88,108,85,85,85,117,85,116,70',
'25,85,215,104,70,70,70,70,85,70,70,70,70,70,70,70,70,70,69,70,70,70',
'205,70,139,125,125,70,70,70,99,70,136,98,132,70,138,97,96,184,184,141',
'70,69,120,120,120,120,69,69,69,69,107,69,69,69,69,69,69,69,69,69,95',
'69,69,69,87,69,144,145,146,69,69,69,151,69,180,107,180,69,109,153,107',
'107,107,107,69,107,107,107,107,107,107,107,107,107,105,107,107,107,80',
'107,180,180,79,107,107,107,156,107,157,158,164,107,68,166,123,123,123',
'123,107,105,123,123,123,66,105,105,105,105,169,105,105,105,105,105,105',
'105,105,105,58,105,105,105,51,105,102,172,177,105,105,105,50,105,49',
'110,48,105,185,134,134,134,134,186,105,134,134,134,134,134,134,102,122',
'122,122,122,102,102,102,102,47,102,102,102,102,102,102,102,102,102,45',
'102,102,102,41,102,190,40,100,102,102,102,38,102,37,30,29,102,128,124',
'124,124,124,203,102,124,124,124,204,100,100,100,100,100,28,100,100,134',
'100,100,100,100,27,100,100,100,100,100,100,100,100,100,165,100,100,100',
'26,100,24,209,212,100,100,100,23,100,16,100,100,100,121,121,121,121',
'15,14,100,165,221,223,11,9,165,165,165,165,1,165,165,165,165,165,165',
'165,165,165,228,165,165,165,233,165,12,237,,165,165,165,,165,,,,165',
',140,140,140,140,,165,140,140,140,140,140,140,12,,,,,12,12,12,12,,12',
'12,12,12,12,12,12,12,12,,12,12,12,53,12,53,,13,12,12,12,,12,,,,12,,126',
'126,126,126,,12,126,126,126,126,126,53,53,,13,,,,140,13,13,13,13,142',
'13,13,13,13,13,13,13,13,13,,13,13,13,,13,,,,13,13,13,,13,,142,,13,,',
'142,142,142,142,13,142,142,142,142,142,142,142,142,142,89,142,142,142',
',142,,,,142,142,142,,142,,,,142,,,,,,,142,89,,,,,89,89,89,89,86,89,89',
'89,89,89,89,89,89,89,,89,89,89,,89,,,,89,89,89,,89,,86,,89,,,86,86,86',
'86,89,86,86,86,86,86,86,86,86,86,72,86,86,86,,86,,,,86,86,86,,86,,,',
'86,,,,,,,86,72,,,,,72,72,72,72,208,72,72,72,72,72,72,72,72,72,,72,72',
'72,,72,,,,72,72,72,,72,,208,,72,,,208,208,208,208,72,208,208,208,208',
'208,208,208,208,208,84,208,208,208,,208,,,,208,208,208,,208,,,,208,',
',,,,,208,84,,,,,84,84,84,84,207,84,84,84,84,84,84,84,84,84,,84,84,84',
',84,,,,84,84,84,,84,,207,,84,,,207,207,207,207,84,207,207,207,207,207',
'207,207,207,207,206,207,207,207,,207,,,,207,207,207,,207,,,,207,,,,',
',,207,206,,,,,206,206,206,206,83,206,206,206,206,206,206,206,206,206',
',206,206,206,,206,,,,206,206,206,,206,,83,,206,,,83,83,83,83,206,83',
'83,83,83,83,83,83,83,83,197,83,83,83,,83,,,,83,83,83,,83,,,,83,,,,,',
',83,197,,,,,197,197,197,197,67,197,197,197,197,197,197,197,197,197,',
'197,197,197,,197,,,,197,197,197,,197,,67,,197,,,67,67,67,67,197,67,67',
'67,67,67,67,67,67,67,82,67,67,67,,67,,,,67,67,67,,67,,,,67,,,,,,,67',
'82,,,,,82,82,82,82,33,82,82,82,82,82,82,82,82,82,,82,82,82,,82,,,,82',
'82,82,,82,,33,,82,,,33,33,33,33,82,33,33,33,33,33,33,33,33,33,64,33',
'33,33,,33,,,,33,33,33,,33,,,,33,,,,,,,33,64,,,,,64,64,64,64,77,64,64',
'64,64,64,64,64,64,64,,64,64,64,,64,,,,64,64,64,,64,,77,,64,,,77,77,77',
'77,64,77,77,77,77,77,77,77,77,77,39,77,77,77,,77,,,,77,77,77,,77,,,',
'77,,,,,,,77,39,,,,,39,39,39,39,168,39,39,39,39,39,39,39,39,39,,39,39',
'39,,39,,,,39,39,39,,39,,168,,39,,,168,168,168,168,39,168,168,168,168',
'168,168,168,168,168,189,168,168,168,,168,,,,168,168,168,,168,,,,168',
',,,,,,168,189,,,,,189,189,189,189,188,189,189,189,189,189,189,189,189',
'189,,189,189,189,,189,,,,189,189,189,,189,,188,,189,,,188,188,188,188',
'189,188,188,188,188,188,188,188,188,188,187,188,188,188,,188,,,,188',
'188,188,,188,,,,188,,,,,,,188,187,,,,,187,187,187,187,76,187,187,187',
'187,187,187,187,187,187,,187,187,187,,187,,,,187,187,187,,187,,76,,187',
',,76,76,76,76,187,76,76,76,76,76,76,76,76,76,75,76,76,76,,76,,,,76,76',
'76,,76,,,,76,,,,,,,76,75,,,,,75,75,75,75,65,75,75,75,75,75,75,75,75',
'75,,75,75,75,,75,,,,75,75,75,,75,,65,,75,,,65,65,65,65,75,65,65,65,65',
'65,65,65,65,65,171,65,65,65,,65,,,,65,65,65,,65,,,,65,,,,,,,65,171,',
',,,171,171,171,171,74,171,171,171,171,171,171,171,171,171,,171,171,171',
',171,,,,171,171,171,,171,,74,,171,,,74,74,74,74,171,74,74,74,74,74,74',
'74,74,74,73,74,74,74,,74,,,,74,74,74,,74,,,,74,,,,,,,74,73,,,,,73,73',
'73,73,170,73,73,73,73,73,73,73,73,73,,73,73,73,,73,,,,73,73,73,,73,',
'170,,73,,,170,170,170,170,73,170,170,170,170,170,170,170,170,170,,170',
'170,170,60,170,,,,170,170,170,,170,,,,170,,,,,,,170,60,60,60,60,60,',
'60,60,,60,60,60,60,,60,60,60,60,60,60,60,60,60,61,60,60,60,,60,,,,60',
'60,60,,60,,60,60,60,,,,,,,60,61,,,,,61,61,61,61,62,61,61,61,61,61,61',
'61,61,61,,61,61,61,,61,,,,61,61,61,,61,,62,,61,,,62,62,62,62,61,62,62',
'62,62,62,62,62,62,62,63,62,62,62,,62,,,,62,62,62,,62,,,,62,,,,,,,62',
'63,,,,,63,63,63,63,71,63,63,63,63,63,63,63,63,63,,63,63,63,,63,,,,63',
'63,63,,63,,71,,63,,,71,71,71,71,63,71,71,71,71,71,71,71,71,71,,71,71',
'71,,71,,,,71,71,71,,71,,,,71,,179,179,179,179,,71,179,179,179,179,179',
'179,191,191,191,191,,,191,191,191,191,191,191,196,196,196,196,,,196',
'196,196,196,196,196,137,137,137,137,,,137,137,137,137,137,137,115,115',
'115,115,,,115,115,115,115,115,115,,,113,113,113,113,,179,113,113,113',
'113,113,113,78,78,78,78,,191,78,78,78,78,78,78,114,114,114,114,,196',
'114,114,114,114,114,114,213,213,213,213,,137,213,213,213,213,213,213',
'214,214,214,214,,115,214,214,214,214,214,214,,,154,154,154,154,,113',
'154,154,154,154,154,154,,,5,5,5,78,,5,4,4,4,,,4,8,8,8,114,,8,,5,213',
'3,3,3,,4,3,,,,,8,214,5,,,,,,4,3,,,5,,8,154,,,4,,7,7,7,3,8,7,0,0,0,,',
'0,,3,,6,6,6,,7,6,226,226,226,226,0,,226,226,226,226,226,226,7,6,,,,',
'0,,,,7,135,135,135,135,6,0,135,135,135,135,135,135,,,6,225,225,225,225',
',,225,225,225,225,225,225,101,101,101,101,,,101,101,101,101,101,101',
'143,143,143,143,,,143,143,143,143,143,143,31,31,31,31,,,31,31,31,31',
'31,31,152,152,152,152,,,152,152,152,152,152,152,155,155,155,155,,,155',
'155,155,155,155,155,195,195,195,195,,,195,195,195,195,195,195,118,118',
'118,118,,,118,118,118,118,118,118,193,193,193,193,,,193,193,193,193',
'193,193,111,111,111,111,,,111,111,111,111,111,111,52,52,52,52,,,52,52',
'52,52,52,52,227,227,227,227,,,227,227,227,227,227,227,219,219,219,219',
',,219,219,219,219,219,219,112,112,112,112,,,112,112,112,112,112,112' ]
        racc_action_check = arr = ::Array.new(2135, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1897,   336,   nil,  1861,  1846,  1840,  1906,  1891,  1852,   312,
   nil,   275,   350,   402,   270,   269,   316,   nil,   nil,   nil,
   nil,   nil,   nil,   259,   244,    -9,   236,   222,   214,   196,
   195,  1999,   nil,   904,   nil,   nil,   nil,   194,   192,  1026,
   187,   184,   nil,   nil,   nil,   180,   nil,   170,   146,   144,
   142,   188,  2083,   373,   nil,   nil,   nil,   nil,   180,   nil,
  1498,  1542,  1576,  1620,   948,  1294,   130,   826,   119,    76,
    32,  1654,   558,  1416,  1372,  1260,  1216,   982,  1789,   109,
   105,    17,   870,   748,   636,    -2,   514,    71,    -3,   480,
   nil,   nil,   nil,   nil,   nil,    50,    26,    33,    38,    25,
   256,  1975,   204,   nil,    -1,   154,   nil,   110,    -3,    85,
   160,  2071,  2119,  1777,  1801,  1763,   -13,   -15,  2047,   nil,
   100,   316,   228,   172,   265,    81,   411,    23,   264,   nil,
   -52,   nil,    39,   -54,   215,  1948,    21,  1751,    25,    13,
   361,    30,   436,  1987,    56,    74,    75,   nil,   nil,   nil,
   nil,    79,  2011,   130,  1839,  2023,    99,   101,   102,   nil,
   nil,   nil,   nil,   nil,   117,   300,   120,   nil,  1060,   119,
  1450,  1338,   135,   nil,   nil,   nil,   nil,   153,   nil,  1715,
   109,   nil,   nil,   -42,    32,   154,   192,  1182,  1138,  1104,
   185,  1727,   nil,  2059,   nil,  2035,  1739,   792,   -65,   nil,
   nil,   nil,   nil,   218,   223,    16,   714,   670,   592,   298,
   nil,   nil,   246,  1813,  1825,    -2,   nil,   nil,   nil,  2107,
   nil,   273,   nil,   273,   nil,  1963,  1925,  2095,   282,   nil,
   nil,   nil,   nil,   329,   nil,   nil,   nil,   298,   nil ]

racc_action_default = [
    -8,  -110,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -110,
   -10,  -110,  -110,  -110,  -106,  -110,  -110,    -2,    -3,    -4,
    -5,    -6,    -7,  -110,  -110,   -44,  -110,  -110,  -110,  -110,
  -110,   -82,   -53,  -110,   -55,   -56,   -57,  -110,  -110,  -110,
  -110,  -110,   -72,   -73,   -74,  -110,   -76,  -110,  -110,  -110,
  -110,   -44,   -84,  -110,  -105,  -109,  -104,   239,   -13,   -23,
   -26,  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,
  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,
  -110,   -60,  -110,  -110,  -110,  -110,  -110,  -110,  -110,  -110,
   -88,   -89,   -90,   -91,   -92,  -107,  -102,  -110,  -110,  -110,
   -26,   -27,  -110,   -32,  -110,  -110,   -35,  -110,  -110,  -110,
  -110,   -45,   -83,  -110,  -110,  -110,  -110,   -44,  -110,   -52,
   -61,   -62,   -63,   -64,   -65,   -67,   -68,   -69,   -71,   -54,
  -110,   -94,  -110,  -101,  -110,   -99,  -110,  -110,  -110,   -44,
  -110,  -110,  -110,   -85,   -86,  -110,  -110,   -15,   -12,   -24,
   -25,  -110,   -28,  -110,  -110,   -36,  -110,  -110,  -110,   -46,
   -47,   -48,   -49,   -50,  -110,  -110,  -110,   -95,  -110,  -110,
  -110,  -110,   -97,   -70,   -75,   -77,   -78,  -110,   -80,  -110,
  -110,  -108,  -103,  -110,   -52,  -110,   -41,  -110,  -110,  -110,
   -52,  -110,   -93,   -96,   -59,  -100,  -110,  -110,  -110,   -81,
   -87,    -9,   -14,  -110,  -110,   -18,  -110,  -110,  -110,   -33,
   -43,   -34,  -110,  -110,  -110,  -110,   -51,   -58,   -66,   -98,
   -79,  -110,   -17,  -110,   -20,   -29,   -30,   -31,  -110,   -40,
   -37,   -38,   -39,   -22,   -19,   -42,   -16,  -110,   -21 ]

racc_goto_table = [
    59,    31,    52,    54,    99,    89,     2,   130,   133,    17,
    18,    19,    20,    21,    22,   136,   211,   138,   203,   202,
   209,   236,    78,   183,   169,    97,     1,    53,    81,   200,
   144,   192,   172,    96,    95,   nil,   nil,   nil,   nil,   nil,
   142,   nil,   nil,   nil,   150,   nil,   nil,   nil,   nil,   nil,
   111,   112,   113,   114,   115,   nil,   118,   nil,   120,   121,
   122,   123,   124,   125,   126,   127,   128,   nil,   nil,   nil,
   nil,   134,   135,   137,   135,   140,   nil,   nil,   143,   nil,
   153,   nil,   nil,   nil,   nil,   nil,   nil,   148,   nil,   nil,
   nil,   152,   nil,   nil,   154,   nil,   155,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   186,   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   191,   nil,   nil,   193,   nil,   195,
   196,   210,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   213,   214,   215,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   219,   nil,   229,   230,
   231,   232,   nil,   nil,   nil,   225,   226,   227,   nil,   nil,
   nil,   nil,   nil,   nil,   235 ]

racc_goto_check = [
    16,    19,    19,    12,    17,    26,     2,    23,    23,     2,
     2,     2,     2,     2,     2,    25,    22,    25,    14,    13,
    21,    15,    19,    11,    24,    10,     1,    27,    19,    28,
    29,    30,    31,    32,    33,   nil,   nil,   nil,   nil,   nil,
    26,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,
    19,    19,    19,    19,    19,   nil,    19,   nil,    19,    19,
    19,    19,    19,    19,    19,    19,    19,   nil,   nil,   nil,
   nil,    19,    19,    19,    19,    19,   nil,   nil,    19,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,
   nil,    19,   nil,   nil,    19,   nil,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,   nil,   nil,    19,   nil,    19,
    19,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,    19,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,    16,    16,
    16,    16,   nil,   nil,   nil,    19,    19,    19,   nil,   nil,
   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    26,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -33,  -124,   -11,  -164,  -165,  -212,   -24,   -56,   nil,   -11,
   nil,  -165,  -170,   -72,  -109,   -68,   -48,    13,  -151,   -60,
  -135,  -103,   -23,   -21 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,   101,
   103,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,   nil,
   131,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 74, :_reduce_1,
  2, 75, :_reduce_2,
  2, 75, :_reduce_3,
  2, 75, :_reduce_4,
  2, 75, :_reduce_5,
  2, 75, :_reduce_6,
  2, 75, :_reduce_7,
  0, 75, :_reduce_8,
  7, 76, :_reduce_9,
  1, 82, :_reduce_10,
  0, 82, :_reduce_11,
  2, 83, :_reduce_12,
  0, 83, :_reduce_13,
  2, 84, :_reduce_14,
  0, 84, :_reduce_15,
  4, 86, :_reduce_16,
  2, 86, :_reduce_17,
  1, 87, :_reduce_18,
  3, 87, :_reduce_19,
  2, 87, :_reduce_20,
  2, 88, :_reduce_21,
  0, 88, :_reduce_22,
  3, 77, :_reduce_23,
  3, 89, :_reduce_24,
  2, 90, :_reduce_25,
  0, 90, :_reduce_26,
  1, 91, :_reduce_27,
  2, 91, :_reduce_28,
  5, 91, :_reduce_29,
  5, 91, :_reduce_30,
  5, 91, :_reduce_31,
  1, 91, :_reduce_32,
  4, 91, :_reduce_33,
  4, 91, :_reduce_34,
  1, 91, :_reduce_35,
  2, 91, :_reduce_36,
  5, 93, :_reduce_37,
  5, 93, :_reduce_38,
  5, 93, :_reduce_39,
  2, 95, :_reduce_40,
  0, 95, :_reduce_41,
  3, 94, :_reduce_42,
  1, 94, :_reduce_43,
  1, 92, :_reduce_44,
  3, 92, :_reduce_45,
  4, 92, :_reduce_46,
  4, 92, :_reduce_47,
  4, 92, :_reduce_48,
  4, 92, :_reduce_49,
  4, 92, :_reduce_50,
  6, 92, :_reduce_51,
  3, 92, :_reduce_52,
  1, 92, :_reduce_53,
  3, 92, :_reduce_54,
  1, 92, :_reduce_55,
  1, 92, :_reduce_56,
  1, 92, :_reduce_57,
  6, 92, :_reduce_58,
  5, 92, :_reduce_59,
  2, 92, :_reduce_60,
  3, 92, :_reduce_61,
  3, 92, :_reduce_62,
  3, 92, :_reduce_63,
  3, 92, :_reduce_64,
  3, 92, :_reduce_65,
  6, 92, :_reduce_66,
  3, 92, :_reduce_67,
  3, 92, :_reduce_68,
  3, 92, :_reduce_69,
  4, 92, :_reduce_70,
  3, 92, :_reduce_71,
  1, 92, :_reduce_72,
  1, 92, :_reduce_73,
  1, 92, :_reduce_74,
  4, 92, :_reduce_75,
  1, 92, :_reduce_76,
  4, 92, :_reduce_77,
  4, 92, :_reduce_78,
  6, 92, :_reduce_79,
  4, 92, :_reduce_80,
  5, 92, :_reduce_81,
  2, 78, :_reduce_82,
  4, 78, :_reduce_83,
  2, 81, :_reduce_84,
  4, 80, :_reduce_85,
  2, 99, :_reduce_86,
  3, 102, :_reduce_87,
  0, 102, :_reduce_88,
  1, 101, :_reduce_89,
  1, 101, :_reduce_90,
  1, 101, :_reduce_91,
  1, 101, :_reduce_92,
  3, 96, :_reduce_93,
  1, 96, :_reduce_94,
  2, 103, :_reduce_95,
  3, 103, :_reduce_96,
  2, 98, :_reduce_97,
  3, 104, :_reduce_98,
  0, 104, :_reduce_99,
  2, 97, :_reduce_100,
  0, 97, :_reduce_101,
  3, 79, :_reduce_102,
  3, 105, :_reduce_103,
  0, 105, :_reduce_104,
  1, 100, :_reduce_105,
  0, 100, :_reduce_106,
  2, 85, :_reduce_107,
  3, 106, :_reduce_108,
  0, 106, :_reduce_109 ]

racc_reduce_n = 110

racc_shift_n = 239

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  :xor => 12,
  "<=" => 13,
  "=>" => 14,
  "<=>" => 15,
  "=" => 16,
  :authenticable => 17,
  :usergroup => 18,
  :class => 19,
  :extends => 20,
  :inverseof => 21,
  :action => 22,
  :foreach => 23,
  :flatforeach => 24,
  :unflatforeach => 25,
  :either => 26,
  :create => 27,
  :derefcreate => 28,
  :delete => 29,
  :if => 30,
  :else => 31,
  :subset => 32,
  :oneof => 33,
  :tryoneof => 34,
  :allof => 35,
  :invariant => 36,
  :forall => 37,
  :exists => 38,
  :isempty => 39,
  :empty => 40,
  :true => 41,
  :false => 42,
  :not => 43,
  :equal => 44,
  :implies => 45,
  :unknown => 46,
  :currentuser => 47,
  :inusergroup => 48,
  :allofusergroup => 49,
  :permit => 50,
  :permitted => 51,
  :permittedbytype => 52,
  :edit => 53,
  :read => 54,
  :IDENT => 55,
  :NUMBER => 56,
  :STRING => 57,
  :BASIC_TYPE => 58,
  :JS => 59,
  :roole => 60,
  :raize => 61,
  :assert => 62,
  :pickoneexpr => 63,
  "{" => 64,
  "}" => 65,
  ".." => 66,
  "+=" => 67,
  "-=" => 68,
  ":" => 69,
  "(" => 70,
  ")" => 71,
  "," => 72 }

racc_nt_base = 73

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "xor",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "\"=\"",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "either",
  "create",
  "derefcreate",
  "delete",
  "if",
  "else",
  "subset",
  "oneof",
  "tryoneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "isempty",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "raize",
  "assert",
  "pickoneexpr",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "block",
  "statements",
  "statement",
  "expr",
  "foreach_stmt",
  "eitherblocks",
  "optelse",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "comma_separated_exprs",
  "perm_op_list",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "more_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 25)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 27)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 29)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 31)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 41)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 42)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 44)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 45)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 47)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 50)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_17(val, _values, result)
     return ASTField.new :lineno => val[0][1], :type_name => val[0][0], :name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_19(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 58)
  def _reduce_20(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 60)
  def _reduce_21(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 61)
  def _reduce_22(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_23(val, _values, result)
     return ASTAction.new :lineno => val[0], :name => val[1], :block => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 65)
  def _reduce_24(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 67)
  def _reduce_25(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 68)
  def _reduce_26(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 70)
  def _reduce_27(val, _values, result)
     return ASTExprStmt.new :lineno => val[0].lineno, :expr => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_28(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 73)
  def _reduce_29(val, _values, result)
                   return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_30(val, _values, result)
                   return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 79)
  def _reduce_31(val, _values, result)
                   return ASTMemberSet.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2], :expr => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_32(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 82)
  def _reduce_33(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_34(val, _values, result)
     return ASTIf.new(
               :lineno => val[0], :condition => val[1], :then_block => val[2], :else_block => val[3]
             )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_35(val, _values, result)
     return ASTRaise.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 87)
  def _reduce_36(val, _values, result)
     return ASTAssertFormula.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 90)
  def _reduce_37(val, _values, result)
                      return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 93)
  def _reduce_38(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(true)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 98)
  def _reduce_39(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(false)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 103)
  def _reduce_40(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 104)
  def _reduce_41(val, _values, result)
     return ASTBlock.new :statements => [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 106)
  def _reduce_42(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 107)
  def _reduce_43(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 109)
  def _reduce_44(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 110)
  def _reduce_45(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 111)
  def _reduce_46(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 112)
  def _reduce_47(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 113)
  def _reduce_48(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 114)
  def _reduce_49(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 115)
  def _reduce_50(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 117)
  def _reduce_51(val, _values, result)
     return ASTDereferenceCreate.new :lineno => val[0], :objset => val[2], :rel_name => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_52(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_53(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_54(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 121)
  def _reduce_55(val, _values, result)
     return ASTJsExpr.new :lineno => val[0][:lineno], :js    => val[0][:js] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_56(val, _values, result)
     return ASTNumber.new :lineno => val[0][:lineno], :value => val[0][:value] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_57(val, _values, result)
     return ASTString.new :lineno => val[0][:lineno], :value => val[0][:value].gsub(%q{\'}, %q{'}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_58(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_59(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 129)
  def _reduce_60(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_61(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_62(val, _values, result)
     return ASTOr.new  :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_63(val, _values, result)
     return ASTXor.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 134)
  def _reduce_64(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 136)
  def _reduce_65(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_66(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 140)
  def _reduce_67(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_68(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 143)
  def _reduce_69(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 146)
  def _reduce_70(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 147)
  def _reduce_71(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 148)
  def _reduce_72(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 149)
  def _reduce_73(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 150)
  def _reduce_74(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 151)
  def _reduce_75(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 152)
  def _reduce_76(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 153)
  def _reduce_77(val, _values, result)
     return ASTPickOneExpr.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 155)
  def _reduce_78(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 157)
  def _reduce_79(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 158)
  def _reduce_80(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 159)
  def _reduce_81(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 162)
  def _reduce_82(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 165)
  def _reduce_83(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 168)
  def _reduce_84(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 171)
  def _reduce_85(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 173)
  def _reduce_86(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 174)
  def _reduce_87(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 175)
  def _reduce_88(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 177)
  def _reduce_89(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 178)
  def _reduce_90(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 179)
  def _reduce_91(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 180)
  def _reduce_92(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 183)
  def _reduce_93(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 184)
  def _reduce_94(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 187)
  def _reduce_95(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 189)
  def _reduce_96(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 191)
  def _reduce_97(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 193)
  def _reduce_98(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 194)
  def _reduce_99(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 196)
  def _reduce_100(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 197)
  def _reduce_101(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 200)
  def _reduce_102(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 202)
  def _reduce_103(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 203)
  def _reduce_104(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 205)
  def _reduce_105(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 206)
  def _reduce_106(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 207)
  def _reduce_107(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 208)
  def _reduce_108(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_109(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
