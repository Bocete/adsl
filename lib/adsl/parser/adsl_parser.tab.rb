#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 236)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'44,67,75,72,74,169,60,68,69,71,70,73,121,67,75,72,74,227,150,68,69,71',
'70,73,30,148,67,75,152,26,27,28,29,83,37,38,45,32,42,43,39,41,40,44',
'46,47,48,148,49,50,147,60,60,82,51,35,36,159,34,67,75,61,81,33,158,161',
'168,30,155,149,225,226,26,27,28,29,153,37,38,45,32,42,43,39,41,40,44',
'46,47,48,162,49,50,163,139,164,186,51,35,36,183,34,157,145,67,75,33',
'167,80,170,30,67,75,72,74,26,27,28,29,171,37,38,45,32,42,43,39,41,40',
'44,46,47,48,78,49,50,67,75,72,74,51,35,36,121,34,67,75,72,74,33,77,68',
'69,30,175,85,66,178,26,27,28,29,179,37,38,45,32,42,43,39,41,40,44,46',
'47,48,65,49,50,181,86,67,64,51,35,36,197,34,67,75,72,74,33,198,68,69',
'30,199,63,84,60,26,27,28,29,144,37,38,45,32,42,43,39,41,40,44,46,47',
'48,62,49,50,203,204,205,206,51,35,36,59,34,98,58,167,57,33,212,213,214',
'30,215,139,216,217,26,27,28,29,138,37,38,45,32,42,43,39,41,40,44,46',
'47,48,218,49,50,56,220,221,222,51,35,36,224,34,55,167,231,24,33,23,55',
'235,30,136,135,134,239,26,27,28,29,167,37,38,45,32,42,43,39,41,40,44',
'46,47,48,-27,49,50,129,16,106,109,51,35,36,121,34,167,,,,33,,,,30,,',
',,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51',
'35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30',
',,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,25',
'35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30',
',,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51',
'35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,,46,47,48,44,49,50,,,,,51,35,36,,34,,,,,33,,,,194',
'195,196,192,30,,190,193,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30',
',,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51',
'35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,',
'46,47,48,44,49,50,,,,,51,35,36,,34,,,,,33,,,,194,195,196,192,30,,190',
'193,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,',
'51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40',
'44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37',
'38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,',
',,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50',
',,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39',
'41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28',
'29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,',
',,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48',
',49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26',
'27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36',
',34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47',
'48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32',
'42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,',
'26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,107,35',
'36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46',
'47,48,,49,50,,,,,127,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45',
'32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,',
',,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51',
'35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51,35,36,,34,,,,,33,,,,30',
',,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,47,48,,49,50,,,,,51',
'35,36,,34,,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,',
'46,47,48,,49,50,,,,,51,35,36,,34,67,75,72,74,33,,68,69,71,70,73,67,75',
'72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70,73,67,75,72,74,,,68',
'69,71,70,73,67,75,72,74,,,68,69,71,70,73,,,67,75,72,74,,141,68,69,71',
'70,73,67,75,72,74,,142,68,69,71,70,73,67,75,72,74,,143,68,69,71,70,73',
'67,75,72,74,,201,68,69,71,70,73,67,75,72,74,,118,68,69,71,70,73,,,67',
'75,72,74,,156,68,69,71,70,73,67,75,72,74,,180,68,69,71,70,73,,10,15',
'-11,,200,11,,10,15,-11,,167,11,,,10,15,-11,,12,11,,167,10,15,-11,12',
',11,,,,,14,12,167,10,15,-11,,14,11,12,,,13,167,,14,,,91,13,92,,12,14',
'10,15,-11,13,,11,,,10,15,-11,13,14,11,,,,,,12,90,89,93,94,13,,,12,91',
',92,,91,14,92,,91,,92,,,14,,,,13,,,,,,,,13,90,89,93,94,90,89,93,94,90',
'89,93,94,67,75,72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70,73,67',
'75,72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70,73,67,75,72,74,',
',68,69,71,70,73,67,75,72,74,,,68,69,71,70,73,208,75,72,74,,,68,69,71',
'70,73,67,75,72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70,73,67,75',
'72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70,73,146,75,72,74,,,68',
'69,71,70,73,67,75,72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70,73',
'67,75,72,74,,,68,69,71,70,73,67,75,72,74,,,68,69,71,70' ]
        racc_action_table = arr = ::Array.new(2136, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'80,128,128,128,128,139,25,128,128,128,128,128,78,123,123,123,123,217',
'121,123,123,123,123,123,80,122,114,114,122,80,80,80,80,47,80,80,80,80',
'80,80,80,80,80,81,80,80,80,119,80,80,119,127,107,45,80,80,80,129,80',
'79,79,25,41,80,128,131,139,81,125,121,217,217,81,81,81,81,123,81,81',
'81,81,81,81,81,81,81,75,81,81,81,133,81,81,134,165,135,165,81,81,81',
'165,81,127,107,116,116,81,138,40,140,75,110,110,110,110,75,75,75,75',
'146,75,75,75,75,75,75,75,75,75,74,75,75,75,38,75,75,111,111,111,111',
'75,75,75,148,75,113,113,113,113,75,37,113,113,74,151,49,30,154,74,74',
'74,74,158,74,74,74,74,74,74,74,74,74,227,74,74,74,29,74,74,161,50,117',
'28,74,74,74,168,74,112,112,112,112,74,170,112,112,227,171,27,48,51,227',
'227,227,227,106,227,227,227,227,227,227,227,227,227,226,227,227,227',
'26,227,227,179,185,186,187,227,227,227,24,227,58,23,192,16,227,194,195',
'196,226,198,100,204,208,226,226,226,226,99,226,226,226,226,226,226,226',
'226,226,225,226,226,226,210,226,226,15,212,213,214,226,226,226,216,226',
'14,218,219,11,226,9,98,224,225,97,96,95,228,225,225,225,225,231,225',
'225,225,225,225,225,225,225,225,222,225,225,225,59,225,225,84,1,65,67',
'225,225,225,77,225,239,,,,225,,,,222,,,,,222,222,222,222,,222,222,222',
'222,222,222,222,222,222,221,222,222,222,,222,222,,,,,222,222,222,,222',
',,,,222,,,,221,,,,,221,221,221,221,,221,221,221,221,221,221,221,221',
'221,220,221,221,221,,221,221,,,,,221,221,221,,221,,,,,221,,,,220,,,',
',220,220,220,220,,220,220,220,220,220,220,220,220,220,12,220,220,220',
',220,220,,,,,220,220,220,,220,,,,,220,,,,12,,,,,12,12,12,12,,12,12,12',
'12,12,12,12,12,12,13,12,12,12,,12,12,,,,,12,12,12,,12,,,,,12,,,,13,',
',,,13,13,13,13,,13,13,13,13,13,13,13,13,13,73,13,13,13,,13,13,,,,,13',
'13,13,,13,,,,,13,,,,73,,,,,73,73,73,73,,73,73,73,73,73,73,73,73,73,72',
'73,73,73,,73,73,,,,,73,73,73,,73,,,,,73,,,,72,,,,,72,72,72,72,,72,72',
'72,72,72,72,72,72,72,193,72,72,72,,72,72,,,,,72,72,72,,72,,,,,72,,,',
'193,,,,,193,193,193,193,,193,193,193,193,193,193,193,193,193,190,193',
'193,193,,193,193,,,,,193,193,193,,193,,,,,193,,,,190,,,,,190,190,190',
'190,,190,190,190,190,190,190,190,190,190,,190,190,190,188,190,190,,',
',,190,190,190,,190,,,,,190,,,,188,188,188,188,188,,188,188,,188,188',
'188,188,,188,188,188,188,188,188,188,188,188,71,188,188,188,,188,188',
',,,,188,188,188,,188,,,,,188,,,,71,,,,,71,71,71,71,,71,71,71,71,71,71',
'71,71,71,178,71,71,71,,71,71,,,,,71,71,71,,71,,,,,71,,,,178,,,,,178',
'178,178,178,,178,178,178,178,178,178,178,178,178,70,178,178,178,,178',
'178,,,,,178,178,178,,178,,,,,178,,,,70,,,,,70,70,70,70,,70,70,70,70',
'70,70,70,70,70,,70,70,70,167,70,70,,,,,70,70,70,,70,,,,,70,,,,167,167',
'167,167,167,,167,167,,167,167,167,167,,167,167,167,167,167,167,167,167',
'167,69,167,167,167,,167,167,,,,,167,167,167,,167,,,,,167,,,,69,,,,,69',
'69,69,69,,69,69,69,69,69,69,69,69,69,153,69,69,69,,69,69,,,,,69,69,69',
',69,,,,,69,,,,153,,,,,153,153,153,153,,153,153,153,153,153,153,153,153',
'153,152,153,153,153,,153,153,,,,,153,153,153,,153,,,,,153,,,,152,,,',
',152,152,152,152,,152,152,152,152,152,152,152,152,152,33,152,152,152',
',152,152,,,,,152,152,152,,152,,,,,152,,,,33,,,,,33,33,33,33,,33,33,33',
'33,33,33,33,33,33,150,33,33,33,,33,33,,,,,33,33,33,,33,,,,,33,,,,150',
',,,,150,150,150,150,,150,150,150,150,150,150,150,150,150,147,150,150',
'150,,150,150,,,,,150,150,150,,150,,,,,150,,,,147,,,,,147,147,147,147',
',147,147,147,147,147,147,147,147,147,39,147,147,147,,147,147,,,,,147',
'147,147,,147,,,,,147,,,,39,,,,,39,39,39,39,,39,39,39,39,39,39,39,39',
'39,68,39,39,39,,39,39,,,,,39,39,39,,39,,,,,39,,,,68,,,,,68,68,68,68',
',68,68,68,68,68,68,68,68,68,60,68,68,68,,68,68,,,,,68,68,68,,68,,,,',
'68,,,,60,,,,,60,60,60,60,,60,60,60,60,60,60,60,60,60,82,60,60,60,,60',
'60,,,,,60,60,60,,60,,,,,60,,,,82,,,,,82,82,82,82,,82,82,82,82,82,82',
'82,82,82,66,82,82,82,,82,82,,,,,82,82,82,,82,,,,,82,,,,66,,,,,66,66',
'66,66,,66,66,66,66,66,66,66,66,66,83,66,66,66,,66,66,,,,,66,66,66,,66',
',,,,66,,,,83,,,,,83,83,83,83,,83,83,83,83,83,83,83,83,83,64,83,83,83',
',83,83,,,,,83,83,83,,83,,,,,83,,,,64,,,,,64,64,64,64,,64,64,64,64,64',
'64,64,64,64,63,64,64,64,,64,64,,,,,64,64,64,,64,,,,,64,,,,63,,,,,63',
'63,63,63,,63,63,63,63,63,63,63,63,63,62,63,63,63,,63,63,,,,,63,63,63',
',63,,,,,63,,,,62,,,,,62,62,62,62,,62,62,62,62,62,62,62,62,62,61,62,62',
'62,,62,62,,,,,62,62,62,,62,,,,,62,,,,61,,,,,61,61,61,61,,61,61,61,61',
'61,61,61,61,61,87,61,61,61,,61,61,,,,,61,61,61,,61,,,,,61,,,,87,,,,',
'87,87,87,87,,87,87,87,87,87,87,87,87,87,130,87,87,87,,87,87,,,,,87,87',
'87,,87,,,,,87,,,,130,,,,,130,130,130,130,,130,130,130,130,130,130,130',
'130,130,,130,130,130,,130,130,,,,,130,130,130,,130,103,103,103,103,130',
',103,103,103,103,103,104,104,104,104,,,104,104,104,104,104,105,105,105',
'105,,,105,105,105,105,105,177,177,177,177,,,177,177,177,177,177,76,76',
'76,76,,,76,76,76,76,76,,,126,126,126,126,,103,126,126,126,126,126,160',
'160,160,160,,104,160,160,160,160,160,172,172,172,172,,105,172,172,172',
'172,172,234,234,234,234,,177,234,234,234,234,234,233,233,233,233,,76',
'233,233,233,233,233,,,211,211,211,211,,126,211,211,211,211,211,232,232',
'232,232,,160,232,232,232,232,232,,0,0,0,,172,0,,6,6,6,,234,6,,,5,5,5',
',0,5,,233,8,8,8,6,,8,,,,,0,5,211,7,7,7,,6,7,8,,,0,232,,5,,,85,6,85,',
'7,8,3,3,3,5,,3,,,4,4,4,8,7,4,,,,,,3,85,85,85,85,7,,,4,86,,86,,53,3,53',
',162,,162,,,4,,,,3,,,,,,,,4,86,86,86,86,53,53,53,53,162,162,162,162',
'209,209,209,209,,,209,209,209,209,209,237,237,237,237,,,237,237,237',
'237,237,236,236,236,236,,,236,236,236,236,236,202,202,202,202,,,202',
'202,202,202,202,101,101,101,101,,,101,101,101,101,101,102,102,102,102',
',,102,102,102,102,102,189,189,189,189,,,189,189,189,189,189,238,238',
'238,238,,,238,238,238,238,238,174,174,174,174,,,174,174,174,174,174',
'124,124,124,124,,,124,124,124,124,124,176,176,176,176,,,176,176,176',
'176,176,108,108,108,108,,,108,108,108,108,108,31,31,31,31,,,31,31,31',
'31,31,132,132,132,132,,,132,132,132,132,132,52,52,52,52,,,52,52,52,52',
'52,115,115,115,115,,,115,115,115,115' ]
        racc_action_check = arr = ::Array.new(2136, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1822,   309,   nil,  1879,  1887,  1837,  1829,  1858,  1845,   261,
   nil,   221,   428,   471,   218,   209,   234,   nil,   nil,   nil,
   nil,   nil,   nil,   176,   164,    -9,   154,   133,   117,   111,
    91,  2089,   nil,  1038,   nil,   nil,   nil,    85,    68,  1167,
    43,    -3,   nil,   nil,   nil,   -12,   nil,   -32,   134,    90,
   115,   185,  2111,  1901,   nil,   nil,   nil,   nil,   212,   248,
  1253,  1554,  1511,  1468,  1425,   254,  1339,   255,  1210,   909,
   819,   733,   557,   514,   127,    84,  1741,   259,   -44,    55,
    -2,    41,  1296,  1382,   252,  1863,  1897,  1597,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   218,   217,   221,   224,   182,
   184,  2001,  2012,  1697,  1708,  1719,   139,    37,  2078,   nil,
   107,   132,   184,   141,    22,  2122,   100,   177,   nil,   -20,
   nil,    13,   -42,     9,  2056,     2,  1754,    36,    -3,    -9,
  1640,     9,  2100,    23,    37,    39,   nil,   nil,    45,     2,
    53,   nil,   nil,   nil,   nil,   nil,    63,  1124,    87,   nil,
  1081,    88,   995,   952,    90,   nil,   nil,   nil,   106,   nil,
  1765,   113,  1905,   nil,   nil,    37,   nil,   866,   129,   nil,
   137,   131,  1776,   nil,  2045,   nil,  2067,  1730,   776,   156,
   nil,   nil,   nil,   nil,   nil,   167,   168,   162,   690,  2023,
   643,   nil,   171,   600,   180,   181,   182,   nil,   173,   nil,
   nil,   nil,  1990,   nil,   186,   nil,   nil,   nil,   187,  1957,
   251,  1811,   196,   197,   198,   nil,   252,     2,   213,   246,
   385,   342,   299,   nil,   225,   256,   213,   170,   275,   nil,
   nil,   229,  1822,  1798,  1787,   nil,  1979,  1968,  2034,   255,
   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -8,  -113,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -113,
   -10,  -113,  -113,  -113,  -109,  -113,  -113,    -2,    -3,    -4,
    -5,    -6,    -7,  -113,  -113,   -46,  -113,  -113,  -113,  -113,
  -113,   -83,   -55,  -113,   -57,   -58,   -59,  -113,  -113,  -113,
  -113,  -113,   -73,   -74,   -75,  -113,   -77,  -113,  -113,  -113,
  -113,   -46,   -85,  -113,  -108,  -112,  -107,   245,   -13,   -25,
  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,
  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,   -62,
  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,   -89,   -90,
   -91,   -92,   -93,   -94,   -95,  -110,  -105,  -113,  -113,  -113,
  -113,   -47,   -84,  -113,  -113,  -113,  -113,   -46,  -113,   -54,
   -63,   -64,   -65,   -66,   -68,   -69,   -70,   -72,   -56,  -113,
   -97,  -113,  -104,  -113,  -102,  -113,  -113,   -46,  -113,  -113,
  -113,  -113,   -86,   -87,  -113,  -113,   -15,   -12,  -113,   -18,
  -113,   -48,   -49,   -50,   -51,   -52,  -113,  -113,  -113,   -98,
  -113,  -113,  -113,  -113,  -100,   -71,   -76,   -78,  -113,   -80,
  -113,  -113,  -113,  -111,  -106,  -113,   -23,   -30,  -113,   -20,
  -113,   -54,  -113,   -96,   -99,   -61,  -103,  -113,  -113,  -113,
   -81,   -82,   -88,    -9,   -14,  -113,  -113,  -113,   -30,   -31,
  -113,   -36,  -113,  -113,  -113,  -113,  -113,   -19,   -24,   -53,
   -60,   -67,  -101,   -79,  -113,   -17,   -28,   -29,  -113,   -32,
  -113,  -113,  -113,  -113,  -113,   -26,   -22,   -54,  -113,   -43,
  -113,  -113,  -113,   -16,  -113,  -113,  -113,  -113,   -37,   -45,
   -38,  -113,  -113,  -113,  -113,   -21,   -33,   -34,   -35,  -113,
   -42,   -39,   -40,   -41,   -44 ]

racc_goto_table = [
    31,    52,    54,    87,   187,   119,   122,   140,     2,   228,
   166,    17,    18,    19,    20,    21,    22,   223,   100,   184,
   165,    76,    99,   230,    97,   207,   151,    79,   125,     1,
    53,   182,   133,   173,   154,   130,   131,    96,    95,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   101,   102,
   103,   104,   105,   nil,   108,   nil,   110,   111,   112,   113,
   114,   115,   116,   117,   210,   nil,   nil,   nil,   123,   124,
   126,   128,   185,   nil,   nil,   132,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   219,   nil,   nil,   137,   nil,   nil,   nil,
   229,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   240,   241,   242,   243,   nil,   nil,   nil,
   nil,   244,   nil,   nil,   nil,   nil,   nil,   nil,   160,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   174,   nil,
   176,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   202,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   209,   nil,
   nil,   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   232,   233,
   234,   nil,   nil,   236,   237,   238 ]

racc_goto_check = [
    21,    21,    12,    28,    19,    25,    25,    14,     2,    23,
    17,     2,     2,     2,     2,     2,     2,    15,    18,    13,
    11,    21,    16,    24,    10,    19,    26,    21,    27,     1,
    29,    30,    31,    32,    33,    28,    28,    34,    35,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,
    21,    21,    21,   nil,    21,   nil,    21,    21,    21,    21,
    21,    21,    21,    21,    17,   nil,   nil,   nil,    21,    21,
    21,    21,    14,   nil,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    17,   nil,   nil,    12,   nil,   nil,   nil,
    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    17,    17,    17,    17,   nil,   nil,   nil,
   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,    21,   nil,
    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,
    21,   nil,   nil,    21,    21,    21 ]

racc_goto_pointer = [
   nil,    29,     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -34,  -116,   -12,  -146,   -93,  -199,   -37,  -128,   -41,  -163,
   nil,   -12,   nil,  -209,  -196,   -72,   -96,   -53,   -50,    16,
  -131,   -56,  -115,   -90,   -19,   -17 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   188,   189,   191,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    88,   nil,   120,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 72, :_reduce_1,
  2, 73, :_reduce_2,
  2, 73, :_reduce_3,
  2, 73, :_reduce_4,
  2, 73, :_reduce_5,
  2, 73, :_reduce_6,
  2, 73, :_reduce_7,
  0, 73, :_reduce_8,
  7, 74, :_reduce_9,
  1, 80, :_reduce_10,
  0, 80, :_reduce_11,
  2, 81, :_reduce_12,
  0, 81, :_reduce_13,
  2, 82, :_reduce_14,
  0, 82, :_reduce_15,
  4, 84, :_reduce_16,
  2, 84, :_reduce_17,
  1, 85, :_reduce_18,
  3, 85, :_reduce_19,
  2, 85, :_reduce_20,
  2, 86, :_reduce_21,
  0, 86, :_reduce_22,
  6, 75, :_reduce_23,
  4, 87, :_reduce_24,
  0, 87, :_reduce_25,
  5, 89, :_reduce_26,
  0, 89, :_reduce_27,
  3, 88, :_reduce_28,
  2, 90, :_reduce_29,
  0, 90, :_reduce_30,
  1, 91, :_reduce_31,
  2, 91, :_reduce_32,
  5, 91, :_reduce_33,
  5, 91, :_reduce_34,
  5, 91, :_reduce_35,
  1, 91, :_reduce_36,
  4, 91, :_reduce_37,
  4, 91, :_reduce_38,
  5, 93, :_reduce_39,
  5, 93, :_reduce_40,
  5, 93, :_reduce_41,
  2, 95, :_reduce_42,
  0, 95, :_reduce_43,
  3, 94, :_reduce_44,
  1, 94, :_reduce_45,
  1, 92, :_reduce_46,
  3, 92, :_reduce_47,
  4, 92, :_reduce_48,
  4, 92, :_reduce_49,
  4, 92, :_reduce_50,
  4, 92, :_reduce_51,
  4, 92, :_reduce_52,
  6, 92, :_reduce_53,
  3, 92, :_reduce_54,
  1, 92, :_reduce_55,
  3, 92, :_reduce_56,
  1, 92, :_reduce_57,
  1, 92, :_reduce_58,
  1, 92, :_reduce_59,
  6, 92, :_reduce_60,
  5, 92, :_reduce_61,
  2, 92, :_reduce_62,
  3, 92, :_reduce_63,
  3, 92, :_reduce_64,
  3, 92, :_reduce_65,
  3, 92, :_reduce_66,
  6, 92, :_reduce_67,
  3, 92, :_reduce_68,
  3, 92, :_reduce_69,
  3, 92, :_reduce_70,
  4, 92, :_reduce_71,
  3, 92, :_reduce_72,
  1, 92, :_reduce_73,
  1, 92, :_reduce_74,
  1, 92, :_reduce_75,
  4, 92, :_reduce_76,
  1, 92, :_reduce_77,
  4, 92, :_reduce_78,
  6, 92, :_reduce_79,
  4, 92, :_reduce_80,
  5, 92, :_reduce_81,
  5, 92, :_reduce_82,
  2, 76, :_reduce_83,
  4, 76, :_reduce_84,
  2, 79, :_reduce_85,
  4, 78, :_reduce_86,
  2, 99, :_reduce_87,
  3, 102, :_reduce_88,
  0, 102, :_reduce_89,
  1, 101, :_reduce_90,
  1, 101, :_reduce_91,
  1, 101, :_reduce_92,
  1, 101, :_reduce_93,
  1, 101, :_reduce_94,
  1, 101, :_reduce_95,
  3, 96, :_reduce_96,
  1, 96, :_reduce_97,
  2, 103, :_reduce_98,
  3, 103, :_reduce_99,
  2, 98, :_reduce_100,
  3, 104, :_reduce_101,
  0, 104, :_reduce_102,
  2, 97, :_reduce_103,
  0, 97, :_reduce_104,
  3, 77, :_reduce_105,
  3, 105, :_reduce_106,
  0, 105, :_reduce_107,
  1, 100, :_reduce_108,
  0, 100, :_reduce_109,
  2, 83, :_reduce_110,
  3, 106, :_reduce_111,
  0, 106, :_reduce_112 ]

racc_reduce_n = 113

racc_shift_n = 245

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  "<=" => 12,
  "=>" => 13,
  "<=>" => 14,
  "=" => 15,
  :authenticable => 16,
  :usergroup => 17,
  :class => 18,
  :extends => 19,
  :inverseof => 20,
  :action => 21,
  :foreach => 22,
  :flatforeach => 23,
  :unflatforeach => 24,
  :either => 25,
  :create => 26,
  :derefcreate => 27,
  :delete => 28,
  :if => 29,
  :else => 30,
  :subset => 31,
  :oneof => 32,
  :tryoneof => 33,
  :allof => 34,
  :invariant => 35,
  :forall => 36,
  :exists => 37,
  :isempty => 38,
  :empty => 39,
  :true => 40,
  :false => 41,
  :not => 42,
  :equal => 43,
  :implies => 44,
  :unknown => 45,
  :currentuser => 46,
  :inusergroup => 47,
  :allofusergroup => 48,
  :permit => 49,
  :permitted => 50,
  :permittedbytype => 51,
  :edit => 52,
  :read => 53,
  :assoc => 54,
  :deassoc => 55,
  :IDENT => 56,
  :NUMBER => 57,
  :STRING => 58,
  :BASIC_TYPE => 59,
  :JS => 60,
  :roole => 61,
  "{" => 62,
  "}" => 63,
  ".." => 64,
  "(" => 65,
  ")" => 66,
  "," => 67,
  "+=" => 68,
  "-=" => 69,
  ":" => 70 }

racc_nt_base = 71

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "\"=\"",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "either",
  "create",
  "derefcreate",
  "delete",
  "if",
  "else",
  "subset",
  "oneof",
  "tryoneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "isempty",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "assoc",
  "deassoc",
  "IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "action_args",
  "block",
  "additional_args",
  "statements",
  "statement",
  "expr",
  "foreach_stmt",
  "eitherblocks",
  "optelse",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "comma_separated_exprs",
  "perm_op_list",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "more_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 25)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 27)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 29)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 31)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 41)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 42)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 44)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 45)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 47)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 50)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_17(val, _values, result)
     return ASTField.new :lineno => val[0][1], :type_name => val[0][0], :name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_19(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 58)
  def _reduce_20(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 60)
  def _reduce_21(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 61)
  def _reduce_22(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_23(val, _values, result)
     return ASTAction.new(
                 :lineno => val[0], :name => val[1], :arg_cardinalities => val[3][0],
                 :arg_types => val[3][1], :arg_names => val[3][2], :block => val[5]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 69)
  def _reduce_24(val, _values, result)
                     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0]
               
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_25(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 74)
  def _reduce_26(val, _values, result)
                         val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0]
                   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_27(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_28(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_29(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_30(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_31(val, _values, result)
     return ASTExprStmt.new :lineno => val[0].lineno, :expr => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 84)
  def _reduce_32(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_33(val, _values, result)
                   return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 89)
  def _reduce_34(val, _values, result)
                   return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 92)
  def _reduce_35(val, _values, result)
                   return ASTMemberSet.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2], :expr => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 94)
  def _reduce_36(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 95)
  def _reduce_37(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 96)
  def _reduce_38(val, _values, result)
     return ASTIf.new(
               :lineno => val[0], :condition => val[1], :then_block => val[2], :else_block => val[3]
             )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 101)
  def _reduce_39(val, _values, result)
                      return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 104)
  def _reduce_40(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(true)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 109)
  def _reduce_41(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(false)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 114)
  def _reduce_42(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 115)
  def _reduce_43(val, _values, result)
     return ASTBlock.new :statements => [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 117)
  def _reduce_44(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_45(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_46(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 121)
  def _reduce_47(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_48(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_49(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 124)
  def _reduce_50(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_51(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 126)
  def _reduce_52(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 128)
  def _reduce_53(val, _values, result)
     return ASTDereferenceCreate.new :lineno => val[0], :objset => val[2], :rel_name => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 129)
  def _reduce_54(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_55(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_56(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_57(val, _values, result)
     return ASTJsExpr.new :lineno => val[0][:lineno], :js    => val[0][:js] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 133)
  def _reduce_58(val, _values, result)
     return ASTNumber.new :lineno => val[0][:lineno], :value => val[0][:value] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 134)
  def _reduce_59(val, _values, result)
     return ASTString.new :lineno => val[0][:lineno], :value => val[0][:value].gsub(%q{\'}, %q{'}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 136)
  def _reduce_60(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_61(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 140)
  def _reduce_62(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 141)
  def _reduce_63(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_64(val, _values, result)
     return ASTOr.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 144)
  def _reduce_65(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 146)
  def _reduce_66(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 148)
  def _reduce_67(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 150)
  def _reduce_68(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 152)
  def _reduce_69(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 153)
  def _reduce_70(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 156)
  def _reduce_71(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 157)
  def _reduce_72(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 158)
  def _reduce_73(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 159)
  def _reduce_74(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 160)
  def _reduce_75(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 161)
  def _reduce_76(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 162)
  def _reduce_77(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 164)
  def _reduce_78(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 166)
  def _reduce_79(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 167)
  def _reduce_80(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 168)
  def _reduce_81(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 170)
  def _reduce_82(val, _values, result)
     return ASTPermittedByType.new :lineno => val[0], :ops => val[2], :class_name => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 173)
  def _reduce_83(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 176)
  def _reduce_84(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 179)
  def _reduce_85(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 182)
  def _reduce_86(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 184)
  def _reduce_87(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 185)
  def _reduce_88(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 186)
  def _reduce_89(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 188)
  def _reduce_90(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 189)
  def _reduce_91(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 190)
  def _reduce_92(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 191)
  def _reduce_93(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 192)
  def _reduce_94(val, _values, result)
     return [:assoc, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 193)
  def _reduce_95(val, _values, result)
     return [:deassoc, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 196)
  def _reduce_96(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 197)
  def _reduce_97(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 200)
  def _reduce_98(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 202)
  def _reduce_99(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 204)
  def _reduce_100(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 206)
  def _reduce_101(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 207)
  def _reduce_102(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_103(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 210)
  def _reduce_104(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 213)
  def _reduce_105(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 215)
  def _reduce_106(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 216)
  def _reduce_107(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 218)
  def _reduce_108(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 219)
  def _reduce_109(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 220)
  def _reduce_110(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 221)
  def _reduce_111(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 222)
  def _reduce_112(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
