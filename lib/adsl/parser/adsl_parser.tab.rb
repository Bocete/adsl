#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 236)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'44,67,76,73,75,169,60,68,69,70,72,71,74,67,76,73,75,229,60,68,69,70',
'72,71,74,30,148,67,76,147,26,27,28,29,157,37,38,45,32,42,43,39,41,40',
'44,46,48,49,60,50,67,76,150,51,35,36,148,34,139,152,185,47,61,67,76',
'33,159,182,168,30,145,227,228,155,26,27,28,29,153,37,38,45,32,42,43',
'39,41,40,44,46,48,49,160,50,67,144,162,51,35,36,158,34,149,163,164,47',
'167,139,170,33,171,138,92,30,93,121,55,175,26,27,28,29,136,37,38,45',
'32,42,43,39,41,40,44,46,48,49,135,50,91,90,178,51,35,36,179,34,134,130',
'121,47,121,198,199,33,200,108,92,30,93,105,-27,97,26,27,28,29,60,37',
'38,45,32,42,43,39,41,40,44,46,48,49,204,50,91,90,205,51,35,36,206,34',
'207,87,86,47,85,167,84,33,83,214,92,30,93,215,216,217,26,27,28,29,82',
'37,38,45,32,42,43,39,41,40,44,46,48,49,218,50,91,90,219,51,35,36,81',
'34,220,79,78,47,222,223,224,33,226,66,167,30,67,76,73,75,26,27,28,29',
'233,37,38,45,32,42,43,39,41,40,44,46,48,49,65,50,64,63,237,51,35,36',
'62,34,59,58,241,47,167,57,56,33,55,24,23,30,67,76,73,75,26,27,28,29',
'16,37,38,45,32,42,43,39,41,40,44,46,48,49,167,50,,,,51,35,36,,34,,,',
'47,,,,33,,,,30,67,76,73,75,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,48,49,,50,,,,25,35,36,,34,,,,47,,,,33,,,',
'30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51',
'35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41',
'40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29',
',37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,106,35,36,,34,,,,47,',
',,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,',
'50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26',
'27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34',
',,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46',
'48,49,,50,,,,128,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,',
'30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51',
'35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41',
'40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29',
',37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,',
',33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50',
',,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43',
'39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27',
'28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,',
',47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48',
'49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32',
'42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,',
',26,27,28,29,,37,38,45,32,42,43,39,41,40,,46,48,49,44,50,,,,51,35,36',
',34,,,,47,,,,33,,,,195,196,197,191,30,,189,192,,26,27,28,29,,37,38,45',
'32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,193,194,47,,,,33',
',,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,',
',51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39',
'41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28',
'29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47',
',,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49',
',50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,,46,48,49,44,50,,,,51,35,36,,34,,,,47,,,,33,,,,195,196,197',
'191,30,,189,192,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49',
',50,,,,51,35,36,,34,,193,194,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45',
'32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30',
',,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35',
'36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40',
'44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37',
'38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33',
',,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,',
',51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39',
'41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28',
'29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,,47',
',,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49',
',50,,,,51,35,36,,34,,,,47,,,,33,,,,30,,,,,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,,46,48,49,,50,,,,51,35,36,,34,,,,47,,,,33,67,76,73,75,,',
'68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69',
'70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72',
'71,74,67,76,73,75,202,,68,69,70,72,71,74,67,76,73,75,118,,68,69,70,72',
'71,74,67,76,73,75,180,,68,69,70,72,71,74,67,76,73,75,201,,68,69,70,72',
'71,74,67,76,73,75,141,,68,69,70,72,71,74,67,76,73,75,142,,68,69,70,72',
'71,74,67,76,73,75,143,,68,69,70,72,71,74,10,15,-11,,156,11,10,15,-11',
',,11,167,10,15,-11,,,11,12,,10,15,-11,167,12,11,,,,,,12,14,,,167,,,14',
'12,,,13,,,14,,167,13,10,15,-11,,14,11,13,10,15,-11,,,11,,13,10,15,-11',
',12,11,67,76,73,75,,12,68,69,70,72,71,74,14,12,,,,,,14,,,13,,,,,14,',
'13,,,67,76,73,75,,13,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71',
'74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67',
'76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73',
'75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,',
',68,69,70,72,71,74,146,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68',
'69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,209,76,73,75,,,68,69',
'70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72',
'71,74,67,76,73,75,,,68,69,70,72,71,67,76,73,75,,,68,69,70,67,76,73,75',
',,68,69,70' ]
        racc_action_table = arr = ::Array.new(2334, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'147,129,129,129,129,139,25,129,129,129,129,129,129,123,123,123,123,219',
'106,123,123,123,123,123,123,147,119,80,80,119,147,147,147,147,127,147',
'147,147,147,147,147,147,147,147,131,147,147,147,128,147,116,116,121',
'147,147,147,122,147,165,122,165,147,25,114,114,147,129,165,139,131,106',
'219,219,125,131,131,131,131,123,131,131,131,131,131,131,131,131,131',
'70,131,131,131,130,131,117,105,133,131,131,131,128,131,121,134,135,131',
'138,99,140,131,146,98,87,70,87,148,97,151,70,70,70,70,96,70,70,70,70',
'70,70,70,70,70,69,70,70,70,95,70,87,87,154,70,70,70,159,70,94,86,79',
'70,78,168,170,70,171,67,162,69,162,65,59,58,69,69,69,69,51,69,69,69',
'69,69,69,69,69,69,68,69,69,69,179,69,162,162,184,69,69,69,185,69,186',
'50,49,69,48,191,47,69,45,195,53,68,53,196,197,199,68,68,68,68,41,68',
'68,68,68,68,68,68,68,68,71,68,68,68,205,68,53,53,209,68,68,68,40,68',
'211,38,37,68,214,215,216,68,218,30,220,71,111,111,111,111,71,71,71,71',
'221,71,71,71,71,71,71,71,71,71,150,71,71,71,29,71,28,27,226,71,71,71',
'26,71,24,23,230,71,233,16,15,71,14,11,9,150,110,110,110,110,150,150',
'150,150,1,150,150,150,150,150,150,150,150,150,152,150,150,150,241,150',
',,,150,150,150,,150,,,,150,,,,150,,,,152,109,109,109,109,152,152,152',
'152,,152,152,152,152,152,152,152,152,152,12,152,152,152,,152,,,,152',
'152,152,,152,,,,152,,,,152,,,,12,,,,,12,12,12,12,,12,12,12,12,12,12',
'12,12,12,13,12,12,12,,12,,,,12,12,12,,12,,,,12,,,,12,,,,13,,,,,13,13',
'13,13,,13,13,13,13,13,13,13,13,13,153,13,13,13,,13,,,,13,13,13,,13,',
',,13,,,,13,,,,153,,,,,153,153,153,153,,153,153,153,153,153,153,153,153',
'153,66,153,153,153,,153,,,,153,153,153,,153,,,,153,,,,153,,,,66,,,,',
'66,66,66,66,,66,66,66,66,66,66,66,66,66,88,66,66,66,,66,,,,66,66,66',
',66,,,,66,,,,66,,,,88,,,,,88,88,88,88,,88,88,88,88,88,88,88,88,88,229',
'88,88,88,,88,,,,88,88,88,,88,,,,88,,,,88,,,,229,,,,,229,229,229,229',
',229,229,229,229,229,229,229,229,229,228,229,229,229,,229,,,,229,229',
'229,,229,,,,229,,,,229,,,,228,,,,,228,228,228,228,,228,228,228,228,228',
'228,228,228,228,85,228,228,228,,228,,,,228,228,228,,228,,,,228,,,,228',
',,,85,,,,,85,85,85,85,,85,85,85,85,85,85,85,85,85,227,85,85,85,,85,',
',,85,85,85,,85,,,,85,,,,85,,,,227,,,,,227,227,227,227,,227,227,227,227',
'227,227,227,227,227,224,227,227,227,,227,,,,227,227,227,,227,,,,227',
',,,227,,,,224,,,,,224,224,224,224,,224,224,224,224,224,224,224,224,224',
'223,224,224,224,,224,,,,224,224,224,,224,,,,224,,,,224,,,,223,,,,,223',
'223,223,223,,223,223,223,223,223,223,223,223,223,222,223,223,223,,223',
',,,223,223,223,,223,,,,223,,,,223,,,,222,,,,,222,222,222,222,,222,222',
'222,222,222,222,222,222,222,84,222,222,222,,222,,,,222,222,222,,222',
',,,222,,,,222,,,,84,,,,,84,84,84,84,,84,84,84,84,84,84,84,84,84,83,84',
'84,84,,84,,,,84,84,84,,84,,,,84,,,,84,,,,83,,,,,83,83,83,83,,83,83,83',
'83,83,83,83,83,83,33,83,83,83,,83,,,,83,83,83,,83,,,,83,,,,83,,,,33',
',,,,33,33,33,33,,33,33,33,33,33,33,33,33,33,63,33,33,33,,33,,,,33,33',
'33,,33,,,,33,,,,33,,,,63,,,,,63,63,63,63,,63,63,63,63,63,63,63,63,63',
'81,63,63,63,,63,,,,63,63,63,,63,,,,63,,,,63,,,,81,,,,,81,81,81,81,,81',
'81,81,81,81,81,81,81,81,39,81,81,81,,81,,,,81,81,81,,81,,,,81,,,,81',
',,,39,,,,,39,39,39,39,,39,39,39,39,39,39,39,39,39,,39,39,39,167,39,',
',,39,39,39,,39,,,,39,,,,39,,,,167,167,167,167,167,,167,167,,167,167',
'167,167,,167,167,167,167,167,167,167,167,167,72,167,167,167,,167,,,',
'167,167,167,,167,,167,167,167,,,,167,,,,72,,,,,72,72,72,72,,72,72,72',
'72,72,72,72,72,72,194,72,72,72,,72,,,,72,72,72,,72,,,,72,,,,72,,,,194',
',,,,194,194,194,194,,194,194,194,194,194,194,194,194,194,192,194,194',
'194,,194,,,,194,194,194,,194,,,,194,,,,194,,,,192,,,,,192,192,192,192',
',192,192,192,192,192,192,192,192,192,189,192,192,192,,192,,,,192,192',
'192,,192,,,,192,,,,192,,,,189,,,,,189,189,189,189,,189,189,189,189,189',
'189,189,189,189,76,189,189,189,,189,,,,189,189,189,,189,,,,189,,,,189',
',,,76,,,,,76,76,76,76,,76,76,76,76,76,76,76,76,76,,76,76,76,187,76,',
',,76,76,76,,76,,,,76,,,,76,,,,187,187,187,187,187,,187,187,,187,187',
'187,187,,187,187,187,187,187,187,187,187,187,178,187,187,187,,187,,',
',187,187,187,,187,,187,187,187,,,,187,,,,178,,,,,178,178,178,178,,178',
'178,178,178,178,178,178,178,178,75,178,178,178,,178,,,,178,178,178,',
'178,,,,178,,,,178,,,,75,,,,,75,75,75,75,,75,75,75,75,75,75,75,75,75',
'74,75,75,75,,75,,,,75,75,75,,75,,,,75,,,,75,,,,74,,,,,74,74,74,74,,74',
'74,74,74,74,74,74,74,74,64,74,74,74,,74,,,,74,74,74,,74,,,,74,,,,74',
',,,64,,,,,64,64,64,64,,64,64,64,64,64,64,64,64,64,73,64,64,64,,64,,',
',64,64,64,,64,,,,64,,,,64,,,,73,,,,,73,73,73,73,,73,73,73,73,73,73,73',
'73,73,60,73,73,73,,73,,,,73,73,73,,73,,,,73,,,,73,,,,60,,,,,60,60,60',
'60,,60,60,60,60,60,60,60,60,60,61,60,60,60,,60,,,,60,60,60,,60,,,,60',
',,,60,,,,61,,,,,61,61,61,61,,61,61,61,61,61,61,61,61,61,62,61,61,61',
',61,,,,61,61,61,,61,,,,61,,,,61,,,,62,,,,,62,62,62,62,,62,62,62,62,62',
'62,62,62,62,82,62,62,62,,62,,,,62,62,62,,62,,,,62,,,,62,,,,82,,,,,82',
'82,82,82,,82,82,82,82,82,82,82,82,82,,82,82,82,,82,,,,82,82,82,,82,',
',,82,,,,82,177,177,177,177,,,177,177,177,177,177,177,77,77,77,77,,,77',
'77,77,77,77,77,161,161,161,161,,,161,161,161,161,161,161,172,172,172',
'172,,,172,172,172,172,172,172,102,102,102,102,,,102,102,102,102,102',
'102,103,103,103,103,177,,103,103,103,103,103,103,104,104,104,104,77',
',104,104,104,104,104,104,126,126,126,126,161,,126,126,126,126,126,126',
'234,234,234,234,172,,234,234,234,234,234,234,236,236,236,236,102,,236',
'236,236,236,236,236,235,235,235,235,103,,235,235,235,235,235,235,212',
'212,212,212,104,,212,212,212,212,212,212,6,6,6,,126,6,5,5,5,,,5,234',
'4,4,4,,,4,6,,8,8,8,236,5,8,,,,,,4,6,,,235,,,5,8,,,6,,,4,,212,5,3,3,3',
',8,3,4,0,0,0,,,0,,8,7,7,7,,3,7,100,100,100,100,,0,100,100,100,100,100',
'100,3,7,,,,,,0,,,3,,,,,7,,0,,,238,238,238,238,,7,238,238,238,238,238',
'238,31,31,31,31,,,31,31,31,31,31,31,239,239,239,239,,,239,239,239,239',
'239,239,101,101,101,101,,,101,101,101,101,101,101,213,213,213,213,,',
'213,213,213,213,213,213,240,240,240,240,,,240,240,240,240,240,240,124',
'124,124,124,,,124,124,124,124,124,124,132,132,132,132,,,132,132,132',
'132,132,132,210,210,210,210,,,210,210,210,210,210,210,107,107,107,107',
',,107,107,107,107,107,107,176,176,176,176,,,176,176,176,176,176,176',
'52,52,52,52,,,52,52,52,52,52,52,188,188,188,188,,,188,188,188,188,188',
'188,203,203,203,203,,,203,203,203,203,203,203,174,174,174,174,,,174',
'174,174,174,174,174,115,115,115,115,,,115,115,115,115,115,113,113,113',
'113,,,113,113,113,112,112,112,112,,,112,112,112' ]
        racc_action_check = arr = ::Array.new(2334, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  2062,   298,   nil,  2055,  2018,  2011,  2005,  2070,  2026,   269,
   nil,   232,   350,   394,   231,   229,   283,   nil,   nil,   nil,
   nil,   nil,   nil,   224,   211,   -10,   209,   204,   203,   201,
   176,  2133,   nil,   966,   nil,   nil,   nil,   169,   168,  1098,
   165,   143,   nil,   nil,   nil,   131,   nil,   129,   127,   125,
   124,   150,  2253,   173,   nil,   nil,   nil,   nil,   141,   104,
  1678,  1722,  1766,  1010,  1590,   104,   482,   100,   174,   130,
    86,   218,  1190,  1634,  1546,  1502,  1366,  1886,    95,    93,
    23,  1054,  1810,   922,   878,   658,    92,    85,   526,   nil,
   nil,   nil,   nil,   nil,    77,    67,    58,    61,    43,    51,
  2089,  2157,  1922,  1934,  1946,    27,     2,  2229,   nil,   330,
   286,   242,  2321,  2312,    59,  2301,    46,    90,   nil,   -43,
   nil,    47,   -13,     9,  2193,     5,  1958,   -34,    32,    -3,
    24,    42,  2205,    27,    48,    49,   nil,   nil,    42,     2,
    53,   nil,   nil,   nil,   nil,   nil,    55,    -2,    60,   nil,
   262,    49,   306,   438,    71,   nil,   nil,   nil,   nil,    89,
   nil,  1898,   129,   nil,   nil,     2,   nil,  1146,    95,   nil,
    97,    86,  1910,   nil,  2289,   nil,  2241,  1874,  1458,   112,
   nil,   nil,   nil,   nil,   129,   133,   125,  1414,  2265,  1322,
   nil,   131,  1278,   nil,  1234,   144,   148,   149,   nil,   136,
   nil,   nil,   nil,  2277,   nil,   169,   nil,   nil,   nil,   173,
  2217,   223,  2006,  2169,   166,   167,   168,   nil,   221,     1,
   180,   223,   834,   790,   746,   nil,   217,   702,   614,   570,
   269,   nil,   nil,   218,  1970,  1994,  1982,   nil,  2121,  2145,
  2181,   248,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -8,  -114,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -114,
   -10,  -114,  -114,  -114,  -110,  -114,  -114,    -2,    -3,    -4,
    -5,    -6,    -7,  -114,  -114,   -48,  -114,  -114,  -114,  -114,
  -114,   -86,   -57,  -114,   -59,   -60,   -61,  -114,  -114,  -114,
  -114,  -114,   -76,   -77,   -78,  -114,   -80,  -114,  -114,  -114,
  -114,   -48,   -88,  -114,  -109,  -113,  -108,   247,   -13,   -25,
  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,
  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,
   -64,  -114,  -114,  -114,  -114,  -114,  -114,  -114,  -114,   -92,
   -93,   -94,   -95,   -96,  -111,  -106,  -114,  -114,  -114,  -114,
   -49,   -87,  -114,  -114,  -114,  -114,   -48,  -114,   -56,   -65,
   -66,   -67,   -68,   -69,   -71,   -72,   -73,   -75,   -58,  -114,
   -98,  -114,  -105,  -114,  -103,  -114,  -114,  -114,   -48,  -114,
  -114,  -114,   -89,   -90,  -114,  -114,   -15,   -12,  -114,   -18,
  -114,   -50,   -51,   -52,   -53,   -54,  -114,  -114,  -114,   -99,
  -114,  -114,  -114,  -114,  -101,   -74,   -79,   -81,   -82,  -114,
   -84,  -114,  -114,  -112,  -107,  -114,   -23,   -30,  -114,   -20,
  -114,   -56,  -114,   -97,  -100,   -63,  -104,  -114,  -114,  -114,
   -85,   -91,    -9,   -14,  -114,  -114,  -114,   -30,   -31,  -114,
   -36,  -114,  -114,   -39,  -114,  -114,  -114,  -114,   -19,   -24,
   -55,   -62,   -70,  -102,   -83,  -114,   -17,   -28,   -29,  -114,
   -32,  -114,  -114,   -40,  -114,  -114,  -114,   -26,   -22,   -56,
  -114,   -45,  -114,  -114,  -114,   -16,  -114,  -114,  -114,  -114,
   -37,   -47,   -38,  -114,  -114,  -114,  -114,   -21,   -33,   -34,
   -35,  -114,   -44,   -41,   -42,   -43,   -46 ]

racc_goto_table = [
    31,    52,    54,    88,   140,   186,   125,   230,   127,    99,
     2,   225,   166,    17,    18,    19,    20,    21,    22,   119,
   122,    77,   183,    98,   232,   208,   165,    80,   151,    96,
     1,    53,   181,   133,   173,   154,    95,   131,    94,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,   101,
   102,   103,   104,   nil,   107,   nil,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   211,   nil,   nil,   nil,   123,
   184,   126,   nil,   129,   nil,   nil,   132,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   137,   221,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   231,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   242,   243,   244,
   245,   nil,   nil,   nil,   nil,   246,   nil,   nil,   nil,   161,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   174,   nil,
   176,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   203,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   nil,   210,   nil,   nil,
   212,   nil,   213,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   234,   235,   236,   nil,   nil,   238,   239,   240 ]

racc_goto_check = [
    21,    21,    12,    28,    14,    19,    27,    23,    27,    18,
     2,    15,    17,     2,     2,     2,     2,     2,     2,    25,
    25,    21,    13,    16,    24,    19,    11,    21,    26,    10,
     1,    29,    30,    31,    32,    33,    34,    28,    35,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,
    21,    21,    21,   nil,    21,   nil,    21,    21,    21,    21,
    21,    21,    21,    21,    21,    17,   nil,   nil,   nil,    21,
    14,    21,   nil,    21,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,    17,    17,
    17,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,    21,   nil,
    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,    21,   nil,   nil,
    21,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    21,    21,    21,   nil,   nil,    21,    21,    21 ]

racc_goto_pointer = [
   nil,    30,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -29,  -110,   -12,  -143,   -95,  -207,   -36,  -126,   -50,  -162,
   nil,   -12,   nil,  -213,  -197,   -59,   -94,   -76,   -50,    17,
  -130,   -56,  -114,   -89,   -20,   -17 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   187,   124,   190,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    89,   nil,   120,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 74, :_reduce_1,
  2, 75, :_reduce_2,
  2, 75, :_reduce_3,
  2, 75, :_reduce_4,
  2, 75, :_reduce_5,
  2, 75, :_reduce_6,
  2, 75, :_reduce_7,
  0, 75, :_reduce_8,
  7, 76, :_reduce_9,
  1, 82, :_reduce_10,
  0, 82, :_reduce_11,
  2, 83, :_reduce_12,
  0, 83, :_reduce_13,
  2, 84, :_reduce_14,
  0, 84, :_reduce_15,
  4, 86, :_reduce_16,
  2, 86, :_reduce_17,
  1, 87, :_reduce_18,
  3, 87, :_reduce_19,
  2, 87, :_reduce_20,
  2, 88, :_reduce_21,
  0, 88, :_reduce_22,
  6, 77, :_reduce_23,
  4, 89, :_reduce_24,
  0, 89, :_reduce_25,
  5, 91, :_reduce_26,
  0, 91, :_reduce_27,
  3, 90, :_reduce_28,
  2, 92, :_reduce_29,
  0, 92, :_reduce_30,
  1, 93, :_reduce_31,
  2, 93, :_reduce_32,
  5, 93, :_reduce_33,
  5, 93, :_reduce_34,
  5, 93, :_reduce_35,
  1, 93, :_reduce_36,
  4, 93, :_reduce_37,
  4, 93, :_reduce_38,
  1, 93, :_reduce_39,
  2, 93, :_reduce_40,
  5, 95, :_reduce_41,
  5, 95, :_reduce_42,
  5, 95, :_reduce_43,
  2, 97, :_reduce_44,
  0, 97, :_reduce_45,
  3, 96, :_reduce_46,
  1, 96, :_reduce_47,
  1, 94, :_reduce_48,
  3, 94, :_reduce_49,
  4, 94, :_reduce_50,
  4, 94, :_reduce_51,
  4, 94, :_reduce_52,
  4, 94, :_reduce_53,
  4, 94, :_reduce_54,
  6, 94, :_reduce_55,
  3, 94, :_reduce_56,
  1, 94, :_reduce_57,
  3, 94, :_reduce_58,
  1, 94, :_reduce_59,
  1, 94, :_reduce_60,
  1, 94, :_reduce_61,
  6, 94, :_reduce_62,
  5, 94, :_reduce_63,
  2, 94, :_reduce_64,
  3, 94, :_reduce_65,
  3, 94, :_reduce_66,
  3, 94, :_reduce_67,
  3, 94, :_reduce_68,
  3, 94, :_reduce_69,
  6, 94, :_reduce_70,
  3, 94, :_reduce_71,
  3, 94, :_reduce_72,
  3, 94, :_reduce_73,
  4, 94, :_reduce_74,
  3, 94, :_reduce_75,
  1, 94, :_reduce_76,
  1, 94, :_reduce_77,
  1, 94, :_reduce_78,
  4, 94, :_reduce_79,
  1, 94, :_reduce_80,
  4, 94, :_reduce_81,
  4, 94, :_reduce_82,
  6, 94, :_reduce_83,
  4, 94, :_reduce_84,
  5, 94, :_reduce_85,
  2, 78, :_reduce_86,
  4, 78, :_reduce_87,
  2, 81, :_reduce_88,
  4, 80, :_reduce_89,
  2, 101, :_reduce_90,
  3, 104, :_reduce_91,
  0, 104, :_reduce_92,
  1, 103, :_reduce_93,
  1, 103, :_reduce_94,
  1, 103, :_reduce_95,
  1, 103, :_reduce_96,
  3, 98, :_reduce_97,
  1, 98, :_reduce_98,
  2, 105, :_reduce_99,
  3, 105, :_reduce_100,
  2, 100, :_reduce_101,
  3, 106, :_reduce_102,
  0, 106, :_reduce_103,
  2, 99, :_reduce_104,
  0, 99, :_reduce_105,
  3, 79, :_reduce_106,
  3, 107, :_reduce_107,
  0, 107, :_reduce_108,
  1, 102, :_reduce_109,
  0, 102, :_reduce_110,
  2, 85, :_reduce_111,
  3, 108, :_reduce_112,
  0, 108, :_reduce_113 ]

racc_reduce_n = 114

racc_shift_n = 247

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  :xor => 12,
  "<=" => 13,
  "=>" => 14,
  "<=>" => 15,
  "=" => 16,
  :authenticable => 17,
  :usergroup => 18,
  :class => 19,
  :extends => 20,
  :inverseof => 21,
  :action => 22,
  :foreach => 23,
  :flatforeach => 24,
  :unflatforeach => 25,
  :either => 26,
  :create => 27,
  :derefcreate => 28,
  :delete => 29,
  :if => 30,
  :else => 31,
  :subset => 32,
  :oneof => 33,
  :tryoneof => 34,
  :allof => 35,
  :invariant => 36,
  :forall => 37,
  :exists => 38,
  :isempty => 39,
  :empty => 40,
  :true => 41,
  :false => 42,
  :not => 43,
  :equal => 44,
  :implies => 45,
  :unknown => 46,
  :currentuser => 47,
  :inusergroup => 48,
  :allofusergroup => 49,
  :permit => 50,
  :permitted => 51,
  :permittedbytype => 52,
  :edit => 53,
  :read => 54,
  :IDENT => 55,
  :NUMBER => 56,
  :STRING => 57,
  :BASIC_TYPE => 58,
  :JS => 59,
  :roole => 60,
  :raize => 61,
  :assert => 62,
  :pickoneexpr => 63,
  "{" => 64,
  "}" => 65,
  ".." => 66,
  "(" => 67,
  ")" => 68,
  "," => 69,
  "+=" => 70,
  "-=" => 71,
  ":" => 72 }

racc_nt_base = 73

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "xor",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "\"=\"",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "either",
  "create",
  "derefcreate",
  "delete",
  "if",
  "else",
  "subset",
  "oneof",
  "tryoneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "isempty",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "raize",
  "assert",
  "pickoneexpr",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "action_args",
  "block",
  "additional_args",
  "statements",
  "statement",
  "expr",
  "foreach_stmt",
  "eitherblocks",
  "optelse",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "comma_separated_exprs",
  "perm_op_list",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "more_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 25)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 27)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 29)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 31)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 41)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 42)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 44)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 45)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 47)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 50)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_17(val, _values, result)
     return ASTField.new :lineno => val[0][1], :type_name => val[0][0], :name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_19(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 58)
  def _reduce_20(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 60)
  def _reduce_21(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 61)
  def _reduce_22(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_23(val, _values, result)
     return ASTAction.new(
                 :lineno => val[0], :name => val[1], :arg_cardinalities => val[3][0],
                 :arg_types => val[3][1], :arg_names => val[3][2], :block => val[5]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 69)
  def _reduce_24(val, _values, result)
                     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0]
               
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_25(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 74)
  def _reduce_26(val, _values, result)
                         val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0]
                   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_27(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_28(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_29(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_30(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_31(val, _values, result)
     return ASTExprStmt.new :lineno => val[0].lineno, :expr => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 84)
  def _reduce_32(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_33(val, _values, result)
                   return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 89)
  def _reduce_34(val, _values, result)
                   return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 92)
  def _reduce_35(val, _values, result)
                   return ASTMemberSet.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2], :expr => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 94)
  def _reduce_36(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 95)
  def _reduce_37(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 96)
  def _reduce_38(val, _values, result)
     return ASTIf.new(
               :lineno => val[0], :condition => val[1], :then_block => val[2], :else_block => val[3]
             )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 99)
  def _reduce_39(val, _values, result)
     return ASTRaise.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 100)
  def _reduce_40(val, _values, result)
     return ASTAssertFormula.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 103)
  def _reduce_41(val, _values, result)
                      return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 106)
  def _reduce_42(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(true)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 111)
  def _reduce_43(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(false)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 116)
  def _reduce_44(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 117)
  def _reduce_45(val, _values, result)
     return ASTBlock.new :statements => [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_46(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_47(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_48(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_49(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 124)
  def _reduce_50(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_51(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 126)
  def _reduce_52(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_53(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 128)
  def _reduce_54(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_55(val, _values, result)
     return ASTDereferenceCreate.new :lineno => val[0], :objset => val[2], :rel_name => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_56(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_57(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 133)
  def _reduce_58(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 134)
  def _reduce_59(val, _values, result)
     return ASTJsExpr.new :lineno => val[0][:lineno], :js    => val[0][:js] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 135)
  def _reduce_60(val, _values, result)
     return ASTNumber.new :lineno => val[0][:lineno], :value => val[0][:value] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 136)
  def _reduce_61(val, _values, result)
     return ASTString.new :lineno => val[0][:lineno], :value => val[0][:value].gsub(%q{\'}, %q{'}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_62(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 140)
  def _reduce_63(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_64(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 143)
  def _reduce_65(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 144)
  def _reduce_66(val, _values, result)
     return ASTOr.new  :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 145)
  def _reduce_67(val, _values, result)
     return ASTXor.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 147)
  def _reduce_68(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 149)
  def _reduce_69(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 151)
  def _reduce_70(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 153)
  def _reduce_71(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 155)
  def _reduce_72(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 156)
  def _reduce_73(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 159)
  def _reduce_74(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 160)
  def _reduce_75(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 161)
  def _reduce_76(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 162)
  def _reduce_77(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 163)
  def _reduce_78(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 164)
  def _reduce_79(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 165)
  def _reduce_80(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 166)
  def _reduce_81(val, _values, result)
     return ASTPickOneExpr.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 168)
  def _reduce_82(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 170)
  def _reduce_83(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 171)
  def _reduce_84(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 172)
  def _reduce_85(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 175)
  def _reduce_86(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 178)
  def _reduce_87(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 181)
  def _reduce_88(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 184)
  def _reduce_89(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 186)
  def _reduce_90(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 187)
  def _reduce_91(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 188)
  def _reduce_92(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 190)
  def _reduce_93(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 191)
  def _reduce_94(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 192)
  def _reduce_95(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 193)
  def _reduce_96(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 196)
  def _reduce_97(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 197)
  def _reduce_98(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 200)
  def _reduce_99(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 202)
  def _reduce_100(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 204)
  def _reduce_101(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 206)
  def _reduce_102(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 207)
  def _reduce_103(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_104(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 210)
  def _reduce_105(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 213)
  def _reduce_106(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 215)
  def _reduce_107(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 216)
  def _reduce_108(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 218)
  def _reduce_109(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 219)
  def _reduce_110(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 220)
  def _reduce_111(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 221)
  def _reduce_112(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 222)
  def _reduce_113(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
