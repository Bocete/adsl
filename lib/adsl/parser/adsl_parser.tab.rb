#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
  module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 145)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    38,    39,    44,    46,    45,    42,    43,    44,    46,    45,
    42,    43,    44,    46,    45,    42,    43,    44,    46,    45,
    42,    43,    32,    40,    44,    46,    45,    42,    43,   119,
   144,   145,    60,   142,    62,    63,    64,   108,   112,   101,
   171,    67,    37,   111,    31,   107,   106,    84,   140,   106,
   119,   110,   154,    16,   105,    17,   120,    21,    22,   152,
    19,    28,    29,    23,    27,    25,    26,    49,    16,   113,
    17,    37,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,   -20,    17,    56,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    49,    16,    54,
    17,   125,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,   126,    17,    53,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    49,    16,    82,
    17,    52,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,   130,    17,    48,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    49,    16,    47,
    17,    68,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,    41,    17,   135,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    15,    16,    69,
    17,    44,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,    36,    17,   146,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    49,    16,   147,
    17,   148,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,    44,    17,    37,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    49,    16,   151,
    17,    35,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    16,   101,    17,    37,    21,    22,    24,
    19,    28,    29,    23,    27,    25,    26,    49,    16,    37,
    17,    34,    21,    22,    24,    19,    28,    29,    23,    27,
    25,    26,    49,    44,    46,    45,    42,    43,    37,    24,
   144,   145,    60,   142,    62,    63,    64,    44,    46,    45,
    60,    67,    62,    63,    64,    44,    46,    45,   140,    67,
    60,   157,    62,    63,    64,   158,   121,    82,    60,    67,
    62,    63,    64,    92,    93,   160,    61,    67,    60,   -41,
    62,    63,    64,    33,    61,   162,    60,    67,    62,    63,
    64,   169,   170,   163,    61,    67,    60,   119,    62,    63,
    64,   165,    61,   166,    60,    67,    62,    63,    64,    92,
    93,   103,    61,    67,    60,   100,    62,    63,    64,   114,
    61,    30,    60,    67,    62,    63,    64,   167,   168,   101,
    61,    67,    60,   173,    62,    63,    64,   174,    61,   175,
    60,    67,    62,    63,    64,    16,   176,    17,    61,    67,
    14,    16,    71,    17,    13,    16,    61,    17,    71,    49,
   101,    16,    71,    17,    16,    49,    17,    99,    71,    49,
    16,    71,    17,    98,    16,    49,    17,    71,    49,     6,
     6,    71,     7,     7,    49,   119,     6,    97,    49,     7,
     8,     8,     6,   150,    37,     7,   101,     8,    44,    46,
    45,    42,    43,     8,    44,    46,    45,    42,    43,    88,
    95,   137,    92,    93,    92,    93,    44,    46,    45,    42,
    43,    44,    46,    45,    42,    43,   104,    94,   181,    37,
   179,   180,   149,   102,     9,   101,   101,   115,   116,    82,
   189,   101,   101,   101,   119 ]

racc_action_check = [
    18,    18,    86,    86,    86,    86,    86,    85,    85,    85,
    85,    85,    51,    51,    51,    51,    51,   133,   133,   133,
   133,   133,    13,    18,   127,   127,   127,   127,   127,   182,
   119,   119,   119,   119,   119,   119,   119,    82,    86,   182,
   157,   119,    18,    85,    13,    82,    83,    51,   119,    80,
    95,    83,   133,    53,    80,    53,    96,    53,    53,   127,
    53,    53,    53,    53,    53,    53,    53,    53,    43,    87,
    43,    87,    43,    43,    53,    43,    43,    43,    43,    43,
    43,    43,    43,   168,    33,   168,    32,   168,   168,    43,
   168,   168,   168,   168,   168,   168,   168,   168,    42,    27,
    42,   100,    42,    42,   168,    42,    42,    42,    42,    42,
    42,    42,    42,    44,   101,    44,    26,    44,    44,    42,
    44,    44,    44,    44,    44,    44,    44,    44,    45,   106,
    45,    25,    45,    45,    44,    45,    45,    45,    45,    45,
    45,    45,    45,    52,   109,    52,    22,    52,    52,    45,
    52,    52,    52,    52,    52,    52,    52,    52,    46,    21,
    46,    36,    46,    46,    52,    46,    46,    46,    46,    46,
    46,    46,    46,     8,    19,     8,   114,     8,     8,    46,
     8,     8,     8,     8,     8,     8,     8,     8,   105,    37,
   105,    79,   105,   105,     8,   105,   105,   105,   105,   105,
   105,   105,   105,   111,    17,   111,   120,   111,   111,   105,
   111,   111,   111,   111,   111,   111,   111,   111,   110,   121,
   110,   122,   110,   110,   111,   110,   110,   110,   110,   110,
   110,   110,   110,    23,    78,    23,    73,    23,    23,   110,
    23,    23,    23,    23,    23,    23,    23,    23,    24,   125,
    24,    16,    24,    24,    23,    24,    24,    24,    24,    24,
    24,    24,    24,    34,   129,    34,    72,    34,    34,    24,
    34,    34,    34,    34,    34,    34,    34,    34,   112,    70,
   112,    15,   112,   112,    34,   112,   112,   112,   112,   112,
   112,   112,   112,   177,   177,   177,   177,   177,   134,   112,
   139,   139,   139,   139,   139,   139,   139,    76,    76,    76,
    97,   139,    97,    97,    97,    75,    75,    75,   139,    97,
    98,   135,    98,    98,    98,   138,    97,    48,    35,    98,
    35,    35,    35,   115,   115,   140,    98,    35,    99,   141,
    99,    99,    99,    14,    35,   143,   108,    99,   108,   108,
   108,   155,   155,   144,    99,   108,   181,   145,   181,   181,
   181,   146,   108,   148,   180,   181,   180,   180,   180,    58,
    58,    68,   181,   180,   179,    64,   179,   179,   179,    90,
   180,     9,   174,   179,   174,   174,   174,   153,   153,   161,
   179,   174,   160,   162,   160,   160,   160,   163,   174,   164,
   142,   160,   142,   142,   142,   170,   166,   170,   160,   142,
     7,    41,   170,    41,     6,    40,   142,    40,    41,   170,
   172,    54,    40,    54,    39,    41,    39,    63,    54,    40,
    38,    39,    38,    62,   113,    54,   113,    38,    39,     0,
     5,   113,     0,     5,    38,   175,     3,    60,   113,     3,
     0,     5,     4,   124,   178,     4,   124,     3,    59,    59,
    59,    59,    59,     4,    20,    20,    20,    20,    20,    55,
    57,   117,    55,    55,   117,   117,   132,   132,   132,   132,
   132,   131,   131,   131,   131,   131,    74,    56,   173,    74,
   173,   173,   123,    66,     1,   123,    66,    91,    91,    47,
   183,   185,   186,   187,   189 ]

racc_action_pointer = [
   428,   494,   nil,   435,   441,   429,   381,   377,   154,   381,
   nil,   nil,   nil,    10,   303,   234,   211,   164,    -2,   134,
   458,   119,   106,   214,   229,    91,    76,    59,   nil,   nil,
   nil,   nil,    53,    43,   244,   311,   128,   156,   411,   405,
   396,   392,    79,    49,    94,   109,   139,   466,   294,   nil,
   nil,     6,   124,    34,   402,   434,   453,   429,   331,   452,
   407,   nil,   393,   387,   335,   nil,   452,   nil,   330,   nil,
   235,   nil,   222,   192,   445,   309,   301,   nil,   228,   185,
     7,   nil,    12,     4,   nil,     1,    -4,    27,   nil,   nil,
   346,   461,   nil,   nil,   nil,    16,    23,   293,   303,   321,
    68,    81,   nil,   nil,   nil,   169,    96,   nil,   329,   103,
   199,   184,   259,   415,   143,   295,   nil,   436,   nil,    15,
   173,   178,   177,   451,   412,   208,   nil,    18,   nil,   220,
   nil,   475,   470,    11,   254,   308,   nil,   nil,   290,   285,
   292,   295,   383,   301,   320,   323,   319,   nil,   330,   nil,
   nil,   nil,   nil,   346,   nil,   310,   nil,     7,   nil,   nil,
   375,   345,   360,   350,   389,   nil,   365,   nil,    64,   nil,
   386,   nil,   376,   445,   365,   411,   nil,   287,   410,   357,
   347,   339,    -5,   490,   nil,   457,   458,   459,   nil,   470,
   nil ]

racc_action_default = [
    -5,   -80,    -1,    -5,    -5,    -5,   -80,   -80,   -80,   -80,
    -2,    -3,    -4,   -80,   -80,   -45,   -80,   -80,   -80,   -49,
   -50,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -67,   -68,
   191,    -9,   -80,   -22,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -45,
   -54,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -51,
   -80,   -37,   -80,   -80,   -80,   -41,   -80,   -44,   -80,   -48,
   -63,   -49,   -64,   -66,   -80,   -55,   -56,   -57,   -58,   -59,
   -80,   -71,   -80,   -75,   -60,   -80,   -80,   -80,    -6,    -8,
   -80,   -11,   -14,   -15,    -9,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -46,   -47,   -69,   -80,   -80,   -72,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -13,   -80,   -18,   -25,
   -80,   -37,   -80,   -80,   -80,   -80,   -43,   -80,   -70,   -73,
   -53,   -74,   -77,   -80,   -79,   -17,   -12,    -7,   -80,   -25,
   -37,   -27,   -80,   -80,   -80,   -80,   -19,   -36,   -80,   -38,
   -39,   -40,   -52,   -80,   -62,   -80,   -10,   -80,   -23,   -24,
   -80,   -28,   -80,   -80,   -80,   -21,   -43,   -61,   -80,   -65,
   -80,   -16,   -26,   -43,   -80,   -80,   -42,   -76,   -78,   -80,
   -80,   -80,   -80,   -33,   -35,   -29,   -30,   -31,   -32,   -80,
   -34 ]

racc_goto_table = [
    20,    66,    70,    72,    73,    74,   118,    55,   138,   141,
    80,    83,     1,    58,    57,    50,    51,     2,    87,   183,
    10,    11,    12,   136,   156,    96,    59,   109,   159,   141,
   153,   155,   128,   nil,    75,    76,    77,    78,    79,   nil,
   nil,   nil,   nil,   nil,    85,    86,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   164,   nil,   nil,   nil,
   nil,   nil,   nil,   122,   123,   124,   nil,   nil,   nil,   nil,
   117,   nil,   nil,   nil,   129,   nil,   nil,   134,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,   nil,   nil,
   nil,   nil,   nil,   188,   nil,   nil,   nil,   127,   nil,   nil,
   190,   nil,   131,   132,   133,   nil,   nil,   nil,   161,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,
   182,   nil,   nil,   nil,   nil,   185,   186,   187,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   177 ]

racc_goto_check = [
    20,    16,    19,    19,    19,    19,    12,     6,    14,    17,
    21,    21,     1,    13,    11,    20,    20,     2,    19,    18,
     2,     2,     2,    10,     9,     8,    20,    22,    14,    17,
    23,    24,    25,   nil,    20,    20,    20,    20,    20,   nil,
   nil,   nil,   nil,   nil,    20,    20,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,
   nil,   nil,   nil,    16,    16,    16,   nil,   nil,   nil,   nil,
     6,   nil,   nil,   nil,    16,   nil,   nil,    19,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,
   nil,   nil,   nil,    12,   nil,   nil,   nil,    20,   nil,   nil,
    12,   nil,    20,    20,    20,   nil,   nil,   nil,    16,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,   nil,   nil,    16,    16,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    20 ]

racc_goto_pointer = [
   nil,    12,    17,   nil,   nil,   nil,   -24,   nil,   -33,  -111,
   -92,   -19,   -89,   -20,  -111,   nil,   -34,  -110,  -156,   -36,
    -8,   -37,   -56,  -102,  -103,   -74 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,   nil,    89,    90,   nil,
    91,   nil,   nil,   nil,   nil,   139,   143,    65,   nil,    18,
   nil,   nil,   nil,   nil,   nil,    81 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 49, :_reduce_1,
  2, 50, :_reduce_2,
  2, 50, :_reduce_3,
  2, 50, :_reduce_4,
  0, 50, :_reduce_5,
  5, 51, :_reduce_6,
  7, 51, :_reduce_7,
  2, 54, :_reduce_8,
  0, 54, :_reduce_9,
  4, 55, :_reduce_10,
  1, 56, :_reduce_11,
  3, 56, :_reduce_12,
  2, 56, :_reduce_13,
  1, 58, :_reduce_14,
  1, 58, :_reduce_15,
  2, 57, :_reduce_16,
  0, 57, :_reduce_17,
  6, 52, :_reduce_18,
  4, 59, :_reduce_19,
  0, 59, :_reduce_20,
  5, 61, :_reduce_21,
  0, 61, :_reduce_22,
  3, 60, :_reduce_23,
  2, 62, :_reduce_24,
  0, 62, :_reduce_25,
  3, 63, :_reduce_26,
  1, 63, :_reduce_27,
  2, 63, :_reduce_28,
  5, 63, :_reduce_29,
  5, 63, :_reduce_30,
  5, 63, :_reduce_31,
  5, 63, :_reduce_32,
  4, 63, :_reduce_33,
  3, 66, :_reduce_34,
  1, 66, :_reduce_35,
  4, 65, :_reduce_36,
  1, 64, :_reduce_37,
  4, 64, :_reduce_38,
  4, 64, :_reduce_39,
  4, 64, :_reduce_40,
  1, 64, :_reduce_41,
  6, 64, :_reduce_42,
  3, 64, :_reduce_43,
  1, 64, :_reduce_44,
  1, 67, :_reduce_45,
  4, 67, :_reduce_46,
  4, 67, :_reduce_47,
  3, 67, :_reduce_48,
  1, 67, :_reduce_49,
  2, 53, :_reduce_50,
  4, 53, :_reduce_51,
  6, 68, :_reduce_52,
  5, 68, :_reduce_53,
  2, 68, :_reduce_54,
  3, 68, :_reduce_55,
  3, 68, :_reduce_56,
  3, 68, :_reduce_57,
  3, 68, :_reduce_58,
  3, 68, :_reduce_59,
  3, 68, :_reduce_60,
  7, 68, :_reduce_61,
  6, 68, :_reduce_62,
  3, 68, :_reduce_63,
  3, 68, :_reduce_64,
  7, 68, :_reduce_65,
  3, 68, :_reduce_66,
  1, 68, :_reduce_67,
  1, 68, :_reduce_68,
  4, 68, :_reduce_69,
  3, 69, :_reduce_70,
  1, 69, :_reduce_71,
  2, 73, :_reduce_72,
  3, 73, :_reduce_73,
  2, 70, :_reduce_74,
  0, 70, :_reduce_75,
  3, 71, :_reduce_76,
  0, 71, :_reduce_77,
  3, 72, :_reduce_78,
  0, 72, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 191

racc_token_table = {
  false => 0,
  :error => 1,
  "==" => 2,
  "!=" => 3,
  :noassoc => 4,
  :NOT => 5,
  "<=>" => 6,
  "<=" => 7,
  "=>" => 8,
  :and => 9,
  :or => 10,
  :class => 11,
  :extends => 12,
  :inverseof => 13,
  :action => 14,
  :foreach => 15,
  :either => 16,
  :create => 17,
  :delete => 18,
  :subset => 19,
  :oneof => 20,
  :allof => 21,
  :invariant => 22,
  :forall => 23,
  :exists => 24,
  :in => 25,
  :empty => 26,
  :true => 27,
  :false => 28,
  :not => 29,
  :equal => 30,
  :equiv => 31,
  :implies => 32,
  :IDENT => 33,
  "{" => 34,
  "}" => 35,
  ".." => 36,
  "+" => 37,
  "0" => 38,
  "1" => 39,
  "(" => 40,
  ")" => 41,
  "," => 42,
  "=" => 43,
  "." => 44,
  "+=" => 45,
  "-=" => 46,
  ":" => 47 }

racc_nt_base = 48

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "\"<=>\"",
  "\"<=\"",
  "\"=>\"",
  "and",
  "or",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "either",
  "create",
  "delete",
  "subset",
  "oneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "in",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "equiv",
  "implies",
  "IDENT",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"+\"",
  "\"0\"",
  "\"1\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"=\"",
  "\".\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "rel_decls",
  "rel_decl",
  "cardinality",
  "inverse_suffix",
  "card_number",
  "action_args",
  "block",
  "additional_args",
  "statements",
  "statement",
  "objset",
  "create_objset",
  "eitherblocks",
  "invariant_objset",
  "formula",
  "quantifier_parameters_with_commas",
  "optional_formula",
  "additional_formulae",
  "additional_invariant_objsets",
  "quantifier_parameter" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 11)
  def _reduce_1(val, _values, result)
     return ASTSpec.new :lineno => lineno, :classes => val[0][0], :actions => val[0][1], :invariants => val[0][2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 13)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 14)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 15)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_5(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 19)
  def _reduce_6(val, _values, result)
     return ASTClass.new :lineno => val[0], :name => val[1], :relations => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 21)
  def _reduce_7(val, _values, result)
     return ASTClass.new :lineno => val[0], :name => val[1], :parent_name => val[3], :relations => val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 23)
  def _reduce_8(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 24)
  def _reduce_9(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_10(val, _values, result)
     return ASTRelation.new :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1], :name => val[2], :inverse_of_name => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_11(val, _values, result)
     return [val[0][0], val[0][0], val[0][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 29)
  def _reduce_12(val, _values, result)
     return [val[0][0], val[2][0], val[0][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_13(val, _values, result)
     return [val[0][0], 1.0/0.0, val[0][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 32)
  def _reduce_14(val, _values, result)
     return [0, lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_15(val, _values, result)
     return [1, lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 35)
  def _reduce_16(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 36)
  def _reduce_17(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 38)
  def _reduce_18(val, _values, result)
     return ASTAction.new(:lineno => val[0], :name => val[1], :arg_cardinalities => val[3][0], :arg_types => val[3][1], :arg_names => val[3][2], :block => val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 40)
  def _reduce_19(val, _values, result)
     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 41)
  def _reduce_20(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 43)
  def _reduce_21(val, _values, result)
     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 44)
  def _reduce_22(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 46)
  def _reduce_23(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_24(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 49)
  def _reduce_25(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 51)
  def _reduce_26(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 52)
  def _reduce_27(val, _values, result)
     return ASTObjsetStmt.new :lineno => val[0].lineno, :objset => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 53)
  def _reduce_28(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_29(val, _values, result)
     return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 55)
  def _reduce_30(val, _values, result)
     return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_31(val, _values, result)
     return ASTSetTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_32(val, _values, result)
     return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 58)
  def _reduce_33(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 60)
  def _reduce_34(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 61)
  def _reduce_35(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_36(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 65)
  def _reduce_37(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 66)
  def _reduce_38(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 67)
  def _reduce_39(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 68)
  def _reduce_40(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 69)
  def _reduce_41(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_42(val, _values, result)
                return ASTDereferenceBuild.new :lineno => val[0].lineno, :objset => val[2], :rel_name => val[4]
          
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 73)
  def _reduce_43(val, _values, result)
     return ASTDereference.new :lineno => val[0].lineno, :objset => val[0], :rel_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 74)
  def _reduce_44(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_45(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 77)
  def _reduce_46(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_47(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 79)
  def _reduce_48(val, _values, result)
     return ASTDereference.new :lineno => val[0].lineno, :objset => val[0], :rel_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_49(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 82)
  def _reduce_50(val, _values, result)
     return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_51(val, _values, result)
     return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_52(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 88)
  def _reduce_53(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 90)
  def _reduce_54(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 92)
  def _reduce_55(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 94)
  def _reduce_56(val, _values, result)
     return ASTOr.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 96)
  def _reduce_57(val, _values, result)
     return ASTEquiv.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 98)
  def _reduce_58(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 100)
  def _reduce_59(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 101)
  def _reduce_60(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 103)
  def _reduce_61(val, _values, result)
     return ASTEquiv.new :lineno => val[0], :subformulae => [val[2], val[4]] + val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 105)
  def _reduce_62(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 107)
  def _reduce_63(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :objsets => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 109)
  def _reduce_64(val, _values, result)
     return ASTNot.new(:lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :objsets => [val[0], val[2]])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 111)
  def _reduce_65(val, _values, result)
     return ASTEqual.new :lineno => val[0], :objsets => [val[2], val[4]] + val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 112)
  def _reduce_66(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 113)
  def _reduce_67(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 114)
  def _reduce_68(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 115)
  def _reduce_69(val, _values, result)
     return ASTEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_70(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_71(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 121)
  def _reduce_72(val, _values, result)
     return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_73(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 124)
  def _reduce_74(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_75(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_76(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 128)
  def _reduce_77(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_78(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_79(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
