#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 224)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'45,228,69,78,75,77,62,62,70,71,72,74,73,76,212,67,62,171,209,168,208',
'161,169,61,95,30,96,205,69,78,26,27,28,29,159,37,38,42,46,32,43,44,39',
'41,40,45,47,49,50,152,51,94,93,56,52,35,36,176,34,177,63,173,48,180',
'169,227,210,211,170,33,30,174,166,69,78,26,27,28,29,150,37,38,42,46',
'32,43,44,39,41,40,45,47,49,50,179,51,69,78,149,52,35,36,148,34,182,144',
'160,48,184,185,69,78,75,77,33,30,70,71,72,186,26,27,28,29,188,37,38',
'42,46,32,43,44,39,41,40,45,47,49,50,134,51,189,134,121,52,35,36,191',
'34,192,193,194,48,118,134,69,78,75,77,33,30,70,71,72,100,26,27,28,29',
'198,37,38,42,46,32,43,44,39,41,40,45,47,49,50,62,51,90,201,202,52,35',
'36,89,34,88,165,87,48,69,78,75,77,61,216,33,30,69,78,75,77,26,27,28',
'29,86,37,38,42,46,32,43,44,39,41,40,45,47,49,50,85,51,84,220,83,52,35',
'36,81,34,80,68,69,48,69,78,75,77,224,225,33,30,226,66,65,64,26,27,28',
'29,61,37,38,42,46,32,43,44,39,41,40,232,47,49,50,45,51,61,59,58,52,35',
'36,57,34,56,237,238,48,24,23,16,61,241,242,33,110,111,112,106,30,,104',
'107,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52',
'35,36,,34,,108,109,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43',
'44,39,41,40,,47,49,50,,51,45,,,52,35,36,,34,,,,48,,69,78,75,77,,33,70',
'71,72,74,73,76,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,,47',
'49,50,95,51,96,,45,25,35,36,,34,,,,48,,69,78,75,77,,33,70,71,72,74,73',
'76,94,93,30,,,,181,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47',
'49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,203,37,38',
'42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,',
'33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51',
',,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43',
'44,39,41,40,45,47,49,50,,51,,,,142,35,36,,34,,,,48,,,,,,,33,30,,,,,26',
'27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36',
',34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40',
'45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37',
'38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,',
',,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50',
',51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32',
'43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,',
',26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35',
'36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41',
'40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29',
',37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,119,35,36,,34,,,,48',
',,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49',
'50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46',
'32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30',
',,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52',
'35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39',
'41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28',
'29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,',
',48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47',
'49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42',
'46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33',
'30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,',
',52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44',
'39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27',
'28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34',
',,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45',
'47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38',
'42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,',
'33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51',
',,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43',
'44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26',
'27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36',
',34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40',
'45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37',
'38,42,46,32,43,44,39,41,40,,47,49,50,45,51,,,,52,35,36,,34,,,,48,,,',
',,,33,110,111,112,106,30,,104,107,,26,27,28,29,,37,38,42,46,32,43,44',
'39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,108,109,48,,,,,,,33,30,,,',
',26,27,28,29,,37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35',
'36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41',
'40,45,47,49,50,,51,,,,52,35,36,,34,,,,48,,,,,,,33,30,,,,,26,27,28,29',
',37,38,42,46,32,43,44,39,41,40,45,47,49,50,,51,,,,52,35,36,,34,,,,48',
',,,,,,33,30,,,,,26,27,28,29,,37,38,42,46,32,43,44,39,41,40,,47,49,50',
',51,,,,52,35,36,,34,,,,48,,69,78,75,77,,33,70,71,72,74,73,76,69,78,75',
'77,,,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76,69,78,75,77,',
',70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76,,,,69,78,75,77,,221',
'70,71,72,74,73,76,69,78,75,77,,222,70,71,72,74,73,76,69,78,75,77,,178',
'70,71,72,74,73,76,69,78,75,77,,164,70,71,72,74,73,76,69,78,75,77,,163',
'70,71,72,74,73,76,,,,69,78,75,77,,131,70,71,72,74,73,76,,10,15,-11,',
'162,11,10,15,-11,61,,11,10,15,-11,,,11,,12,,61,,,,12,,,,,,12,,61,14',
',10,15,-11,,14,11,,,13,95,14,96,61,,13,,10,15,-11,12,13,11,10,15,-11',
',,11,10,15,-11,,,11,14,12,94,93,,,,12,,,13,,,12,,,14,,,,,,14,,,,13,',
'14,,,,13,69,78,75,77,,13,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74',
'73,76,69,78,75,77,,,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76',
'154,78,75,77,,,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76,69',
'78,75,77,,,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76,69,78,75',
'77,,,70,71,72,74,73,76,167,78,75,77,,,70,71,72,74,73,76,69,78,75,77',
',,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76,69,78,75,77,,,70',
'71,72,74,73,76,69,78,75,77,,,70,71,72,74,73,76,69,78,75,77,,,70,71,72',
'74,73,76,69,78,75,77,,,70,71,72,74,73,76,69,78,75,77,,,70,71,72,74,73' ]
        racc_action_table = arr = ::Array.new(2421, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'87,209,136,136,136,136,25,142,136,136,136,136,136,136,188,29,119,134',
'187,132,187,112,132,106,90,87,90,187,127,127,87,87,87,87,110,87,87,87',
'87,87,87,87,87,87,87,71,87,87,87,101,87,90,90,100,87,87,87,138,87,139',
'25,135,87,142,135,209,188,188,134,87,71,136,119,82,82,71,71,71,71,99',
'71,71,71,71,71,71,71,71,71,71,70,71,71,71,141,71,129,129,98,71,71,71',
'97,71,144,89,111,71,147,148,125,125,125,125,71,70,125,125,125,149,70',
'70,70,70,154,70,70,70,70,70,70,70,70,70,70,109,70,70,70,81,70,156,80',
'69,70,70,70,159,70,160,161,167,70,67,169,126,126,126,126,70,109,126',
'126,126,59,109,109,109,109,172,109,109,109,109,109,109,109,109,109,109',
'107,109,109,109,52,109,51,175,181,109,109,109,50,109,49,118,48,109,123',
'123,123,123,189,190,109,107,122,122,122,122,107,107,107,107,46,107,107',
'107,107,107,107,107,107,107,107,104,107,107,107,42,107,41,194,40,107',
'107,107,38,107,37,30,130,107,124,124,124,124,202,207,107,104,208,28',
'27,26,104,104,104,104,24,104,104,104,104,104,104,104,104,104,104,213',
'104,104,104,102,104,216,23,16,104,104,104,15,104,14,225,227,104,11,9',
'1,232,237,241,104,102,102,102,102,102,,102,102,,102,102,102,102,,102',
'102,102,102,102,102,102,102,102,102,74,102,102,102,,102,,,,102,102,102',
',102,,102,102,102,,,,,,,102,74,,,,,74,74,74,74,,74,74,74,74,74,74,74',
'74,74,74,,74,74,74,,74,12,,,74,74,74,,74,,,,74,,143,143,143,143,,74',
'143,143,143,143,143,143,12,,,,,12,12,12,12,,12,12,12,12,12,12,12,12',
'12,12,,12,12,12,184,12,184,,13,12,12,12,,12,,,,12,,183,183,183,183,',
'12,183,183,183,183,183,183,184,184,13,,,,143,13,13,13,13,,13,13,13,13',
'13,13,13,13,13,13,91,13,13,13,,13,,,,13,13,13,,13,,,,13,,,,,,,13,91',
',,,,91,91,91,91,183,91,91,91,91,91,91,91,91,91,91,145,91,91,91,,91,',
',,91,91,91,,91,,,,91,,,,,,,91,145,,,,,145,145,145,145,,145,145,145,145',
'145,145,145,145,145,145,88,145,145,145,,145,,,,145,145,145,,145,,,,145',
',,,,,,145,88,,,,,88,88,88,88,,88,88,88,88,88,88,88,88,88,88,73,88,88',
'88,,88,,,,88,88,88,,88,,,,88,,,,,,,88,73,,,,,73,73,73,73,,73,73,73,73',
'73,73,73,73,73,73,212,73,73,73,,73,,,,73,73,73,,73,,,,73,,,,,,,73,212',
',,,,212,212,212,212,,212,212,212,212,212,212,212,212,212,212,86,212',
'212,212,,212,,,,212,212,212,,212,,,,212,,,,,,,212,86,,,,,86,86,86,86',
',86,86,86,86,86,86,86,86,86,86,211,86,86,86,,86,,,,86,86,86,,86,,,,86',
',,,,,,86,211,,,,,211,211,211,211,,211,211,211,211,211,211,211,211,211',
'211,210,211,211,211,,211,,,,211,211,211,,211,,,,211,,,,,,,211,210,,',
',,210,210,210,210,,210,210,210,210,210,210,210,210,210,210,85,210,210',
'210,,210,,,,210,210,210,,210,,,,210,,,,,,,210,85,,,,,85,85,85,85,,85',
'85,85,85,85,85,85,85,85,85,201,85,85,85,,85,,,,85,85,85,,85,,,,85,,',
',,,,85,201,,,,,201,201,201,201,,201,201,201,201,201,201,201,201,201',
'201,68,201,201,201,,201,,,,201,201,201,,201,,,,201,,,,,,,201,68,,,,',
'68,68,68,68,,68,68,68,68,68,68,68,68,68,68,84,68,68,68,,68,,,,68,68',
'68,,68,,,,68,,,,,,,68,84,,,,,84,84,84,84,,84,84,84,84,84,84,84,84,84',
'84,33,84,84,84,,84,,,,84,84,84,,84,,,,84,,,,,,,84,33,,,,,33,33,33,33',
',33,33,33,33,33,33,33,33,33,33,83,33,33,33,,33,,,,33,33,33,,33,,,,33',
',,,,,,33,83,,,,,83,83,83,83,,83,83,83,83,83,83,83,83,83,83,65,83,83',
'83,,83,,,,83,83,83,,83,,,,83,,,,,,,83,65,,,,,65,65,65,65,,65,65,65,65',
'65,65,65,65,65,65,39,65,65,65,,65,,,,65,65,65,,65,,,,65,,,,,,,65,39',
',,,,39,39,39,39,,39,39,39,39,39,39,39,39,39,39,168,39,39,39,,39,,,,39',
'39,39,,39,,,,39,,,,,,,39,168,,,,,168,168,168,168,,168,168,168,168,168',
'168,168,168,168,168,193,168,168,168,,168,,,,168,168,168,,168,,,,168',
',,,,,,168,193,,,,,193,193,193,193,,193,193,193,193,193,193,193,193,193',
'193,192,193,193,193,,193,,,,193,193,193,,193,,,,193,,,,,,,193,192,,',
',,192,192,192,192,,192,192,192,192,192,192,192,192,192,192,191,192,192',
'192,,192,,,,192,192,192,,192,,,,192,,,,,,,192,191,,,,,191,191,191,191',
',191,191,191,191,191,191,191,191,191,191,78,191,191,191,,191,,,,191',
'191,191,,191,,,,191,,,,,,,191,78,,,,,78,78,78,78,,78,78,78,78,78,78',
'78,78,78,78,77,78,78,78,,78,,,,78,78,78,,78,,,,78,,,,,,,78,77,,,,,77',
'77,77,77,,77,77,77,77,77,77,77,77,77,77,66,77,77,77,,77,,,,77,77,77',
',77,,,,77,,,,,,,77,66,,,,,66,66,66,66,,66,66,66,66,66,66,66,66,66,66',
'174,66,66,66,,66,,,,66,66,66,,66,,,,66,,,,,,,66,174,,,,,174,174,174',
'174,,174,174,174,174,174,174,174,174,174,174,173,174,174,174,,174,,',
',174,174,174,,174,,,,174,,,,,,,174,173,,,,,173,173,173,173,,173,173',
'173,173,173,173,173,173,173,173,76,173,173,173,,173,,,,173,173,173,',
'173,,,,173,,,,,,,173,76,,,,,76,76,76,76,,76,76,76,76,76,76,76,76,76',
'76,75,76,76,76,,76,,,,76,76,76,,76,,,,76,,,,,,,76,75,,,,,75,75,75,75',
',75,75,75,75,75,75,75,75,75,75,171,75,75,75,,75,,,,75,75,75,,75,,,,75',
',,,,,,75,171,,,,,171,171,171,171,,171,171,171,171,171,171,171,171,171',
'171,,171,171,171,61,171,,,,171,171,171,,171,,,,171,,,,,,,171,61,61,61',
'61,61,,61,61,,61,61,61,61,,61,61,61,61,61,61,61,61,61,61,62,61,61,61',
',61,,,,61,61,61,,61,,61,61,61,,,,,,,61,62,,,,,62,62,62,62,,62,62,62',
'62,62,62,62,62,62,62,63,62,62,62,,62,,,,62,62,62,,62,,,,62,,,,,,,62',
'63,,,,,63,63,63,63,,63,63,63,63,63,63,63,63,63,63,64,63,63,63,,63,,',
',63,63,63,,63,,,,63,,,,,,,63,64,,,,,64,64,64,64,,64,64,64,64,64,64,64',
'64,64,64,72,64,64,64,,64,,,,64,64,64,,64,,,,64,,,,,,,64,72,,,,,72,72',
'72,72,,72,72,72,72,72,72,72,72,72,72,,72,72,72,,72,,,,72,72,72,,72,',
',,72,,195,195,195,195,,72,195,195,195,195,195,195,200,200,200,200,,',
'200,200,200,200,200,200,140,140,140,140,,,140,140,140,140,140,140,117',
'117,117,117,,,117,117,117,117,117,117,116,116,116,116,,,116,116,116',
'116,116,116,,,,79,79,79,79,,195,79,79,79,79,79,79,115,115,115,115,,200',
'115,115,115,115,115,115,218,218,218,218,,140,218,218,218,218,218,218',
'219,219,219,219,,117,219,219,219,219,219,219,157,157,157,157,,116,157',
'157,157,157,157,157,,,,217,217,217,217,,79,217,217,217,217,217,217,',
'6,6,6,,115,6,5,5,5,218,,5,4,4,4,,,4,,6,,219,,,,5,,,,,,4,,157,6,,8,8',
'8,,5,8,,,6,54,4,54,217,,5,,3,3,3,8,4,3,7,7,7,,,7,0,0,0,,,0,8,3,54,54',
',,,7,,,8,,,0,,,3,,,,,,7,,,,3,,0,,,,7,223,223,223,223,,0,223,223,223',
'223,223,223,137,137,137,137,,,137,137,137,137,137,137,229,229,229,229',
',,229,229,229,229,229,229,230,230,230,230,,,230,230,230,230,230,230',
'103,103,103,103,,,103,103,103,103,103,103,31,31,31,31,,,31,31,31,31',
'31,31,199,199,199,199,,,199,199,199,199,199,199,146,146,146,146,,,146',
'146,146,146,146,146,155,155,155,155,,,155,155,155,155,155,155,120,120',
'120,120,,,120,120,120,120,120,120,197,197,197,197,,,197,197,197,197',
'197,197,53,53,53,53,,,53,53,53,53,53,53,113,113,113,113,,,113,113,113',
'113,113,113,231,231,231,231,,,231,231,231,231,231,231,158,158,158,158',
',,158,158,158,158,158,158,114,114,114,114,,,114,114,114,114,114,114',
'128,128,128,128,,,128,128,128,128,128' ]
        racc_action_check = arr = ::Array.new(2421, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  2162,   290,   nil,  2150,  2110,  2104,  2098,  2156,  2134,   270,
   nil,   232,   368,   421,   228,   226,   278,   nil,   nil,   nil,
   nil,   nil,   nil,   221,   194,   -10,   183,   182,   181,   -56,
   169,  2274,   nil,  1006,   nil,   nil,   nil,   168,   166,  1141,
   162,   160,   158,   nil,   nil,   nil,   143,   nil,   125,   123,
   121,   115,   168,  2346,  2133,   nil,   nil,   nil,   nil,   144,
   nil,  1730,  1775,  1820,  1865,  1096,  1456,    97,   916,    87,
    88,    43,  1910,   601,   317,  1636,  1591,  1411,  1366,  2035,
    86,    83,    69,  1051,   961,   826,   691,    -2,   556,    49,
    -3,   466,   nil,   nil,   nil,   nil,   nil,    29,    25,    14,
    -3,   -17,   272,  2262,   223,   nil,   -42,   178,   nil,   133,
   -22,    50,   -35,  2358,  2394,  2047,  2020,  2008,   123,     0,
  2322,   nil,   202,   194,   239,   106,   151,    24,  2406,    92,
   237,   nil,   -51,   nil,    12,    -9,    -2,  2226,   -15,   -13,
  1996,    22,    -9,   379,    32,   511,  2298,    35,    53,    63,
   nil,   nil,   nil,   nil,    68,  2310,   130,  2083,  2382,    77,
    79,    80,   nil,   nil,   nil,   nil,   nil,    95,  1186,    98,
   nil,  1681,    97,  1546,  1501,   114,   nil,   nil,   nil,   nil,
   nil,   132,   nil,   430,   392,   nil,   nil,   -39,    -2,   137,
   172,  1321,  1276,  1231,   160,  1972,   nil,  2334,   nil,  2286,
  1984,   871,   175,   nil,   nil,   nil,   nil,   192,   195,    -2,
   781,   736,   646,   259,   nil,   nil,   211,  2098,  2059,  2071,
   nil,   nil,   nil,  2214,   nil,   229,   nil,   229,   nil,  2238,
  2250,  2370,   226,   nil,   nil,   nil,   nil,   271,   nil,   nil,
   nil,   237,   nil ]

racc_action_default = [
    -8,  -111,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -111,
   -10,  -111,  -111,  -111,  -107,  -111,  -111,    -2,    -3,    -4,
    -5,    -6,    -7,  -111,  -111,   -44,  -111,  -111,  -111,  -111,
  -111,   -83,   -53,  -111,   -55,   -56,   -57,  -111,  -111,  -111,
  -111,  -111,  -111,   -73,   -74,   -75,  -111,   -77,  -111,  -111,
  -111,  -111,   -44,   -85,  -111,  -106,  -110,  -105,   243,   -13,
   -23,   -26,  -111,  -111,  -111,  -111,  -111,  -111,  -111,  -111,
  -111,  -111,  -111,  -111,  -111,  -111,  -111,  -111,  -111,  -111,
  -111,  -111,   -60,  -111,  -111,  -111,  -111,  -111,  -111,  -111,
  -111,  -111,   -89,   -90,   -91,   -92,   -93,  -108,  -103,  -111,
  -111,  -111,   -26,   -27,  -111,   -32,  -111,  -111,   -35,  -111,
  -111,  -111,  -111,   -45,   -84,  -111,  -111,  -111,  -111,   -44,
  -111,   -52,   -61,   -62,   -63,   -64,   -65,   -67,   -68,   -69,
   -71,   -54,  -111,   -95,  -111,  -102,  -111,  -100,  -111,  -111,
  -111,  -111,   -44,  -111,  -111,  -111,   -86,   -87,  -111,  -111,
   -15,   -12,   -24,   -25,  -111,   -28,  -111,  -111,   -36,  -111,
  -111,  -111,   -46,   -47,   -48,   -49,   -50,  -111,  -111,  -111,
   -96,  -111,  -111,  -111,  -111,   -98,   -70,   -72,   -76,   -78,
   -79,  -111,   -81,  -111,  -111,  -109,  -104,  -111,   -52,  -111,
   -41,  -111,  -111,  -111,   -52,  -111,   -94,   -97,   -59,  -101,
  -111,  -111,  -111,   -82,   -88,    -9,   -14,  -111,  -111,   -18,
  -111,  -111,  -111,   -33,   -43,   -34,  -111,  -111,  -111,  -111,
   -51,   -58,   -66,   -99,   -80,  -111,   -17,  -111,   -20,   -29,
   -30,   -31,  -111,   -40,   -37,   -38,   -39,   -22,   -19,   -42,
   -16,  -111,   -21 ]

racc_goto_table = [
    60,    31,    53,    55,   101,    91,     2,   132,   135,    17,
    18,    19,    20,    21,    22,   138,   139,   215,   141,   207,
   206,   213,    79,   240,   187,   172,    99,     1,    82,    54,
   204,   147,   196,   175,    98,    97,   nil,   nil,   nil,   nil,
   nil,   145,   nil,   nil,   nil,   153,   nil,   nil,   nil,   nil,
   103,   113,   114,   115,   116,   117,   nil,   120,   nil,   122,
   123,   124,   125,   126,   127,   128,   129,   130,   nil,   nil,
   nil,   nil,   136,   nil,   nil,   140,   nil,   143,   nil,   nil,
   146,   nil,   156,   nil,   nil,   nil,   nil,   nil,   nil,   151,
   nil,   103,   nil,   155,   nil,   nil,   157,   nil,   158,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   190,   183,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,   nil,   nil,
   197,   nil,   199,   200,   nil,   214,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   217,   218,   219,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   223,   nil,   233,   234,   235,   236,   nil,   nil,   nil,   229,
   230,   231,   nil,   nil,   nil,   nil,   nil,   nil,   239 ]

racc_goto_check = [
    16,    19,    19,    12,    17,    26,     2,    23,    23,     2,
     2,     2,     2,     2,     2,    25,    25,    22,    25,    14,
    13,    21,    19,    15,    11,    24,    10,     1,    19,    27,
    28,    29,    30,    31,    32,    33,   nil,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,
    19,    19,    19,    19,    19,    19,   nil,    19,   nil,    19,
    19,    19,    19,    19,    19,    19,    19,    19,   nil,   nil,
   nil,   nil,    19,   nil,   nil,    19,   nil,    19,   nil,   nil,
    19,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,    12,
   nil,    19,   nil,    19,   nil,   nil,    19,   nil,    19,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,
    19,   nil,    19,    19,   nil,    16,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,    19,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,   nil,    16,    16,    16,    16,   nil,   nil,   nil,    19,
    19,    19,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    27,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -33,  -126,   -11,  -167,  -168,  -214,   -24,   -57,   nil,   -11,
   nil,  -168,  -173,   -73,  -110,   -69,   -49,    15,  -154,   -61,
  -137,  -104,   -23,   -21 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   102,   137,
   105,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,
   133,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 75, :_reduce_1,
  2, 76, :_reduce_2,
  2, 76, :_reduce_3,
  2, 76, :_reduce_4,
  2, 76, :_reduce_5,
  2, 76, :_reduce_6,
  2, 76, :_reduce_7,
  0, 76, :_reduce_8,
  7, 77, :_reduce_9,
  1, 83, :_reduce_10,
  0, 83, :_reduce_11,
  2, 84, :_reduce_12,
  0, 84, :_reduce_13,
  2, 85, :_reduce_14,
  0, 85, :_reduce_15,
  4, 87, :_reduce_16,
  2, 87, :_reduce_17,
  1, 88, :_reduce_18,
  3, 88, :_reduce_19,
  2, 88, :_reduce_20,
  2, 89, :_reduce_21,
  0, 89, :_reduce_22,
  3, 78, :_reduce_23,
  3, 90, :_reduce_24,
  2, 91, :_reduce_25,
  0, 91, :_reduce_26,
  1, 92, :_reduce_27,
  2, 92, :_reduce_28,
  5, 92, :_reduce_29,
  5, 92, :_reduce_30,
  5, 92, :_reduce_31,
  1, 92, :_reduce_32,
  4, 92, :_reduce_33,
  4, 92, :_reduce_34,
  1, 92, :_reduce_35,
  2, 92, :_reduce_36,
  5, 94, :_reduce_37,
  5, 94, :_reduce_38,
  5, 94, :_reduce_39,
  2, 96, :_reduce_40,
  0, 96, :_reduce_41,
  3, 95, :_reduce_42,
  1, 95, :_reduce_43,
  1, 93, :_reduce_44,
  3, 93, :_reduce_45,
  4, 93, :_reduce_46,
  4, 93, :_reduce_47,
  4, 93, :_reduce_48,
  4, 93, :_reduce_49,
  4, 93, :_reduce_50,
  6, 93, :_reduce_51,
  3, 93, :_reduce_52,
  1, 93, :_reduce_53,
  3, 93, :_reduce_54,
  1, 93, :_reduce_55,
  1, 93, :_reduce_56,
  1, 93, :_reduce_57,
  6, 93, :_reduce_58,
  5, 93, :_reduce_59,
  2, 93, :_reduce_60,
  3, 93, :_reduce_61,
  3, 93, :_reduce_62,
  3, 93, :_reduce_63,
  3, 93, :_reduce_64,
  3, 93, :_reduce_65,
  6, 93, :_reduce_66,
  3, 93, :_reduce_67,
  3, 93, :_reduce_68,
  3, 93, :_reduce_69,
  4, 93, :_reduce_70,
  3, 93, :_reduce_71,
  4, 93, :_reduce_72,
  1, 93, :_reduce_73,
  1, 93, :_reduce_74,
  1, 93, :_reduce_75,
  4, 93, :_reduce_76,
  1, 93, :_reduce_77,
  4, 93, :_reduce_78,
  4, 93, :_reduce_79,
  6, 93, :_reduce_80,
  4, 93, :_reduce_81,
  5, 93, :_reduce_82,
  2, 79, :_reduce_83,
  4, 79, :_reduce_84,
  2, 82, :_reduce_85,
  4, 81, :_reduce_86,
  2, 100, :_reduce_87,
  3, 103, :_reduce_88,
  0, 103, :_reduce_89,
  1, 102, :_reduce_90,
  1, 102, :_reduce_91,
  1, 102, :_reduce_92,
  1, 102, :_reduce_93,
  3, 97, :_reduce_94,
  1, 97, :_reduce_95,
  2, 104, :_reduce_96,
  3, 104, :_reduce_97,
  2, 99, :_reduce_98,
  3, 105, :_reduce_99,
  0, 105, :_reduce_100,
  2, 98, :_reduce_101,
  0, 98, :_reduce_102,
  3, 80, :_reduce_103,
  3, 106, :_reduce_104,
  0, 106, :_reduce_105,
  1, 101, :_reduce_106,
  0, 101, :_reduce_107,
  2, 86, :_reduce_108,
  3, 107, :_reduce_109,
  0, 107, :_reduce_110 ]

racc_reduce_n = 111

racc_shift_n = 243

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  :xor => 12,
  "<=" => 13,
  "=>" => 14,
  "<=>" => 15,
  "=" => 16,
  :authenticable => 17,
  :usergroup => 18,
  :class => 19,
  :extends => 20,
  :inverseof => 21,
  :action => 22,
  :foreach => 23,
  :flatforeach => 24,
  :unflatforeach => 25,
  :either => 26,
  :create => 27,
  :derefcreate => 28,
  :delete => 29,
  :if => 30,
  :else => 31,
  :subset => 32,
  :oneof => 33,
  :tryoneof => 34,
  :allof => 35,
  :invariant => 36,
  :forall => 37,
  :exists => 38,
  :union => 39,
  :isempty => 40,
  :empty => 41,
  :true => 42,
  :false => 43,
  :not => 44,
  :equal => 45,
  :implies => 46,
  :unknown => 47,
  :currentuser => 48,
  :inusergroup => 49,
  :allofusergroup => 50,
  :permit => 51,
  :permitted => 52,
  :permittedbytype => 53,
  :edit => 54,
  :read => 55,
  :IDENT => 56,
  :NUMBER => 57,
  :STRING => 58,
  :BASIC_TYPE => 59,
  :JS => 60,
  :roole => 61,
  :raize => 62,
  :assert => 63,
  :pickoneexpr => 64,
  "{" => 65,
  "}" => 66,
  ".." => 67,
  "+=" => 68,
  "-=" => 69,
  ":" => 70,
  "(" => 71,
  ")" => 72,
  "," => 73 }

racc_nt_base = 74

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "xor",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "\"=\"",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "either",
  "create",
  "derefcreate",
  "delete",
  "if",
  "else",
  "subset",
  "oneof",
  "tryoneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "union",
  "isempty",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "raize",
  "assert",
  "pickoneexpr",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "block",
  "statements",
  "statement",
  "expr",
  "foreach_stmt",
  "eitherblocks",
  "optelse",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "comma_separated_exprs",
  "perm_op_list",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "more_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 25)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 27)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 29)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 31)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 41)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 42)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 44)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 45)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 47)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 50)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_17(val, _values, result)
     return ASTField.new :lineno => val[0][1], :type_name => val[0][0], :name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_19(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 58)
  def _reduce_20(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 60)
  def _reduce_21(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 61)
  def _reduce_22(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_23(val, _values, result)
     return ASTAction.new :lineno => val[0], :name => val[1], :block => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 65)
  def _reduce_24(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 67)
  def _reduce_25(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 68)
  def _reduce_26(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 70)
  def _reduce_27(val, _values, result)
     return ASTExprStmt.new :lineno => val[0].lineno, :expr => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_28(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 73)
  def _reduce_29(val, _values, result)
                   return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_30(val, _values, result)
                   return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 79)
  def _reduce_31(val, _values, result)
                   return ASTMemberSet.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2], :expr => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_32(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 82)
  def _reduce_33(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_34(val, _values, result)
     return ASTIf.new(
               :lineno => val[0], :condition => val[1], :then_block => val[2], :else_block => val[3]
             )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_35(val, _values, result)
     return ASTRaise.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 87)
  def _reduce_36(val, _values, result)
     return ASTAssertFormula.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 90)
  def _reduce_37(val, _values, result)
                      return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 93)
  def _reduce_38(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(true)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 98)
  def _reduce_39(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(false)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 103)
  def _reduce_40(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 104)
  def _reduce_41(val, _values, result)
     return ASTBlock.new :statements => [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 106)
  def _reduce_42(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 107)
  def _reduce_43(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 109)
  def _reduce_44(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 110)
  def _reduce_45(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 111)
  def _reduce_46(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 112)
  def _reduce_47(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 113)
  def _reduce_48(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 114)
  def _reduce_49(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 115)
  def _reduce_50(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 117)
  def _reduce_51(val, _values, result)
     return ASTDereferenceCreate.new :lineno => val[0], :objset => val[2], :rel_name => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_52(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_53(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_54(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 121)
  def _reduce_55(val, _values, result)
     return ASTJsExpr.new :lineno => val[0][:lineno], :js    => val[0][:js] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_56(val, _values, result)
     return ASTNumber.new :lineno => val[0][:lineno], :value => val[0][:value] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_57(val, _values, result)
     return ASTString.new :lineno => val[0][:lineno], :value => val[0][:value].gsub(%q{\'}, %q{'}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_58(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_59(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 129)
  def _reduce_60(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_61(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_62(val, _values, result)
     return ASTOr.new  :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_63(val, _values, result)
     return ASTXor.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 134)
  def _reduce_64(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 136)
  def _reduce_65(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_66(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 140)
  def _reduce_67(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_68(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 143)
  def _reduce_69(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 146)
  def _reduce_70(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 147)
  def _reduce_71(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 148)
  def _reduce_72(val, _values, result)
     return ASTUnion.new :lineno => val[0], :objsets => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 149)
  def _reduce_73(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 150)
  def _reduce_74(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 151)
  def _reduce_75(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 152)
  def _reduce_76(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 153)
  def _reduce_77(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 154)
  def _reduce_78(val, _values, result)
     return ASTPickOneExpr.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 156)
  def _reduce_79(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 158)
  def _reduce_80(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 159)
  def _reduce_81(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 160)
  def _reduce_82(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 163)
  def _reduce_83(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 166)
  def _reduce_84(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 169)
  def _reduce_85(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 172)
  def _reduce_86(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 174)
  def _reduce_87(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 175)
  def _reduce_88(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 176)
  def _reduce_89(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 178)
  def _reduce_90(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 179)
  def _reduce_91(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 180)
  def _reduce_92(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 181)
  def _reduce_93(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 184)
  def _reduce_94(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 185)
  def _reduce_95(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 188)
  def _reduce_96(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 190)
  def _reduce_97(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 192)
  def _reduce_98(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 194)
  def _reduce_99(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 195)
  def _reduce_100(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 197)
  def _reduce_101(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 198)
  def _reduce_102(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 201)
  def _reduce_103(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 203)
  def _reduce_104(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 204)
  def _reduce_105(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 206)
  def _reduce_106(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 207)
  def _reduce_107(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 208)
  def _reduce_108(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_109(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 210)
  def _reduce_110(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
