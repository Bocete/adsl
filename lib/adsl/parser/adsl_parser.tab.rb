#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 235)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  rescue ScanError, Racc::ParseError => e
    raise ADSLError, e.message
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

clist = [
'44,67,76,73,75,169,60,68,69,70,72,71,74,67,76,73,75,227,150,68,69,70',
'72,71,74,30,139,60,185,216,26,27,28,29,182,37,38,45,32,42,43,39,41,40',
'44,46,48,49,157,50,84,60,83,51,35,36,148,34,160,147,47,61,82,148,33',
'159,152,168,149,30,225,226,167,155,26,27,28,29,145,37,38,45,32,42,43',
'39,41,40,44,46,48,49,162,50,67,76,163,51,35,36,164,34,158,167,47,67',
'76,81,33,67,76,170,92,30,93,171,79,121,26,27,28,29,78,37,38,45,32,42',
'43,39,41,40,44,46,48,49,175,50,91,90,86,51,35,36,66,34,178,179,47,65',
'87,67,33,64,197,198,92,30,93,199,63,60,26,27,28,29,144,37,38,45,32,42',
'43,39,41,40,44,46,48,49,97,50,91,90,62,51,35,36,203,34,204,205,47,206',
'59,139,33,58,167,57,92,30,93,212,213,214,26,27,28,29,215,37,38,45,32',
'42,43,39,41,40,44,46,48,49,138,50,91,90,85,51,35,36,217,34,55,218,47',
'56,220,221,33,67,76,73,75,30,222,68,69,70,26,27,28,29,224,37,38,45,32',
'42,43,39,41,40,44,46,48,49,55,50,167,231,24,51,35,36,23,34,136,235,47',
'135,134,-27,33,67,76,73,75,30,239,68,69,70,26,27,28,29,167,37,38,45',
'32,42,43,39,41,40,44,46,48,49,121,50,130,16,105,51,35,36,108,34,121',
'167,47,,,,33,67,76,73,75,30,67,76,73,75,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,67,76,73,75,30',
',,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35',
'36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40',
'44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37',
'38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,25,35,36,,34,,,47,,,,33,',
',,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,',
',51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39',
'41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28',
'29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47',
',,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49',
',50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,194,195,196,191',
'30,,189,192,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50',
',,,51,35,36,,34,,193,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42',
'43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26',
'27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34',
',,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46',
'48,49,,50,,,,51,35,36,,34,,,47,,,,33,194,195,196,191,30,,189,192,,26',
'27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34',
',193,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,',
'30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51',
'35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41',
'40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29',
',37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,',
'33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50',
',,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43',
'39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27',
'28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,',
'47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48',
'49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32',
'42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,',
',26,27,28,29,,37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,44,51,35,36',
',34,,,47,,,,33,67,76,73,75,,,68,69,70,72,71,74,30,,,,,26,27,28,29,,37',
'38,45,32,42,43,39,41,40,,46,48,49,44,50,,,,51,35,36,,34,,,47,,,,33,',
',,,,,,,30,,,,153,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49',
',50,,,,106,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32',
'42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,',
',26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36',
',34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44',
'46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38',
'45,32,42,43,39,41,40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,',
'30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41,40,44,46,48,49,,50,,,,51',
'35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29,,37,38,45,32,42,43,39,41',
'40,44,46,48,49,,50,,,,51,35,36,,34,,,47,,,,33,,,,,30,,,,,26,27,28,29',
',37,38,45,32,42,43,39,41,40,,46,48,49,,50,,,,128,35,36,,34,,,47,,,,33',
'67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76',
'73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75',
',,68,69,70,72,71,74,,,,141,,,,,,,67,76,73,75,,142,68,69,70,72,71,74',
'67,76,73,75,,143,68,69,70,72,71,74,67,76,73,75,,201,68,69,70,72,71,74',
'67,76,73,75,,118,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,',
',,156,,,,,,,67,76,73,75,,180,68,69,70,72,71,74,,10,15,-11,,200,11,10',
'15,-11,,,11,167,,,10,15,-11,,12,11,10,15,-11,167,12,11,,,,,,,14,12,',
'10,15,-11,14,12,11,,13,,,167,,14,13,,10,15,-11,14,12,11,,13,,,,,,13',
',10,15,-11,14,12,11,,,,,,,,13,67,76,73,75,14,12,68,69,70,72,71,74,,',
'13,67,76,73,75,14,,68,69,70,72,71,74,,,13,67,76,73,75,,,68,69,70,72',
'71,74,208,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71',
'74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67',
'76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73',
'75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,146,76,73,75',
',,68,69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68',
'69,70,72,71,74,67,76,73,75,,,68,69,70,72,71,74,67,76,73,75,,,68,69,70',
'72,71' ]
        racc_action_table = arr = ::Array.new(2267, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'81,129,129,129,129,139,25,129,129,129,129,129,129,234,234,234,234,217',
'121,234,234,234,234,234,234,81,165,106,165,204,81,81,81,81,165,81,81',
'81,81,81,81,81,81,81,82,81,81,81,127,81,47,128,45,81,81,81,119,81,130',
'119,81,25,41,122,81,129,122,139,121,82,217,217,234,125,82,82,82,82,106',
'82,82,82,82,82,82,82,82,82,83,82,82,82,133,82,116,116,134,82,82,82,135',
'82,128,138,82,80,80,40,82,114,114,140,53,83,53,146,38,148,83,83,83,83',
'37,83,83,83,83,83,83,83,83,83,76,83,83,83,151,83,53,53,49,83,83,83,30',
'83,154,159,83,29,50,117,83,28,168,170,162,76,162,171,27,51,76,76,76',
'76,105,76,76,76,76,76,76,76,76,76,227,76,76,76,58,76,162,162,26,76,76',
'76,179,76,184,185,76,186,24,99,76,23,191,16,87,227,87,194,195,196,227',
'227,227,227,198,227,227,227,227,227,227,227,227,227,226,227,227,227',
'98,227,87,87,48,227,227,227,208,227,97,210,227,15,212,213,227,113,113',
'113,113,226,214,113,113,113,226,226,226,226,216,226,226,226,226,226',
'226,226,226,226,225,226,226,226,14,226,218,219,11,226,226,226,9,226',
'96,224,226,95,94,59,226,112,112,112,112,225,228,112,112,112,225,225',
'225,225,231,225,225,225,225,225,225,225,225,225,222,225,225,225,79,225',
'86,1,65,225,225,225,67,225,78,239,225,,,,225,111,111,111,111,222,109',
'109,109,109,222,222,222,222,,222,222,222,222,222,222,222,222,222,221',
'222,222,222,,222,,,,222,222,222,,222,,,222,,,,222,110,110,110,110,221',
',,,,221,221,221,221,,221,221,221,221,221,221,221,221,221,220,221,221',
'221,,221,,,,221,221,221,,221,,,221,,,,221,,,,,220,,,,,220,220,220,220',
',220,220,220,220,220,220,220,220,220,12,220,220,220,,220,,,,220,220',
'220,,220,,,220,,,,220,,,,,12,,,,,12,12,12,12,,12,12,12,12,12,12,12,12',
'12,13,12,12,12,,12,,,,12,12,12,,12,,,12,,,,12,,,,,13,,,,,13,13,13,13',
',13,13,13,13,13,13,13,13,13,75,13,13,13,,13,,,,13,13,13,,13,,,13,,,',
'13,,,,,75,,,,,75,75,75,75,,75,75,75,75,75,75,75,75,75,74,75,75,75,,75',
',,,75,75,75,,75,,,75,,,,75,,,,,74,,,,,74,74,74,74,,74,74,74,74,74,74',
'74,74,74,192,74,74,74,,74,,,,74,74,74,,74,,,74,,,,74,,,,,192,,,,,192',
'192,192,192,,192,192,192,192,192,192,192,192,192,189,192,192,192,,192',
',,,192,192,192,,192,,,192,,,,192,,,,,189,,,,,189,189,189,189,,189,189',
'189,189,189,189,189,189,189,187,189,189,189,,189,,,,189,189,189,,189',
',,189,,,,189,187,187,187,187,187,,187,187,,187,187,187,187,,187,187',
'187,187,187,187,187,187,187,73,187,187,187,,187,,,,187,187,187,,187',
',187,187,,,,187,,,,,73,,,,,73,73,73,73,,73,73,73,73,73,73,73,73,73,178',
'73,73,73,,73,,,,73,73,73,,73,,,73,,,,73,,,,,178,,,,,178,178,178,178',
',178,178,178,178,178,178,178,178,178,72,178,178,178,,178,,,,178,178',
'178,,178,,,178,,,,178,,,,,72,,,,,72,72,72,72,,72,72,72,72,72,72,72,72',
'72,167,72,72,72,,72,,,,72,72,72,,72,,,72,,,,72,167,167,167,167,167,',
'167,167,,167,167,167,167,,167,167,167,167,167,167,167,167,167,71,167',
'167,167,,167,,,,167,167,167,,167,,167,167,,,,167,,,,,71,,,,,71,71,71',
'71,,71,71,71,71,71,71,71,71,71,153,71,71,71,,71,,,,71,71,71,,71,,,71',
',,,71,,,,,153,,,,,153,153,153,153,,153,153,153,153,153,153,153,153,153',
'152,153,153,153,,153,,,,153,153,153,,153,,,153,,,,153,,,,,152,,,,,152',
'152,152,152,,152,152,152,152,152,152,152,152,152,33,152,152,152,,152',
',,,152,152,152,,152,,,152,,,,152,,,,,33,,,,,33,33,33,33,,33,33,33,33',
'33,33,33,33,33,150,33,33,33,,33,,,,33,33,33,,33,,,33,,,,33,,,,,150,',
',,,150,150,150,150,,150,150,150,150,150,150,150,150,150,147,150,150',
'150,,150,,,,150,150,150,,150,,,150,,,,150,,,,,147,,,,,147,147,147,147',
',147,147,147,147,147,147,147,147,147,39,147,147,147,,147,,,,147,147',
'147,,147,,,147,,,,147,,,,,39,,,,,39,39,39,39,,39,39,39,39,39,39,39,39',
'39,70,39,39,39,,39,,,,39,39,39,,39,,,39,,,,39,,,,,70,,,,,70,70,70,70',
',70,70,70,70,70,70,70,70,70,131,70,70,70,,70,,,,70,70,70,,70,,,70,,',
',70,,,,,131,,,,,131,131,131,131,,131,131,131,131,131,131,131,131,131',
'69,131,131,131,,131,,,,131,131,131,,131,,,131,,,,131,,,,,69,,,,,69,69',
'69,69,,69,69,69,69,69,69,69,69,69,68,69,69,69,,69,,,,69,69,69,,69,,',
'69,,,,69,,,,,68,,,,,68,68,68,68,,68,68,68,68,68,68,68,68,68,,68,68,68',
',68,,,84,68,68,68,,68,,,68,,,,68,123,123,123,123,,,123,123,123,123,123',
'123,84,,,,,84,84,84,84,,84,84,84,84,84,84,84,84,84,,84,84,84,66,84,',
',,84,84,84,,84,,,84,,,,84,,,,,,,,,66,,,,123,66,66,66,66,,66,66,66,66',
'66,66,66,66,66,62,66,66,66,,66,,,,66,66,66,,66,,,66,,,,66,,,,,62,,,',
',62,62,62,62,,62,62,62,62,62,62,62,62,62,64,62,62,62,,62,,,,62,62,62',
',62,,,62,,,,62,,,,,64,,,,,64,64,64,64,,64,64,64,64,64,64,64,64,64,63',
'64,64,64,,64,,,,64,64,64,,64,,,64,,,,64,,,,,63,,,,,63,63,63,63,,63,63',
'63,63,63,63,63,63,63,88,63,63,63,,63,,,,63,63,63,,63,,,63,,,,63,,,,',
'88,,,,,88,88,88,88,,88,88,88,88,88,88,88,88,88,60,88,88,88,,88,,,,88',
'88,88,,88,,,88,,,,88,,,,,60,,,,,60,60,60,60,,60,60,60,60,60,60,60,60',
'60,61,60,60,60,,60,,,,60,60,60,,60,,,60,,,,60,,,,,61,,,,,61,61,61,61',
',61,61,61,61,61,61,61,61,61,85,61,61,61,,61,,,,61,61,61,,61,,,61,,,',
'61,,,,,85,,,,,85,85,85,85,,85,85,85,85,85,85,85,85,85,,85,85,85,,85',
',,,85,85,85,,85,,,85,,,,85,102,102,102,102,,,102,102,102,102,102,102',
'103,103,103,103,,,103,103,103,103,103,103,104,104,104,104,,,104,104',
'104,104,104,104,177,177,177,177,,,177,177,177,177,177,177,77,77,77,77',
',,77,77,77,77,77,77,,,,102,,,,,,,126,126,126,126,,103,126,126,126,126',
'126,126,161,161,161,161,,104,161,161,161,161,161,161,172,172,172,172',
',177,172,172,172,172,172,172,233,233,233,233,,77,233,233,233,233,233',
'233,211,211,211,211,,,211,211,211,211,211,211,,,,126,,,,,,,232,232,232',
'232,,161,232,232,232,232,232,232,,0,0,0,,172,0,7,7,7,,,7,233,,,6,6,6',
',0,6,5,5,5,211,7,5,,,,,,,0,6,,8,8,8,7,5,8,,0,,,232,,6,7,,4,4,4,5,8,4',
',6,,,,,,5,,3,3,3,8,4,3,,,,,,,,8,176,176,176,176,4,3,176,176,176,176',
'176,176,,,4,209,209,209,209,3,,209,209,209,209,209,209,,,3,202,202,202',
'202,,,202,202,202,202,202,202,188,188,188,188,,,188,188,188,188,188',
'188,100,100,100,100,,,100,100,100,100,100,100,101,101,101,101,,,101',
'101,101,101,101,101,124,124,124,124,,,124,124,124,124,124,124,237,237',
'237,237,,,237,237,237,237,237,237,52,52,52,52,,,52,52,52,52,52,52,236',
'236,236,236,,,236,236,236,236,236,236,174,174,174,174,,,174,174,174',
'174,174,174,107,107,107,107,,,107,107,107,107,107,107,31,31,31,31,,',
'31,31,31,31,31,31,238,238,238,238,,,238,238,238,238,238,238,132,132',
'132,132,,,132,132,132,132,132,132,115,115,115,115,,,115,115,115,115',
'115' ]
        racc_action_check = arr = ::Array.new(2267, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  1973,   315,   nil,  2039,  2024,  1994,  1988,  1979,  2009,   257,
   nil,   217,   438,   482,   213,   182,   199,   nil,   nil,   nil,
   nil,   nil,   nil,   142,   128,   -10,   118,    94,    87,    83,
    78,  2216,   nil,  1054,   nil,   nil,   nil,    56,    50,  1186,
    41,    -4,   nil,   nil,   nil,   -14,   nil,   -16,   162,    74,
    84,   145,  2168,    85,   nil,   nil,   nil,   nil,   160,   227,
  1682,  1726,  1506,  1594,  1550,   261,  1462,   265,  1362,  1318,
  1230,   922,   834,   746,   570,   526,   130,  1881,   267,   257,
   101,    -2,    42,    86,  1414,  1770,   259,   173,  1638,   nil,
   nil,   nil,   nil,   nil,   214,   213,   215,   179,   157,   139,
  2120,  2132,  1833,  1845,  1857,    99,    11,  2204,   nil,   330,
   369,   325,   281,   237,   105,  2252,    90,   147,   nil,   -12,
   nil,    13,    -5,  1425,  2144,     6,  1903,   -19,    35,    -3,
    -9,  1274,  2240,    24,    41,    45,   nil,   nil,    40,     2,
    56,   nil,   nil,   nil,   nil,   nil,    60,  1142,    62,   nil,
  1098,    69,  1010,   966,    78,   nil,   nil,   nil,   nil,    92,
   nil,  1915,   129,   nil,   nil,   -30,   nil,   878,    98,   nil,
   100,    92,  1927,   nil,  2192,   nil,  2066,  1869,   790,   121,
   nil,   nil,   nil,   nil,   135,   136,   129,   702,  2108,   658,
   nil,   135,   614,   nil,   148,   149,   150,   nil,   142,   nil,
   nil,   nil,  2096,   nil,   -26,   nil,   nil,   nil,   177,  2081,
   224,  1951,   167,   168,   175,   nil,   233,     1,   207,   240,
   394,   350,   306,   nil,   224,   262,   218,   174,   279,   nil,
   nil,   235,  1973,  1939,     9,   nil,  2180,  2156,  2228,   260,
   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -8,  -113,    -1,    -8,    -8,    -8,    -8,    -8,    -8,  -113,
   -10,  -113,  -113,  -113,  -109,  -113,  -113,    -2,    -3,    -4,
    -5,    -6,    -7,  -113,  -113,   -47,  -113,  -113,  -113,  -113,
  -113,   -85,   -56,  -113,   -58,   -59,   -60,  -113,  -113,  -113,
  -113,  -113,   -75,   -76,   -77,  -113,   -79,  -113,  -113,  -113,
  -113,   -47,   -87,  -113,  -108,  -112,  -107,   245,   -13,   -25,
  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,
  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,
   -63,  -113,  -113,  -113,  -113,  -113,  -113,  -113,  -113,   -91,
   -92,   -93,   -94,   -95,  -110,  -105,  -113,  -113,  -113,  -113,
   -48,   -86,  -113,  -113,  -113,  -113,   -47,  -113,   -55,   -64,
   -65,   -66,   -67,   -68,   -70,   -71,   -72,   -74,   -57,  -113,
   -97,  -113,  -104,  -113,  -102,  -113,  -113,  -113,   -47,  -113,
  -113,  -113,   -88,   -89,  -113,  -113,   -15,   -12,  -113,   -18,
  -113,   -49,   -50,   -51,   -52,   -53,  -113,  -113,  -113,   -98,
  -113,  -113,  -113,  -113,  -100,   -73,   -78,   -80,   -81,  -113,
   -83,  -113,  -113,  -111,  -106,  -113,   -23,   -30,  -113,   -20,
  -113,   -55,  -113,   -96,   -99,   -62,  -103,  -113,  -113,  -113,
   -84,   -90,    -9,   -14,  -113,  -113,  -113,   -30,   -31,  -113,
   -36,  -113,  -113,   -39,  -113,  -113,  -113,   -19,   -24,   -54,
   -61,   -69,  -101,   -82,  -113,   -17,   -28,   -29,  -113,   -32,
  -113,  -113,  -113,  -113,  -113,   -26,   -22,   -55,  -113,   -44,
  -113,  -113,  -113,   -16,  -113,  -113,  -113,  -113,   -37,   -46,
   -38,  -113,  -113,  -113,  -113,   -21,   -33,   -34,   -35,  -113,
   -43,   -40,   -41,   -42,   -45 ]

racc_goto_table = [
    31,    52,   166,    54,   140,    88,   186,     2,   119,   122,
    17,    18,    19,    20,    21,    22,   125,   228,   127,    99,
   223,    77,   183,    98,   230,   165,   207,    80,   151,    96,
     1,    53,   181,   133,   173,   154,    95,    94,   nil,   131,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   100,   101,
   102,   103,   104,   nil,   107,   210,   109,   110,   111,   112,
   113,   114,   115,   116,   117,   nil,   nil,   nil,   nil,   123,
   184,   126,   nil,   129,   nil,   219,   132,   nil,   nil,   nil,
   nil,   nil,   229,   nil,   nil,   nil,   137,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   240,   241,   242,   243,   nil,
   nil,   nil,   nil,   244,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   161,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   174,   nil,
   176,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   202,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   nil,   209,   nil,   nil,
   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   232,   233,
   234,   nil,   nil,   236,   237,   238 ]

racc_goto_check = [
    21,    21,    17,    12,    14,    28,    19,     2,    25,    25,
     2,     2,     2,     2,     2,     2,    27,    23,    27,    18,
    15,    21,    13,    16,    24,    11,    19,    21,    26,    10,
     1,    29,    30,    31,    32,    33,    34,    35,   nil,    28,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,
    21,    21,    21,   nil,    21,    17,    21,    21,    21,    21,
    21,    21,    21,    21,    21,   nil,   nil,   nil,   nil,    21,
    14,    21,   nil,    21,   nil,    17,    21,   nil,   nil,   nil,
   nil,   nil,    17,   nil,   nil,   nil,    12,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    17,    17,    17,    17,   nil,
   nil,   nil,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,    21,   nil,
    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,    21,   nil,   nil,
    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    21,
    21,   nil,   nil,    21,    21,    21 ]

racc_goto_pointer = [
   nil,    30,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   -29,  -111,   -11,  -143,   -95,  -196,   -36,  -136,   -40,  -161,
   nil,   -12,   nil,  -201,  -195,   -70,   -94,   -66,   -48,    17,
  -130,   -56,  -114,   -89,   -20,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   187,   124,   190,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    89,   nil,   120,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 73, :_reduce_1,
  2, 74, :_reduce_2,
  2, 74, :_reduce_3,
  2, 74, :_reduce_4,
  2, 74, :_reduce_5,
  2, 74, :_reduce_6,
  2, 74, :_reduce_7,
  0, 74, :_reduce_8,
  7, 75, :_reduce_9,
  1, 81, :_reduce_10,
  0, 81, :_reduce_11,
  2, 82, :_reduce_12,
  0, 82, :_reduce_13,
  2, 83, :_reduce_14,
  0, 83, :_reduce_15,
  4, 85, :_reduce_16,
  2, 85, :_reduce_17,
  1, 86, :_reduce_18,
  3, 86, :_reduce_19,
  2, 86, :_reduce_20,
  2, 87, :_reduce_21,
  0, 87, :_reduce_22,
  6, 76, :_reduce_23,
  4, 88, :_reduce_24,
  0, 88, :_reduce_25,
  5, 90, :_reduce_26,
  0, 90, :_reduce_27,
  3, 89, :_reduce_28,
  2, 91, :_reduce_29,
  0, 91, :_reduce_30,
  1, 92, :_reduce_31,
  2, 92, :_reduce_32,
  5, 92, :_reduce_33,
  5, 92, :_reduce_34,
  5, 92, :_reduce_35,
  1, 92, :_reduce_36,
  4, 92, :_reduce_37,
  4, 92, :_reduce_38,
  1, 92, :_reduce_39,
  5, 94, :_reduce_40,
  5, 94, :_reduce_41,
  5, 94, :_reduce_42,
  2, 96, :_reduce_43,
  0, 96, :_reduce_44,
  3, 95, :_reduce_45,
  1, 95, :_reduce_46,
  1, 93, :_reduce_47,
  3, 93, :_reduce_48,
  4, 93, :_reduce_49,
  4, 93, :_reduce_50,
  4, 93, :_reduce_51,
  4, 93, :_reduce_52,
  4, 93, :_reduce_53,
  6, 93, :_reduce_54,
  3, 93, :_reduce_55,
  1, 93, :_reduce_56,
  3, 93, :_reduce_57,
  1, 93, :_reduce_58,
  1, 93, :_reduce_59,
  1, 93, :_reduce_60,
  6, 93, :_reduce_61,
  5, 93, :_reduce_62,
  2, 93, :_reduce_63,
  3, 93, :_reduce_64,
  3, 93, :_reduce_65,
  3, 93, :_reduce_66,
  3, 93, :_reduce_67,
  3, 93, :_reduce_68,
  6, 93, :_reduce_69,
  3, 93, :_reduce_70,
  3, 93, :_reduce_71,
  3, 93, :_reduce_72,
  4, 93, :_reduce_73,
  3, 93, :_reduce_74,
  1, 93, :_reduce_75,
  1, 93, :_reduce_76,
  1, 93, :_reduce_77,
  4, 93, :_reduce_78,
  1, 93, :_reduce_79,
  4, 93, :_reduce_80,
  4, 93, :_reduce_81,
  6, 93, :_reduce_82,
  4, 93, :_reduce_83,
  5, 93, :_reduce_84,
  2, 77, :_reduce_85,
  4, 77, :_reduce_86,
  2, 80, :_reduce_87,
  4, 79, :_reduce_88,
  2, 100, :_reduce_89,
  3, 103, :_reduce_90,
  0, 103, :_reduce_91,
  1, 102, :_reduce_92,
  1, 102, :_reduce_93,
  1, 102, :_reduce_94,
  1, 102, :_reduce_95,
  3, 97, :_reduce_96,
  1, 97, :_reduce_97,
  2, 104, :_reduce_98,
  3, 104, :_reduce_99,
  2, 99, :_reduce_100,
  3, 105, :_reduce_101,
  0, 105, :_reduce_102,
  2, 98, :_reduce_103,
  0, 98, :_reduce_104,
  3, 78, :_reduce_105,
  3, 106, :_reduce_106,
  0, 106, :_reduce_107,
  1, 101, :_reduce_108,
  0, 101, :_reduce_109,
  2, 84, :_reduce_110,
  3, 107, :_reduce_111,
  0, 107, :_reduce_112 ]

racc_reduce_n = 113

racc_shift_n = 245

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "+" => 3,
  "." => 4,
  :in => 5,
  "==" => 6,
  "!=" => 7,
  :noassoc => 8,
  :NOT => 9,
  :and => 10,
  :or => 11,
  :xor => 12,
  "<=" => 13,
  "=>" => 14,
  "<=>" => 15,
  "=" => 16,
  :authenticable => 17,
  :usergroup => 18,
  :class => 19,
  :extends => 20,
  :inverseof => 21,
  :action => 22,
  :foreach => 23,
  :flatforeach => 24,
  :unflatforeach => 25,
  :either => 26,
  :create => 27,
  :derefcreate => 28,
  :delete => 29,
  :if => 30,
  :else => 31,
  :subset => 32,
  :oneof => 33,
  :tryoneof => 34,
  :allof => 35,
  :invariant => 36,
  :forall => 37,
  :exists => 38,
  :isempty => 39,
  :empty => 40,
  :true => 41,
  :false => 42,
  :not => 43,
  :equal => 44,
  :implies => 45,
  :unknown => 46,
  :currentuser => 47,
  :inusergroup => 48,
  :allofusergroup => 49,
  :permit => 50,
  :permitted => 51,
  :permittedbytype => 52,
  :edit => 53,
  :read => 54,
  :IDENT => 55,
  :NUMBER => 56,
  :STRING => 57,
  :BASIC_TYPE => 58,
  :JS => 59,
  :roole => 60,
  :raize => 61,
  :pickoneexpr => 62,
  "{" => 63,
  "}" => 64,
  ".." => 65,
  "(" => 66,
  ")" => 67,
  "," => 68,
  "+=" => 69,
  "-=" => 70,
  ":" => 71 }

racc_nt_base = 72

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"+\"",
  "\".\"",
  "in",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "and",
  "or",
  "xor",
  "\"<=\"",
  "\"=>\"",
  "\"<=>\"",
  "\"=\"",
  "authenticable",
  "usergroup",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "flatforeach",
  "unflatforeach",
  "either",
  "create",
  "derefcreate",
  "delete",
  "if",
  "else",
  "subset",
  "oneof",
  "tryoneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "isempty",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "implies",
  "unknown",
  "currentuser",
  "inusergroup",
  "allofusergroup",
  "permit",
  "permitted",
  "permittedbytype",
  "edit",
  "read",
  "IDENT",
  "NUMBER",
  "STRING",
  "BASIC_TYPE",
  "JS",
  "roole",
  "raize",
  "pickoneexpr",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "usergroups_decl",
  "acrule_decl",
  "rule_decl",
  "opt_authenticable",
  "opt_parents",
  "member_decls",
  "ident_list",
  "member_decl",
  "cardinality",
  "opt_inverse",
  "action_args",
  "block",
  "additional_args",
  "statements",
  "statement",
  "expr",
  "foreach_stmt",
  "eitherblocks",
  "optelse",
  "quantifier_parameters_with_commas",
  "optional_expr",
  "comma_separated_exprs",
  "perm_op_list",
  "opt_ident_list",
  "perm_op",
  "more_perm_ops",
  "quantifier_parameter",
  "additional_exprs",
  "additional_ugs",
  "more_idents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_1(val, _values, result)
     return ASTSpec.new(:lineno => lineno,
                                            :classes => val[0][0],
                                            :actions => val[0][1],
                                            :invariants => val[0][2],
                                            :usergroups => val[0][3].flatten(1),
                                            :ac_rules => val[0][4],
                                            :rules => val[0][5]
                                            )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 25)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 27)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_5(val, _values, result)
     val[1][3].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 29)
  def _reduce_6(val, _values, result)
     val[1][4].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_7(val, _values, result)
     val[1][5].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 31)
  def _reduce_8(val, _values, result)
     return [[], [], [], [], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 33)
  def _reduce_9(val, _values, result)
     return ASTClass.new(
                  :lineno => val[1],
                  :authenticable => val[0],
                  :name => val[2],
                  :parent_names => val[3],
                  :members => val[5]
              ) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 41)
  def _reduce_10(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 42)
  def _reduce_11(val, _values, result)
     return false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 44)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 45)
  def _reduce_13(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 47)
  def _reduce_14(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_15(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 50)
  def _reduce_16(val, _values, result)
     return ASTRelation.new(
                 :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1],
                 :name => val[2], :inverse_of_name => val[3]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_17(val, _values, result)
     return ASTField.new :lineno => val[0][1], :type_name => val[0][0], :name => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_18(val, _values, result)
     return [val[0][:value], val[0][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 57)
  def _reduce_19(val, _values, result)
     return [val[0][:value], val[2][:value], val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 58)
  def _reduce_20(val, _values, result)
     return [val[0][:value], Numeric::INFINITY, val[0][:lineno]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 60)
  def _reduce_21(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 61)
  def _reduce_22(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 63)
  def _reduce_23(val, _values, result)
     return ASTAction.new(
                 :lineno => val[0], :name => val[1], :arg_cardinalities => val[3][0],
                 :arg_types => val[3][1], :arg_names => val[3][2], :block => val[5]
               )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 69)
  def _reduce_24(val, _values, result)
                     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0]
               
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_25(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 74)
  def _reduce_26(val, _values, result)
                         val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0]
                   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_27(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_28(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_29(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_30(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 83)
  def _reduce_31(val, _values, result)
     return ASTExprStmt.new :lineno => val[0].lineno, :expr => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 84)
  def _reduce_32(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_33(val, _values, result)
                   return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 89)
  def _reduce_34(val, _values, result)
                   return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 92)
  def _reduce_35(val, _values, result)
                   return ASTMemberSet.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2], :expr => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 94)
  def _reduce_36(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 95)
  def _reduce_37(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 96)
  def _reduce_38(val, _values, result)
     return ASTIf.new(
               :lineno => val[0], :condition => val[1], :then_block => val[2], :else_block => val[3]
             )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 99)
  def _reduce_39(val, _values, result)
     return ASTRaise.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 102)
  def _reduce_40(val, _values, result)
                      return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 105)
  def _reduce_41(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(true)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 110)
  def _reduce_42(val, _values, result)
                      f = ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
                  f.force_flat(false)
                  return f
                
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 115)
  def _reduce_43(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 116)
  def _reduce_44(val, _values, result)
     return ASTBlock.new :statements => [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_45(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_46(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 121)
  def _reduce_47(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_48(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :expr => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_49(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 124)
  def _reduce_50(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 125)
  def _reduce_51(val, _values, result)
     return ASTTryOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 126)
  def _reduce_52(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_53(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 129)
  def _reduce_54(val, _values, result)
     return ASTDereferenceCreate.new :lineno => val[0], :objset => val[2], :rel_name => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_55(val, _values, result)
     return ASTMemberAccess.new :lineno => val[0].lineno, :objset => val[0], :member_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 131)
  def _reduce_56(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_57(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 133)
  def _reduce_58(val, _values, result)
     return ASTJsExpr.new :lineno => val[0][:lineno], :js    => val[0][:js] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 134)
  def _reduce_59(val, _values, result)
     return ASTNumber.new :lineno => val[0][:lineno], :value => val[0][:value] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 135)
  def _reduce_60(val, _values, result)
     return ASTString.new :lineno => val[0][:lineno], :value => val[0][:value].gsub(%q{\'}, %q{'}) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 137)
  def _reduce_61(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 139)
  def _reduce_62(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 141)
  def _reduce_63(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 142)
  def _reduce_64(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 143)
  def _reduce_65(val, _values, result)
     return ASTOr.new  :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 144)
  def _reduce_66(val, _values, result)
     return ASTXor.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 146)
  def _reduce_67(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 148)
  def _reduce_68(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 150)
  def _reduce_69(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 152)
  def _reduce_70(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 154)
  def _reduce_71(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :exprs => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 155)
  def _reduce_72(val, _values, result)
     return ASTNot.new(
          :lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :exprs => [val[0], val[2]])
        )
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 158)
  def _reduce_73(val, _values, result)
     return ASTEqual.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 159)
  def _reduce_74(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 160)
  def _reduce_75(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 161)
  def _reduce_76(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 162)
  def _reduce_77(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 163)
  def _reduce_78(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 164)
  def _reduce_79(val, _values, result)
     return ASTCurrentUser.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 165)
  def _reduce_80(val, _values, result)
     return ASTPickOneExpr.new :lineno => val[0], :exprs => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 167)
  def _reduce_81(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 169)
  def _reduce_82(val, _values, result)
     return ASTInUserGroup.new :lineno => val[0], :objset => val[2], :groupname => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 170)
  def _reduce_83(val, _values, result)
     return ASTAllOfUserGroup.new :lineno => val[0], :groupname => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 171)
  def _reduce_84(val, _values, result)
     return ASTPermitted.new :lineno => val[0], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 174)
  def _reduce_85(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 177)
  def _reduce_86(val, _values, result)
              return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3]
        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 180)
  def _reduce_87(val, _values, result)
     return ASTRule.new :lineno => val[0], :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 183)
  def _reduce_88(val, _values, result)
     return ASTPermit.new :lineno => val[0], :group_names => val[1], :ops => val[2], :expr => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 185)
  def _reduce_89(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 186)
  def _reduce_90(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 187)
  def _reduce_91(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 189)
  def _reduce_92(val, _values, result)
     return [:read, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 190)
  def _reduce_93(val, _values, result)
     return [:edit, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 191)
  def _reduce_94(val, _values, result)
     return [:create, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 192)
  def _reduce_95(val, _values, result)
     return [:delete, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 195)
  def _reduce_96(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 196)
  def _reduce_97(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 199)
  def _reduce_98(val, _values, result)
                              return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno]
                        
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 201)
  def _reduce_99(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 203)
  def _reduce_100(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 205)
  def _reduce_101(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 206)
  def _reduce_102(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 208)
  def _reduce_103(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 209)
  def _reduce_104(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 212)
  def _reduce_105(val, _values, result)
     val[2].unshift ASTUserGroup.new(:lineno => val[1].lineno, :name => val[1]); return val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 214)
  def _reduce_106(val, _values, result)
     val[0] << ASTUserGroup.new(:lineno => val[2].lineno, :name => val[2]); return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 215)
  def _reduce_107(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 217)
  def _reduce_108(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 218)
  def _reduce_109(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 219)
  def _reduce_110(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 220)
  def _reduce_111(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 221)
  def _reduce_112(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
