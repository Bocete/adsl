#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'adsl/parser/adsl_parser.rex'
require 'adsl/fol/first_order_logic'

module ADSL
  module Parser

class ADSLParser < Racc::Parser

module_eval(<<'...end adsl_parser.racc/module_eval...', 'adsl_parser.racc', 153)

# generated by racc
  def generate_ast(str)
    scan str
    # do_parse
  end

  def parse(str)
    generate_ast(str).typecheck_and_resolve
  end

...end adsl_parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    52,    54,    53,    50,    51,    52,    54,    53,    50,    51,
    52,    54,    53,    50,    51,    52,    54,    53,    50,    51,
    52,    54,    53,    50,    51,    39,    46,    39,   174,    46,
    46,    46,    46,    46,    46,   120,   121,    52,    54,    53,
    50,    51,     6,   116,   112,     7,    47,    48,   115,    37,
   110,    52,    89,   114,   111,    46,     8,   147,   110,   124,
    46,   109,   149,   107,   117,    40,   172,   173,   103,   104,
   118,   105,   124,    20,    49,    46,    36,    16,    17,    18,
    19,     6,    24,    25,     7,    34,    22,    31,    32,    26,
    30,    28,    29,    94,    57,     8,    98,    99,   119,    20,
    46,    27,   124,    16,    17,    18,    19,    33,    24,    25,
   125,    34,    22,    31,    32,    26,    30,    28,    29,   137,
    57,   126,    98,    99,   108,    20,    87,    27,   106,    16,
    17,    18,    19,    33,    24,    25,   130,    34,    22,    31,
    32,    26,    30,    28,    29,    46,    57,    52,    54,    53,
   101,    20,   100,    27,    39,    16,    17,    18,    19,    33,
    24,    25,   135,    34,    22,    31,    32,    26,    30,    28,
    29,    87,    57,    52,    54,    53,    87,    20,    76,    27,
   145,    16,    17,    18,    19,    33,    24,    25,   146,    34,
    22,    31,    32,    26,    30,    28,    29,    73,    57,   163,
   164,   161,   162,    20,    46,    27,   -20,    16,    17,    18,
    19,    33,    24,    25,    65,    34,    22,    31,    32,    26,
    30,    28,    29,    63,    57,    98,    99,    98,    99,    20,
    52,    27,   152,    16,    17,    18,    19,    33,    24,    25,
   153,    34,    22,    31,    32,    26,    30,    28,    29,    62,
    57,   155,    61,   157,   124,    20,    60,    27,   160,    16,
    17,    18,    19,    33,    24,    25,    56,    34,    22,    31,
    32,    26,    30,    28,    29,    55,    57,   165,   166,    46,
   167,    20,   168,    27,    45,    16,    17,    18,    19,    33,
    24,    25,    44,    34,    22,    31,    32,    26,    30,    28,
    29,    43,    57,    42,    41,   124,   179,    20,    38,    27,
    46,    16,    17,    18,    19,    33,    24,    25,    35,    34,
    22,    31,    32,    26,    30,    28,    29,    14,    57,    13,
     9,   184,   124,    20,    46,    27,    46,    16,    17,    18,
    19,    33,    24,    25,    46,    34,    22,    31,    32,    26,
    30,    28,    29,   124,    57,   nil,   nil,   nil,   nil,    20,
   nil,    27,   nil,    16,    17,    18,    19,    33,    24,    25,
   nil,    34,    22,    31,    32,    26,    30,    28,    29,   nil,
    15,   nil,   nil,   nil,   nil,    20,   nil,    27,   nil,    16,
    17,    18,    19,    33,    24,    25,   nil,    34,    22,    31,
    32,    26,    30,    28,    29,   nil,    57,   nil,   nil,   nil,
   nil,    20,   nil,    27,   nil,    16,    17,    18,    19,    33,
    24,    25,   nil,    34,    22,    31,    32,    26,    30,    28,
    29,   nil,    57,   nil,   nil,   nil,   nil,    20,   nil,    27,
   nil,    16,    17,    18,    19,    33,    24,    25,   nil,    34,
    22,    31,    32,    26,    30,    28,    29,   nil,    57,   nil,
   nil,   nil,   nil,    20,   nil,    27,   nil,    16,    17,    18,
    19,    33,    24,    25,   nil,    34,    22,    31,    32,    26,
    30,    28,    29,   nil,    57,   nil,   nil,   nil,   nil,    20,
   nil,    27,   nil,    16,    17,    18,    19,    33,    24,    25,
   nil,    34,    22,    31,    32,    26,    30,    28,    29,   nil,
    57,   nil,   142,   143,    20,   141,   144,    27,    16,    17,
    18,    19,   nil,    33,   nil,   nil,     6,    22,   nil,     7,
   142,   143,    20,   141,   144,    57,    16,    17,    18,    19,
     8,   nil,    20,   nil,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    74,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,   nil,    20,    57,   nil,    22,    16,    17,    18,    19,
   nil,     6,   nil,    57,     7,    22,    52,    54,    53,    50,
    51,   nil,   nil,    57,   nil,     8,    52,    54,    53,    50,
    51,    52,    54,    53,    50,    51,    52,    54,    53,    50,
    51,    52,    54,    53,    50,    51 ]

racc_action_check = [
    91,    91,    91,    91,    91,    90,    90,    90,    90,    90,
    59,    59,    59,    59,    59,   127,   127,   127,   127,   127,
   133,   133,   133,   133,   133,    15,    92,    74,   166,   175,
   134,    70,    71,    93,    72,    97,    97,   159,   159,   159,
   159,   159,     0,    91,    87,     0,    21,    21,    90,    13,
    88,    83,    59,    88,    87,    21,     0,   127,    85,   175,
    79,    85,   133,    74,    92,    15,   166,   166,    70,    71,
    93,    72,   159,    26,    21,    78,    13,    26,    26,    26,
    26,     4,    26,    26,     4,    26,    26,    26,    26,    26,
    26,    26,    26,    64,    26,     4,    64,    64,    96,   115,
    77,    26,   101,   115,   115,   115,   115,    26,   115,   115,
   102,   115,   115,   115,   115,   115,   115,   115,   115,   122,
   115,   108,   122,   122,    75,    54,   110,   115,    73,    54,
    54,    54,    54,   115,    54,    54,   113,    54,    54,    54,
    54,    54,    54,    54,    54,    68,    54,    80,    80,    80,
    66,    52,    65,    54,    57,    52,    52,    52,    52,    54,
    52,    52,   119,    52,    52,    52,    52,    52,    52,    52,
    52,    56,    52,    81,    81,    81,    55,   109,    46,    52,
   125,   109,   109,   109,   109,    52,   109,   109,   126,   109,
   109,   109,   109,   109,   109,   109,   109,    44,   109,   150,
   150,   148,   148,   114,   129,   109,    38,   114,   114,   114,
   114,   109,   114,   114,    37,   114,   114,   114,   114,   114,
   114,   114,   114,    34,   114,    67,    67,   120,   120,    51,
    84,   114,   135,    51,    51,    51,    51,   114,    51,    51,
   138,    51,    51,    51,    51,    51,    51,    51,    51,    30,
    51,   140,    29,   142,   143,    53,    28,    51,   145,    53,
    53,    53,    53,    51,    53,    53,    25,    53,    53,    53,
    53,    53,    53,    53,    53,    24,    53,   152,   155,   156,
   157,    27,   158,    53,    20,    27,    27,    27,    27,    53,
    27,    27,    19,    27,    27,    27,    27,    27,    27,    27,
    27,    18,    27,    17,    16,   168,   169,   144,    14,    27,
   171,   144,   144,   144,   144,    27,   144,   144,     9,   144,
   144,   144,   144,   144,   144,   144,   144,     7,   144,     6,
     1,   176,   179,    50,   180,   144,   181,    50,    50,    50,
    50,   144,    50,    50,   182,    50,    50,    50,    50,    50,
    50,    50,    50,   184,    50,   nil,   nil,   nil,   nil,     8,
   nil,    50,   nil,     8,     8,     8,     8,    50,     8,     8,
   nil,     8,     8,     8,     8,     8,     8,     8,     8,   nil,
     8,   nil,   nil,   nil,   nil,    60,   nil,     8,   nil,    60,
    60,    60,    60,     8,    60,    60,   nil,    60,    60,    60,
    60,    60,    60,    60,    60,   nil,    60,   nil,   nil,   nil,
   nil,    40,   nil,    60,   nil,    40,    40,    40,    40,    60,
    40,    40,   nil,    40,    40,    40,    40,    40,    40,    40,
    40,   nil,    40,   nil,   nil,   nil,   nil,    61,   nil,    40,
   nil,    61,    61,    61,    61,    40,    61,    61,   nil,    61,
    61,    61,    61,    61,    61,    61,    61,   nil,    61,   nil,
   nil,   nil,   nil,   162,   nil,    61,   nil,   162,   162,   162,
   162,    61,   162,   162,   nil,   162,   162,   162,   162,   162,
   162,   162,   162,   nil,   162,   nil,   nil,   nil,   nil,   116,
   nil,   162,   nil,   116,   116,   116,   116,   162,   116,   116,
   nil,   116,   116,   116,   116,   116,   116,   116,   116,   nil,
   116,   nil,   139,   139,   139,   139,   139,   116,   139,   139,
   139,   139,   nil,   116,   nil,   nil,     3,   139,   nil,     3,
   124,   124,   124,   124,   124,   139,   124,   124,   124,   124,
     3,   nil,    41,   nil,   nil,   124,    41,    41,    41,    41,
   nil,   nil,    39,   124,   nil,    41,    39,    39,    39,    39,
   nil,   nil,    48,    41,   nil,    39,    48,    48,    48,    48,
   nil,   nil,    49,    39,   nil,    48,    49,    49,    49,    49,
   nil,   nil,   141,    48,   nil,    49,   141,   141,   141,   141,
   nil,   nil,   112,    49,   nil,   141,   112,   112,   112,   112,
   nil,   nil,    45,   141,   nil,   112,    45,    45,    45,    45,
   nil,   nil,   164,   112,   nil,    45,   164,   164,   164,   164,
   nil,   nil,   167,    45,   nil,   164,   167,   167,   167,   167,
   nil,   nil,    43,   164,   nil,   167,    43,    43,    43,    43,
   nil,   nil,   172,   167,   nil,    43,   172,   172,   172,   172,
   nil,   nil,   117,    43,   nil,   172,   117,   117,   117,   117,
   nil,   nil,   173,   172,   nil,   117,   173,   173,   173,   173,
   nil,   nil,   174,   117,   nil,   173,   174,   174,   174,   174,
   nil,   nil,    42,   173,   nil,   174,    42,    42,    42,    42,
   nil,   nil,    62,   174,   nil,    42,    62,    62,    62,    62,
   nil,   nil,    63,    42,   nil,    62,    63,    63,    63,    63,
   nil,   nil,    47,    62,   nil,    63,    47,    47,    47,    47,
   nil,     5,   nil,    63,     5,    47,   131,   131,   131,   131,
   131,   nil,   nil,    47,   nil,     5,    69,    69,    69,    69,
    69,   170,   170,   170,   170,   170,    23,    23,    23,    23,
    23,   132,   132,   132,   132,   132 ]

racc_action_pointer = [
    29,   330,   nil,   513,    68,   708,   289,   287,   340,   318,
   nil,   nil,   nil,    35,   261,    13,   257,   256,   254,   245,
   237,    44,   nil,   740,   228,   219,    54,   262,   209,   205,
   202,   nil,   nil,   nil,   176,   nil,   nil,   174,   158,   533,
   392,   523,   663,   613,   157,   583,   138,   693,   543,   553,
   314,   210,   132,   236,   106,   136,   131,   142,   nil,     4,
   366,   418,   673,   683,    51,   111,   102,   180,   134,   730,
    20,    21,    23,    80,    15,   113,   nil,    89,    64,    49,
   141,   167,   nil,    45,   224,     9,   nil,    14,     1,   nil,
    -1,    -6,    15,    22,   nil,   nil,    58,    -8,   nil,   nil,
   nil,    61,    70,   nil,   nil,   nil,   nil,   nil,    81,   158,
    86,   nil,   573,    88,   184,    80,   470,   633,   nil,   122,
   182,   nil,    77,   nil,   513,   140,   140,     9,   nil,   193,
   nil,   720,   745,    14,    19,   217,   nil,   nil,   198,   495,
   240,   563,   213,   213,   288,   209,   nil,   nil,   153,   nil,
   151,   nil,   237,   nil,   nil,   238,   268,   228,   272,    31,
   nil,   nil,   444,   nil,   593,   nil,    16,   603,   264,   284,
   735,   299,   623,   643,   653,    18,   321,   nil,   nil,   291,
   323,   325,   333,   nil,   312,   nil,   nil ]

racc_action_default = [
    -5,   -79,    -1,    -5,    -5,    -5,   -79,   -79,   -79,   -79,
    -2,    -3,    -4,   -79,   -79,   -38,   -79,   -79,   -79,   -79,
   -79,   -79,   -47,   -48,   -79,   -79,   -79,   -79,   -79,   -79,
   -79,   -65,   -66,   -67,   -79,   187,    -9,   -79,   -22,   -79,
   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,
   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -38,   -52,   -79,
   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -39,   -49,
   -79,   -79,   -79,   -79,   -38,   -79,   -46,   -61,   -62,   -64,
   -53,   -54,   -55,   -56,   -57,   -79,   -70,   -79,   -74,   -58,
   -79,   -79,   -79,   -79,    -6,    -8,   -79,   -11,   -14,   -15,
    -9,   -79,   -79,   -40,   -41,   -42,   -43,   -44,   -79,   -79,
   -79,   -71,   -79,   -79,   -79,   -79,   -79,   -79,   -68,   -79,
   -79,   -13,   -79,   -18,   -25,   -79,   -46,   -79,   -69,   -72,
   -51,   -73,   -76,   -79,   -78,   -17,   -12,    -7,   -79,   -25,
   -26,   -79,   -79,   -79,   -79,   -19,   -45,   -50,   -79,   -60,
   -79,   -10,   -79,   -23,   -24,   -79,   -27,   -79,   -79,   -79,
   -21,   -59,   -79,   -63,   -79,   -16,   -46,   -79,   -79,   -35,
   -75,   -77,   -79,   -79,   -79,   -79,   -32,   -37,   -33,   -79,
   -28,   -29,   -30,   -31,   -79,   -34,   -36 ]

racc_goto_table = [
    23,    64,   138,     2,     1,   123,    10,    11,    12,    85,
    88,    67,    66,   136,   176,   151,   178,   154,    58,    59,
   102,   113,   148,   150,   128,    68,   nil,    70,    71,    72,
   nil,    75,    69,    77,    78,    79,   nil,   nil,   nil,   nil,
   nil,   nil,    80,    81,    82,    83,    84,   158,    92,    93,
   nil,   nil,    90,    91,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   169,   nil,   122,   nil,   nil,   nil,   nil,
   nil,   nil,   177,   nil,   nil,   nil,   nil,   nil,   nil,   183,
   nil,   nil,   nil,   185,   nil,   nil,   nil,   nil,   186,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   129,   nil,
   nil,   127,   nil,   134,   nil,   nil,   131,   132,   133,   nil,
   140,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   140,   nil,   156,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   159,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   171,   nil,   nil,   175,   170,   nil,   nil,   nil,   180,   181,
   182 ]

racc_goto_check = [
    18,     6,    14,     2,     1,    12,     2,     2,     2,    20,
    20,    13,    11,    10,    17,     9,    19,    14,    18,    18,
     8,    21,    22,    23,    24,    16,   nil,    16,    16,    16,
   nil,    16,    18,    16,    16,    16,   nil,   nil,   nil,   nil,
   nil,   nil,    18,    18,    18,    18,    18,    12,    16,    16,
   nil,   nil,    18,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    12,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,    12,
   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,    12,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,
   nil,    18,   nil,    16,   nil,   nil,    18,    18,    18,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,    16,    18,   nil,   nil,   nil,    16,    16,
    16 ]

racc_goto_pointer = [
   nil,     4,     3,   nil,   nil,   nil,   -35,   nil,   -47,  -120,
  -107,   -26,   -96,   -27,  -122,   nil,   -14,  -154,    -8,  -153,
   -46,   -67,  -110,  -111,   -86 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,   nil,    95,    96,   nil,
    97,   nil,   nil,   nil,   nil,   139,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    86 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 55, :_reduce_1,
  2, 56, :_reduce_2,
  2, 56, :_reduce_3,
  2, 56, :_reduce_4,
  0, 56, :_reduce_5,
  5, 57, :_reduce_6,
  7, 57, :_reduce_7,
  2, 60, :_reduce_8,
  0, 60, :_reduce_9,
  4, 61, :_reduce_10,
  1, 62, :_reduce_11,
  3, 62, :_reduce_12,
  2, 62, :_reduce_13,
  1, 64, :_reduce_14,
  1, 64, :_reduce_15,
  2, 63, :_reduce_16,
  0, 63, :_reduce_17,
  6, 58, :_reduce_18,
  4, 65, :_reduce_19,
  0, 65, :_reduce_20,
  5, 67, :_reduce_21,
  0, 67, :_reduce_22,
  3, 66, :_reduce_23,
  2, 68, :_reduce_24,
  0, 68, :_reduce_25,
  1, 69, :_reduce_26,
  2, 69, :_reduce_27,
  5, 69, :_reduce_28,
  5, 69, :_reduce_29,
  5, 69, :_reduce_30,
  5, 69, :_reduce_31,
  4, 69, :_reduce_32,
  4, 69, :_reduce_33,
  2, 73, :_reduce_34,
  0, 73, :_reduce_35,
  3, 71, :_reduce_36,
  1, 71, :_reduce_37,
  1, 70, :_reduce_38,
  3, 70, :_reduce_39,
  4, 70, :_reduce_40,
  4, 70, :_reduce_41,
  4, 70, :_reduce_42,
  4, 70, :_reduce_43,
  4, 70, :_reduce_44,
  6, 70, :_reduce_45,
  3, 70, :_reduce_46,
  1, 70, :_reduce_47,
  2, 59, :_reduce_48,
  4, 59, :_reduce_49,
  6, 72, :_reduce_50,
  5, 72, :_reduce_51,
  2, 72, :_reduce_52,
  3, 72, :_reduce_53,
  3, 72, :_reduce_54,
  3, 72, :_reduce_55,
  3, 72, :_reduce_56,
  3, 72, :_reduce_57,
  3, 72, :_reduce_58,
  7, 72, :_reduce_59,
  6, 72, :_reduce_60,
  3, 72, :_reduce_61,
  3, 72, :_reduce_62,
  7, 72, :_reduce_63,
  3, 72, :_reduce_64,
  1, 72, :_reduce_65,
  1, 72, :_reduce_66,
  1, 72, :_reduce_67,
  4, 72, :_reduce_68,
  3, 74, :_reduce_69,
  1, 74, :_reduce_70,
  2, 78, :_reduce_71,
  3, 78, :_reduce_72,
  2, 75, :_reduce_73,
  0, 75, :_reduce_74,
  3, 76, :_reduce_75,
  0, 76, :_reduce_76,
  3, 77, :_reduce_77,
  0, 77, :_reduce_78 ]

racc_reduce_n = 79

racc_shift_n = 187

racc_token_table = {
  false => 0,
  :error => 1,
  "==" => 2,
  "!=" => 3,
  :noassoc => 4,
  :NOT => 5,
  "<=>" => 6,
  "<=" => 7,
  "=>" => 8,
  :and => 9,
  :or => 10,
  "." => 11,
  "=" => 12,
  :class => 13,
  :extends => 14,
  :inverseof => 15,
  :action => 16,
  :foreach => 17,
  :either => 18,
  :create => 19,
  :delete => 20,
  :if => 21,
  :else => 22,
  :subset => 23,
  :oneof => 24,
  :forceoneof => 25,
  :allof => 26,
  :invariant => 27,
  :forall => 28,
  :exists => 29,
  :in => 30,
  :isempty => 31,
  :empty => 32,
  :true => 33,
  :false => 34,
  :not => 35,
  :equal => 36,
  :equiv => 37,
  :implies => 38,
  :unknown => 39,
  :IDENT => 40,
  "{" => 41,
  "}" => 42,
  ".." => 43,
  "+" => 44,
  "0" => 45,
  "1" => 46,
  "(" => 47,
  ")" => 48,
  "," => 49,
  "+=" => 50,
  "-=" => 51,
  ":" => 52,
  "*" => 53 }

racc_nt_base = 54

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"==\"",
  "\"!=\"",
  "noassoc",
  "NOT",
  "\"<=>\"",
  "\"<=\"",
  "\"=>\"",
  "and",
  "or",
  "\".\"",
  "\"=\"",
  "class",
  "extends",
  "inverseof",
  "action",
  "foreach",
  "either",
  "create",
  "delete",
  "if",
  "else",
  "subset",
  "oneof",
  "forceoneof",
  "allof",
  "invariant",
  "forall",
  "exists",
  "in",
  "isempty",
  "empty",
  "true",
  "false",
  "not",
  "equal",
  "equiv",
  "implies",
  "unknown",
  "IDENT",
  "\"{\"",
  "\"}\"",
  "\"..\"",
  "\"+\"",
  "\"0\"",
  "\"1\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"+=\"",
  "\"-=\"",
  "\":\"",
  "\"*\"",
  "$start",
  "adslspec",
  "root_elems",
  "class_decl",
  "action_decl",
  "invariant_decl",
  "rel_decls",
  "rel_decl",
  "cardinality",
  "inverse_suffix",
  "card_number",
  "action_args",
  "block",
  "additional_args",
  "statements",
  "statement",
  "objset",
  "eitherblocks",
  "formula",
  "optelse",
  "quantifier_parameters_with_commas",
  "optional_formula",
  "additional_formulae",
  "additional_objsets",
  "quantifier_parameter" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'adsl_parser.racc', 13)
  def _reduce_1(val, _values, result)
     return ASTSpec.new :lineno => lineno, :classes => val[0][0], :actions => val[0][1], :invariants => val[0][2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 15)
  def _reduce_2(val, _values, result)
     val[1][0].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 16)
  def _reduce_3(val, _values, result)
     val[1][1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 17)
  def _reduce_4(val, _values, result)
     val[1][2].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 18)
  def _reduce_5(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 21)
  def _reduce_6(val, _values, result)
     return ASTClass.new :lineno => val[0], :name => val[1], :relations => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 23)
  def _reduce_7(val, _values, result)
     return ASTClass.new :lineno => val[0], :name => val[1], :parent_name => val[3], :relations => val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 25)
  def _reduce_8(val, _values, result)
     val[0] << val[1]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 26)
  def _reduce_9(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 28)
  def _reduce_10(val, _values, result)
     return ASTRelation.new :lineno => val[0][2], :cardinality => val[0].first(2), :to_class_name => val[1], :name => val[2], :inverse_of_name => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 30)
  def _reduce_11(val, _values, result)
     return [val[0][0], val[0][0], val[0][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 31)
  def _reduce_12(val, _values, result)
     return [val[0][0], val[2][0], val[0][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 32)
  def _reduce_13(val, _values, result)
     return [val[0][0], 1.0/0.0, val[0][1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 34)
  def _reduce_14(val, _values, result)
     return [0, lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 35)
  def _reduce_15(val, _values, result)
     return [1, lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 37)
  def _reduce_16(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 38)
  def _reduce_17(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 40)
  def _reduce_18(val, _values, result)
     return ASTAction.new(:lineno => val[0], :name => val[1], :arg_cardinalities => val[3][0], :arg_types => val[3][1], :arg_names => val[3][2], :block => val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 42)
  def _reduce_19(val, _values, result)
     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 43)
  def _reduce_20(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 45)
  def _reduce_21(val, _values, result)
     val[0][0] << val[1]; val[0][1] << val[2]; val[0][2] << val[3]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 46)
  def _reduce_22(val, _values, result)
     return [[], [], []] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 48)
  def _reduce_23(val, _values, result)
     return ASTBlock.new :lineno => val[0], :statements => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 50)
  def _reduce_24(val, _values, result)
     val[1].unshift val[0]; return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 51)
  def _reduce_25(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 53)
  def _reduce_26(val, _values, result)
     return ASTObjsetStmt.new :lineno => val[0].lineno, :objset => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 54)
  def _reduce_27(val, _values, result)
     return ASTDeleteObj.new :lineno => val[0], :objset => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 56)
  def _reduce_28(val, _values, result)
                   return ASTCreateTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 59)
  def _reduce_29(val, _values, result)
                   return ASTDeleteTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 62)
  def _reduce_30(val, _values, result)
                   return ASTSetTup.new :lineno => val[0].lineno, :objset1 => val[0], :rel_name => val[2], :objset2 => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 65)
  def _reduce_31(val, _values, result)
                   return ASTForEach.new :lineno => val[0], :var_name => val[1], :objset => val[3], :block => val[4]
             
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 67)
  def _reduce_32(val, _values, result)
     val[3].unshift val[1]; return ASTEither.new :lineno => val[0], :blocks => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 68)
  def _reduce_33(val, _values, result)
     return ASTIf.new :lineno => val[0], :condition => val[1], :then_block => val[2], :else_block => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 70)
  def _reduce_34(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 71)
  def _reduce_35(val, _values, result)
     return ASTBlock.new :statements => [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 73)
  def _reduce_36(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 74)
  def _reduce_37(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 76)
  def _reduce_38(val, _values, result)
     return ASTVariable.new :lineno => val[0].lineno, :var_name => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 77)
  def _reduce_39(val, _values, result)
     return ASTAssignment.new :lineno => val[0].lineno, :var_name => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 78)
  def _reduce_40(val, _values, result)
     return ASTSubset.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 79)
  def _reduce_41(val, _values, result)
     return ASTOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 80)
  def _reduce_42(val, _values, result)
     return ASTForceOneOf.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 81)
  def _reduce_43(val, _values, result)
     return ASTAllOf.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 82)
  def _reduce_44(val, _values, result)
     return ASTCreateObjset.new :lineno => val[0], :class_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 84)
  def _reduce_45(val, _values, result)
                return ASTDereferenceBuild.new :lineno => val[0].lineno, :objset => val[2], :rel_name => val[4]
          
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 86)
  def _reduce_46(val, _values, result)
     return ASTDereference.new :lineno => val[0].lineno, :objset => val[0], :rel_name => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 87)
  def _reduce_47(val, _values, result)
     return ASTEmptyObjset.new :lineno => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 89)
  def _reduce_48(val, _values, result)
     return ASTInvariant.new :lineno => val[0], :name => nil, :formula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 90)
  def _reduce_49(val, _values, result)
     return ASTInvariant.new :lineno => val[0], :name => val[1], :formula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 93)
  def _reduce_50(val, _values, result)
     return ASTForAll.new :lineno => val[0], :vars => val[2], :subformula => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 95)
  def _reduce_51(val, _values, result)
     return ASTExists.new :lineno => val[0], :vars => val[2], :subformula => val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 97)
  def _reduce_52(val, _values, result)
     return ASTNot.new :lineno => val[0], :subformula => val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 99)
  def _reduce_53(val, _values, result)
     return ASTAnd.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 101)
  def _reduce_54(val, _values, result)
     return ASTOr.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 103)
  def _reduce_55(val, _values, result)
     return ASTEquiv.new :lineno => val[0].lineno, :subformulae => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 105)
  def _reduce_56(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[0], :subformula2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 107)
  def _reduce_57(val, _values, result)
     return ASTImplies.new :lineno => val[0].lineno, :subformula1 => val[2], :subformula2 => val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 108)
  def _reduce_58(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 110)
  def _reduce_59(val, _values, result)
     return ASTEquiv.new :lineno => val[0], :subformulae => [val[2], val[4]] + val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 112)
  def _reduce_60(val, _values, result)
     return ASTImplies.new :lineno => val[0], :subformula1 => val[2], :subformula2 => val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 114)
  def _reduce_61(val, _values, result)
     return ASTEqual.new :lineno => val[0].lineno, :objsets => [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 116)
  def _reduce_62(val, _values, result)
     return ASTNot.new(:lineno => val[0].lineno, :subformula => ASTEqual.new(:lineno => val[0].lineno, :objsets => [val[0], val[2]])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 118)
  def _reduce_63(val, _values, result)
     return ASTEqual.new :lineno => val[0], :objsets => [val[2], val[4]] + val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 119)
  def _reduce_64(val, _values, result)
     return ASTIn.new :lineno => val[0].lineno, :objset1 => val[0], :objset2 => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 120)
  def _reduce_65(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => true  
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 121)
  def _reduce_66(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => false 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 122)
  def _reduce_67(val, _values, result)
     return ASTBoolean.new :lineno => val[0], :bool_value => nil   
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 123)
  def _reduce_68(val, _values, result)
     return ASTIsEmpty.new :lineno => val[0], :objset => val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 126)
  def _reduce_69(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 127)
  def _reduce_70(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 129)
  def _reduce_71(val, _values, result)
     return [val[1], ASTAllOf.new(:lineno => val[0].lineno, :class_name => val[0]), val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 130)
  def _reduce_72(val, _values, result)
     return [val[0], val[2], val[0].lineno] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 132)
  def _reduce_73(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 133)
  def _reduce_74(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 135)
  def _reduce_75(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 136)
  def _reduce_76(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 138)
  def _reduce_77(val, _values, result)
     val[0] << val[2]; return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'adsl_parser.racc', 139)
  def _reduce_78(val, _values, result)
     return [] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ADSLParser


  end
end
